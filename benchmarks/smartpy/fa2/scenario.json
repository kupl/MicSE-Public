[
 {
  "shortname": "FA2-no_totsup",
  "longname": "FA2-no_totsup",
  "scenario": [
   {
    "action": "html",
    "inner": "FA2 Contract Name: FA2-no_totsup",
    "line_no": "(\"fa2.py\" 713)",
    "tag": "h1"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 714)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Accounts",
    "line_no": "(\"fa2.py\" 720)",
    "tag": "h2"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 721) list ((\"fa2.py\" 716) account_of_seed \"Administrator\") ((\"fa2.py\" 717) account_of_seed \"Alice\") ((\"fa2.py\" 718) account_of_seed \"Robert\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 721)",
    "stripStrings": false
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 725) static_id 0) \nstorage ((\"fa2.py\" 360) record (administrator ((\"fa2.py\" 716) resolve ((\"fa2.py\" 716) attr ((\"fa2.py\" 716) account_of_seed \"Administrator\") \"address\"))) (all_tokens ((\"fa2.py\" 299) literal (nat 0))) (ledger ((\"fa2.py\" 361) type_annotation ((\"fa2.py\" 361) big_map ) (bigmap (unknown 2) (record ((balance \"nat\")) None (\"fa2.py\" 221))))) (metadata ((\"fa2.py\" 723) big_map (((\"fa2.py\" 725) literal (string \"\")) ((\"fa2.py\" 723) literal (bytes \"0x68747470733a2f2f6578616d706c652e636f6d\"))))) (operators ((\"fa2.py\" 244) type_annotation ((\"fa2.py\" 244) big_map ) (bigmap (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)) \"unit\"))) (paused ((\"fa2.py\" 360) literal (bool False))) (token_metadata ((\"fa2.py\" 362) type_annotation ((\"fa2.py\" 362) big_map ) (bigmap \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) None (\"fa2.py\" 282))))))\nstorage_type (())\nentry_points ((balance_of True None None None True None (\"fa2.py\" 417) (((\"fa2.py\" 419) verify ((\"fa2.py\" 419) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 419) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 420) set_type ((\"fa2.py\" 417) params) (record ((callback (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))))) (requests (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263))))) (Some ((\"requests\") (\"callback\"))) (\"fa2.py\" 272))) ((\"fa2.py\" 439) define_local \"responses\" ((\"fa2.py\" 439) map_function ((\"fa2.py\" 439) attr ((\"fa2.py\" 417) params) \"requests\") ((\"fa2.py\" 439) lambda 0 None False None \"\" (((\"fa2.py\" 423) verify ((\"fa2.py\" 423) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 3)) \"token_id\")) ((\"fa2.py\" 423) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 424) if_block ((\"fa2.py\" 424) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 3)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 3)) \"token_id\") \"nat\"))) (((\"fa2.py\" 426) result ((\"fa2.py\" 427) record (balance ((\"fa2.py\" 425) attr ((\"fa2.py\" 425) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 3)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 3)) \"token_id\") \"nat\"))) \"balance\")) (request ((\"fa2.py\" 428) record (owner ((\"fa2.py\" 429) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 3)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 430) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 3)) \"token_id\") \"nat\")))))))) (else_block (((\"fa2.py\" 433) result ((\"fa2.py\" 434) record (balance ((\"fa2.py\" 434) literal (intOrNat 0))) (request ((\"fa2.py\" 435) record (owner ((\"fa2.py\" 436) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 3)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 437) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 3)) \"token_id\") \"nat\"))))))))))) True) ((\"fa2.py\" 441) set ((\"fa2.py\" 441) operations) ((\"fa2.py\" 441) cons ((\"fa2.py\" 441) transfer ((\"fa2.py\" 441) get_local \"responses\") ((\"fa2.py\" 441) literal (mutez 0)) ((\"fa2.py\" 440) type_annotation ((\"fa2.py\" 440) attr ((\"fa2.py\" 417) params) \"callback\") (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))))) ((\"fa2.py\" 441) operations))))) (mint True None None None True None (\"fa2.py\" 522) (((\"fa2.py\" 523) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 523) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 534) if_block ((\"fa2.py\" 534) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) (((\"fa2.py\" 535) set ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\"))))) (else_block (((\"fa2.py\" 537) set ((\"fa2.py\" 537) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\")))))) ((\"fa2.py\" 538) if_block ((\"fa2.py\" 538) not ((\"fa2.py\" 310) lt ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\"))) (((\"fa2.py\" 304) verify ((\"fa2.py\" 304) eq ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 304) literal (string \"Token-IDs should be consecutive\"))) ((\"fa2.py\" 305) set ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 305) add ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 305) literal (intOrNat 1)))) ((\"fa2.py\" 540) set ((\"fa2.py\" 540) get_item ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 540) record (token_id ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) (token_info ((\"fa2.py\" 542) attr ((\"fa2.py\" 522) params) \"metadata\")))))))) (set_administrator True None None None True None (\"fa2.py\" 501) (((\"fa2.py\" 502) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 502) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 503) set ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\") ((\"fa2.py\" 501) params)))) (set_metadata True None None None True None (\"fa2.py\" 516) (((\"fa2.py\" 517) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 517) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 518) set ((\"fa2.py\" 518) get_item ((\"fa2.py\" 518) attr ((\"fa2.py\" 725) data) \"metadata\") ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"k\")) ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"v\")))) (set_pause True None None None True None (\"fa2.py\" 510) (((\"fa2.py\" 511) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 511) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 512) set ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\") ((\"fa2.py\" 510) params)))) (transfer True None None None True None (\"fa2.py\" 375) (((\"fa2.py\" 376) verify ((\"fa2.py\" 376) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 376) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 377) set_type ((\"fa2.py\" 375) params) (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169)))) ((\"fa2.py\" 378) for_group \"transfer\" ((\"fa2.py\" 375) params) (((\"fa2.py\" 380) for_group \"tx\" ((\"fa2.py\" 380) attr ((\"fa2.py\" 378) iter \"transfer\") \"txs\") (((\"fa2.py\" 395) verify ((\"fa2.py\" 389) or ((\"fa2.py\" 384) or ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 385) eq ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") ((\"\" -1) sender))) ((\"fa2.py\" 259) contains ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"\" -1) sender)) (owner ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\")) (token_id ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))) ((\"fa2.py\" 395) literal (string \"FA2_NOT_OPERATOR\"))) ((\"fa2.py\" 396) verify ((\"fa2.py\" 397) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\")) ((\"fa2.py\" 396) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 401) if_block ((\"fa2.py\" 401) gt ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\") ((\"fa2.py\" 401) literal (intOrNat 0))) (((\"fa2.py\" 403) verify ((\"fa2.py\" 404) ge ((\"fa2.py\" 404) attr ((\"fa2.py\" 404) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")) ((\"fa2.py\" 403) literal (string \"FA2_INSUFFICIENT_BALANCE\"))) ((\"fa2.py\" 407) set ((\"fa2.py\" 407) attr ((\"fa2.py\" 407) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 407) open_variant ((\"fa2.py\" 407) is_nat ((\"fa2.py\" 408) sub ((\"fa2.py\" 408) attr ((\"fa2.py\" 408) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))) \"Some\" \"None\")) ((\"fa2.py\" 409) if_block ((\"fa2.py\" 409) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) (((\"fa2.py\" 410) set ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 410) add ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))))) (else_block (((\"fa2.py\" 412) set ((\"fa2.py\" 412) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")))))))) (else_block ()))))))) (update_operators True None None None True None (\"fa2.py\" 457) (((\"fa2.py\" 458) set_type ((\"fa2.py\" 457) params) (list (variant ((add_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189))) (remove_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) None (\"fa2.py\" 459)))) ((\"fa2.py\" 465) for_group \"update\" ((\"fa2.py\" 457) params) (((\"fa2.py\" 466) match_cases ((\"fa2.py\" 465) iter \"update\") \"match_fa2_466\" (((\"fa2.py\" 467) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"add_operator\" \"add_operator\" (((\"fa2.py\" 468) verify ((\"fa2.py\" 469) or ((\"fa2.py\" 469) eq ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 468) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 255) set ((\"fa2.py\" 255) get_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 474) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"operator\")) (owner ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\")) (token_id ((\"fa2.py\" 475) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))) ((\"\" -1) literal (unit))))) ((\"fa2.py\" 476) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"remove_operator\" \"remove_operator\" (((\"fa2.py\" 477) verify ((\"fa2.py\" 478) or ((\"fa2.py\" 478) eq ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 477) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 257) del_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 483) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"operator\")) (owner ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\")) (token_id ((\"fa2.py\" 484) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))))))))))))\nflags ((initial-cast) (exceptions default-line))\nprivates ()\nviews ((offchain all_tokens False (\"fa2.py\" 586) True \"\\n            This view is specified (but optional) in the standard.\\n\\n            This contract is built with assume_consecutive_token_ids =\\n            True, so we return a list constructed from the number of tokens.\\n            \" (((\"fa2.py\" 588) result ((\"fa2.py\" 588) range ((\"fa2.py\" 588) literal (intOrNat 0)) ((\"fa2.py\" 588) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 588) literal (intOrNat 1)))))) (offchain count_tokens False (\"fa2.py\" 574) True \"Get how many tokens are in this FA2 contract.\\n        \" (((\"fa2.py\" 577) result ((\"fa2.py\" 577) attr ((\"fa2.py\" 725) data) \"all_tokens\")))) (offchain does_token_exist True (\"fa2.py\" 580) True \"Ask whether a token ID is exists.\" (((\"fa2.py\" 582) set_type ((\"fa2.py\" 580) params) \"nat\") ((\"fa2.py\" 583) result ((\"fa2.py\" 583) contains ((\"fa2.py\" 583) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 580) params))))) (offchain get_balance True (\"fa2.py\" 444) True \"This is the `get_balance` view defined in TZIP-12.\" (((\"fa2.py\" 446) set_type ((\"fa2.py\" 444) params) (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 447))) ((\"fa2.py\" 452) verify ((\"fa2.py\" 452) contains ((\"fa2.py\" 452) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\")) ((\"fa2.py\" 452) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 453) result ((\"fa2.py\" 453) attr ((\"fa2.py\" 453) get_item ((\"fa2.py\" 453) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\") \"nat\"))) \"balance\")))) (offchain is_operator True (\"fa2.py\" 601) True \"\" (((\"fa2.py\" 602) set_type ((\"fa2.py\" 601) params) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 603))) ((\"fa2.py\" 607) result ((\"fa2.py\" 259) contains ((\"fa2.py\" 608) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 610) attr ((\"fa2.py\" 601) params) \"operator\")) (owner ((\"fa2.py\" 609) attr ((\"fa2.py\" 601) params) \"owner\")) (token_id ((\"fa2.py\" 611) attr ((\"fa2.py\" 601) params) \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))))) (offchain token_metadata True (\"fa2.py\" 559) True \"Get Token Metadata\" (((\"fa2.py\" 556) set_type ((\"fa2.py\" 559) params) \"nat\") ((\"fa2.py\" 557) result ((\"fa2.py\" 557) get_item ((\"fa2.py\" 557) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 559) params))))) (offchain total_supply True (\"fa2.py\" 593) True \"\" (((\"fa2.py\" 597) set_type ((\"fa2.py\" 593) params) \"nat\") ((\"fa2.py\" 598) result ((\"fa2.py\" 598) literal (string \"total-supply not supported\"))))))\nentry_points_layout ()\ninitial_metadata ((metadata_base (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"version\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-no_totsup\")))) (elem ((\"fa2.py\" 674) literal (string \"description\")) (meta_expr ((\"fa2.py\" 674) literal (string \"This is a didactic reference implementation of FA2, a.k.a. TZIP-012, using SmartPy.\n\nThis particular contract uses the configuration named: FA2-no_totsup.\")))) (elem ((\"fa2.py\" 674) literal (string \"interfaces\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-012\"))) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-016\"))))) (elem ((\"fa2.py\" 674) literal (string \"authors\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"Seb Mondet <https://seb.mondet.org>\"))))) (elem ((\"fa2.py\" 674) literal (string \"homepage\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy\")))) (elem ((\"fa2.py\" 674) literal (string \"views\")) (meta_list (\"fa2.py\" 674) (meta_view \"get_balance\" (\"fa2.py\" 444)) (meta_view \"does_token_exist\" (\"fa2.py\" 580)) (meta_view \"count_tokens\" (\"fa2.py\" 574)) (meta_view \"all_tokens\" (\"fa2.py\" 586)) (meta_view \"is_operator\" (\"fa2.py\" 601)) (meta_view \"token_metadata\" (\"fa2.py\" 559)))) (elem ((\"fa2.py\" 674) literal (string \"source\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"tools\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"SmartPy\"))))) (elem ((\"fa2.py\" 674) literal (string \"location\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy.git\")))))) (elem ((\"fa2.py\" 674) literal (string \"permissions\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"operator\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-or-operator-transfer\")))) (elem ((\"fa2.py\" 674) literal (string \"receiver\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))) (elem ((\"fa2.py\" 674) literal (string \"sender\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))))) (elem ((\"fa2.py\" 674) literal (string \"fa2-smartpy\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"configuration\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"add_mutez_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"allow_self_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"assume_consecutive_token_ids\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"force_layouts\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"lazy_entry_points\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"name\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-no_totsup\")))) (elem ((\"fa2.py\" 674) literal (string \"non_fungible\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"readable\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"single_asset\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"store_total_supply\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"support_operator\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"use_token_metadata_offchain_view\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))))))))))\nbalance ())",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 725)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Initial Minting",
    "line_no": "(\"fa2.py\" 729)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "The administrator mints 100 token-0's to Alice.",
    "line_no": "(\"fa2.py\" 730)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 735)",
    "message": "mint",
    "params": "((\"fa2.py\" 735) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 735) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 735) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 735) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 735) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 735) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 740)",
    "message": "mint",
    "params": "((\"fa2.py\" 740) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 740) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 740) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 740) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 740) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 740) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Transfers Alice -> Bob",
    "line_no": "(\"fa2.py\" 744)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 745)",
    "message": "transfer",
    "params": "((\"fa2.py\" 745) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 749) record (amount ((\"fa2.py\" 749) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 749) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 755) eq ((\"fa2.py\" 755) attr ((\"fa2.py\" 755) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 755) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 754)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 757) eq ((\"fa2.py\" 757) attr ((\"fa2.py\" 757) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 757) literal (intOrNat 10)))",
    "line_no": "(\"fa2.py\" 756)"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 758)",
    "message": "transfer",
    "params": "((\"fa2.py\" 758) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 762) record (amount ((\"fa2.py\" 762) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 762) literal (intOrNat 0)))) ((\"fa2.py\" 765) record (amount ((\"fa2.py\" 765) literal (intOrNat 11))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 765) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 771) eq ((\"fa2.py\" 771) attr ((\"fa2.py\" 771) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 771) literal (intOrNat 69)))",
    "line_no": "(\"fa2.py\" 770)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 774) eq ((\"fa2.py\" 774) attr ((\"fa2.py\" 774) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 774) literal (intOrNat 31)))",
    "line_no": "(\"fa2.py\" 773)"
   },
   {
    "action": "html",
    "inner": "More Token Types",
    "line_no": "(\"fa2.py\" 778)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 783)",
    "message": "mint",
    "params": "((\"fa2.py\" 783) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 783) literal (intOrNat 100))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 783) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 783) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x546865205365636f6e6420546f6b656e\"))) (((\"fa2.py\" 783) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b31\"))))) (token_id ((\"fa2.py\" 783) literal (intOrNat 1))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 791)",
    "message": "mint",
    "params": "((\"fa2.py\" 791) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 791) literal (intOrNat 200))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 791) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 791) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e204e756d626572205468726565\"))) (((\"fa2.py\" 791) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b32\"))))) (token_id ((\"fa2.py\" 791) literal (intOrNat 2))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Multi-token Transfer Bob -> Alice",
    "line_no": "(\"fa2.py\" 795)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 796)",
    "message": "transfer",
    "params": "((\"fa2.py\" 796) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 800) record (amount ((\"fa2.py\" 800) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 800) literal (intOrNat 0)))) ((\"fa2.py\" 803) record (amount ((\"fa2.py\" 803) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 803) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 809) record (amount ((\"fa2.py\" 809) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 809) literal (intOrNat 2))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Other Basic Permission Tests",
    "line_no": "(\"fa2.py\" 813)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "Bob cannot transfer Alice's tokens.",
    "line_no": "(\"fa2.py\" 814)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 815)",
    "message": "transfer",
    "params": "((\"fa2.py\" 815) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 819) record (amount ((\"fa2.py\" 819) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 819) literal (intOrNat 0)))) ((\"fa2.py\" 822) record (amount ((\"fa2.py\" 822) literal (intOrNat 1))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 822) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert",
    "valid": "((\"fa2.py\" 815) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Admin can transfer anything.",
    "line_no": "(\"fa2.py\" 826)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 827)",
    "message": "transfer",
    "params": "((\"fa2.py\" 827) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 831) record (amount ((\"fa2.py\" 831) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 831) literal (intOrNat 0)))) ((\"fa2.py\" 834) record (amount ((\"fa2.py\" 834) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 834) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 839) record (amount ((\"fa2.py\" 839) literal (intOrNat 11))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 839) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Even Admin cannot transfer too much.",
    "line_no": "(\"fa2.py\" 843)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 844)",
    "message": "transfer",
    "params": "((\"fa2.py\" 844) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 848) record (amount ((\"fa2.py\" 848) literal (intOrNat 1000))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 848) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator",
    "valid": "((\"fa2.py\" 844) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Consumer Contract for Callback Calls.",
    "line_no": "(\"fa2.py\" 852)",
    "tag": "h3"
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 854) static_id 1) \nstorage ((\"fa2.py\" 689) record (last_sum ((\"fa2.py\" 689) literal (intOrNat 0))) (operator_support ((\"fa2.py\" 689) literal (bool False))))\nstorage_type (())\nentry_points ((receive_balances True None None None True None (\"fa2.py\" 698) (((\"fa2.py\" 699) set_type ((\"fa2.py\" 698) params) (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))) ((\"fa2.py\" 700) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 700) literal (intOrNat 0))) ((\"fa2.py\" 701) for_group \"resp\" ((\"fa2.py\" 698) params) (((\"fa2.py\" 702) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) add ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) attr ((\"fa2.py\" 701) iter \"resp\") \"balance\"))))))) (reinit True None None None False None (\"fa2.py\" 693) (((\"fa2.py\" 694) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 694) literal (intOrNat 0))))))\nflags ()\nprivates ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "((\"fa2.py\" 854) static_id 1)",
    "line_no": "(\"fa2.py\" 854)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Consumer virtual address: ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")",
    "line_no": "(\"fa2.py\" 855)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Balance-of.",
    "line_no": "(\"fa2.py\" 857)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 865)",
    "message": "balance_of",
    "params": "((\"fa2.py\" 859) record (callback ((\"fa2.py\" 860) open_variant ((\"fa2.py\" 860) contract \"receive_balances\" (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))) ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")) \"Some\" \"None\")) (requests ((\"fa2.py\" 859) list ((\"fa2.py\" 866) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 866) literal (intOrNat 0)))) ((\"fa2.py\" 867) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 867) literal (intOrNat 1)))) ((\"fa2.py\" 868) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 868) literal (intOrNat 2)))))))"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 870) eq ((\"fa2.py\" 870) attr ((\"fa2.py\" 854) contract_data ((\"fa2.py\" 854) static_id 1)) \"last_sum\") ((\"fa2.py\" 870) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 870)"
   },
   {
    "action": "html",
    "inner": "Operators",
    "line_no": "(\"fa2.py\" 871)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "This version was compiled with operator support.",
    "line_no": "(\"fa2.py\" 877)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Calling 0 updates should work:",
    "line_no": "(\"fa2.py\" 878)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 879)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 879) list )"
   },
   {
    "action": "html",
    "inner": "Operator Accounts",
    "line_no": "(\"fa2.py\" 880)",
    "tag": "h3"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 884) list ((\"fa2.py\" 881) account_of_seed \"Operator0\") ((\"fa2.py\" 882) account_of_seed \"Operator1\") ((\"fa2.py\" 883) account_of_seed \"Operator2\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 884)",
    "stripStrings": false
   },
   {
    "action": "html",
    "inner": "Admin can change Alice's operator.",
    "line_no": "(\"fa2.py\" 885)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 886)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 886) list ((\"fa2.py\" 887) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 891) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 2)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Operator1 can now transfer Alice's tokens 0 and 2",
    "line_no": "(\"fa2.py\" 896)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 897)",
    "message": "transfer",
    "params": "((\"fa2.py\" 897) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 901) record (amount ((\"fa2.py\" 901) literal (intOrNat 2))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 901) literal (intOrNat 0)))) ((\"fa2.py\" 904) record (amount ((\"fa2.py\" 904) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 904) literal (intOrNat 2))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Bob's tokens",
    "line_no": "(\"fa2.py\" 908)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 909)",
    "message": "transfer",
    "params": "((\"fa2.py\" 909) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 913) record (amount ((\"fa2.py\" 913) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 913) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1",
    "valid": "((\"fa2.py\" 909) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Operator2 cannot transfer Alice's tokens",
    "line_no": "(\"fa2.py\" 917)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 918)",
    "message": "transfer",
    "params": "((\"fa2.py\" 918) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 922) record (amount ((\"fa2.py\" 922) literal (intOrNat 2))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 922) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator2",
    "valid": "((\"fa2.py\" 918) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can remove their operator",
    "line_no": "(\"fa2.py\" 926)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 927)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 927) list ((\"fa2.py\" 928) variant \"remove_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 932) variant \"remove_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Alice's tokens any more",
    "line_no": "(\"fa2.py\" 937)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 938)",
    "message": "transfer",
    "params": "((\"fa2.py\" 938) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 942) record (amount ((\"fa2.py\" 942) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 942) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1",
    "valid": "((\"fa2.py\" 938) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Bob can add Operator0.",
    "line_no": "(\"fa2.py\" 946)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 947)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 947) list ((\"fa2.py\" 948) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 952) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 1)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 can transfer Bob's tokens '0' and '1'",
    "line_no": "(\"fa2.py\" 957)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 958)",
    "message": "transfer",
    "params": "((\"fa2.py\" 958) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 962) record (amount ((\"fa2.py\" 962) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 962) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 967) record (amount ((\"fa2.py\" 967) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 967) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob cannot add Operator0 for Alice's tokens.",
    "line_no": "(\"fa2.py\" 971)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 972)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 972) list ((\"fa2.py\" 973) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert",
    "valid": "((\"fa2.py\" 972) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can also add Operator0 for their tokens 0.",
    "line_no": "(\"fa2.py\" 979)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 980)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 980) list ((\"fa2.py\" 981) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator0 can now transfer Bob's and Alice's 0-tokens.",
    "line_no": "(\"fa2.py\" 987)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 988)",
    "message": "transfer",
    "params": "((\"fa2.py\" 988) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 992) record (amount ((\"fa2.py\" 992) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 992) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 997) record (amount ((\"fa2.py\" 997) literal (intOrNat 1))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 997) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob adds Operator2 as second operator for 0-tokens.",
    "line_no": "(\"fa2.py\" 1001)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1002)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 1002) list ((\"fa2.py\" 1003) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 883) resolve ((\"fa2.py\" 883) attr ((\"fa2.py\" 883) account_of_seed \"Operator2\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 and Operator2 can transfer Bob's 0-tokens.",
    "line_no": "(\"fa2.py\" 1009)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1010)",
    "message": "transfer",
    "params": "((\"fa2.py\" 1010) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 1014) record (amount ((\"fa2.py\" 1014) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 1014) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1018)",
    "message": "transfer",
    "params": "((\"fa2.py\" 1018) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 1022) record (amount ((\"fa2.py\" 1022) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 1022) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator2"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 1026)",
    "tag": "p"
   }
  ],
  "kind": "test"
 },
 {
  "shortname": "FA2-debug",
  "longname": "FA2-debug",
  "scenario": [
   {
    "action": "html",
    "inner": "FA2 Contract Name: FA2-debug",
    "line_no": "(\"fa2.py\" 713)",
    "tag": "h1"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 714)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Accounts",
    "line_no": "(\"fa2.py\" 720)",
    "tag": "h2"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 721) list ((\"fa2.py\" 716) account_of_seed \"Administrator\") ((\"fa2.py\" 717) account_of_seed \"Alice\") ((\"fa2.py\" 718) account_of_seed \"Robert\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 721)",
    "stripStrings": false
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 725) static_id 0) \nstorage ((\"fa2.py\" 370) record (administrator ((\"fa2.py\" 716) resolve ((\"fa2.py\" 716) attr ((\"fa2.py\" 716) account_of_seed \"Administrator\") \"address\"))) (all_tokens ((\"fa2.py\" 299) literal (nat 0))) (ledger ((\"fa2.py\" 361) type_annotation ((\"fa2.py\" 361) map ) (map (unknown 5) (record ((balance \"nat\")) None (\"fa2.py\" 221))))) (metadata ((\"fa2.py\" 723) big_map (((\"fa2.py\" 725) literal (string \"\")) ((\"fa2.py\" 723) literal (bytes \"0x68747470733a2f2f6578616d706c652e636f6d\"))))) (operators ((\"fa2.py\" 244) type_annotation ((\"fa2.py\" 244) map ) (map (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)) \"unit\"))) (paused ((\"fa2.py\" 360) literal (bool False))) (token_metadata ((\"fa2.py\" 362) type_annotation ((\"fa2.py\" 362) map ) (map \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) None (\"fa2.py\" 282))))) (total_supply ((\"fa2.py\" 371) type_annotation ((\"fa2.py\" 371) map ) (map \"nat\" \"nat\"))))\nstorage_type (())\nentry_points ((balance_of True None None None True None (\"fa2.py\" 417) (((\"fa2.py\" 419) verify ((\"fa2.py\" 419) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 419) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 420) set_type ((\"fa2.py\" 417) params) (record ((callback (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))))) (requests (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263))))) (Some ((\"requests\") (\"callback\"))) (\"fa2.py\" 272))) ((\"fa2.py\" 439) define_local \"responses\" ((\"fa2.py\" 439) map_function ((\"fa2.py\" 439) attr ((\"fa2.py\" 417) params) \"requests\") ((\"fa2.py\" 439) lambda 0 None False None \"\" (((\"fa2.py\" 423) verify ((\"fa2.py\" 423) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 6)) \"token_id\")) ((\"fa2.py\" 423) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 424) if_block ((\"fa2.py\" 424) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 6)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 6)) \"token_id\") \"nat\"))) (((\"fa2.py\" 426) result ((\"fa2.py\" 427) record (balance ((\"fa2.py\" 425) attr ((\"fa2.py\" 425) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 6)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 6)) \"token_id\") \"nat\"))) \"balance\")) (request ((\"fa2.py\" 428) record (owner ((\"fa2.py\" 429) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 6)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 430) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 6)) \"token_id\") \"nat\")))))))) (else_block (((\"fa2.py\" 433) result ((\"fa2.py\" 434) record (balance ((\"fa2.py\" 434) literal (intOrNat 0))) (request ((\"fa2.py\" 435) record (owner ((\"fa2.py\" 436) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 6)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 437) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 6)) \"token_id\") \"nat\"))))))))))) True) ((\"fa2.py\" 441) set ((\"fa2.py\" 441) operations) ((\"fa2.py\" 441) cons ((\"fa2.py\" 441) transfer ((\"fa2.py\" 441) get_local \"responses\") ((\"fa2.py\" 441) literal (mutez 0)) ((\"fa2.py\" 440) type_annotation ((\"fa2.py\" 440) attr ((\"fa2.py\" 417) params) \"callback\") (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))))) ((\"fa2.py\" 441) operations))))) (mint True None None None True None (\"fa2.py\" 522) (((\"fa2.py\" 523) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 523) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 534) if_block ((\"fa2.py\" 534) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) (((\"fa2.py\" 535) set ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\"))))) (else_block (((\"fa2.py\" 537) set ((\"fa2.py\" 537) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\")))))) ((\"fa2.py\" 538) if_block ((\"fa2.py\" 538) not ((\"fa2.py\" 310) lt ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\"))) (((\"fa2.py\" 304) verify ((\"fa2.py\" 304) eq ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 304) literal (string \"Token-IDs should be consecutive\"))) ((\"fa2.py\" 305) set ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 305) add ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 305) literal (intOrNat 1)))) ((\"fa2.py\" 540) set ((\"fa2.py\" 540) get_item ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 540) record (token_id ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) (token_info ((\"fa2.py\" 542) attr ((\"fa2.py\" 522) params) \"metadata\")))))) ((\"fa2.py\" 545) set ((\"fa2.py\" 545) get_item ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 545) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\") ((\"fa2.py\" 545) get_item_default ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 545) literal (intOrNat 0))))))) (set_administrator True None None None True None (\"fa2.py\" 501) (((\"fa2.py\" 502) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 502) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 503) set ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\") ((\"fa2.py\" 501) params)))) (set_metadata True None None None True None (\"fa2.py\" 516) (((\"fa2.py\" 517) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 517) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 518) set ((\"fa2.py\" 518) get_item ((\"fa2.py\" 518) attr ((\"fa2.py\" 725) data) \"metadata\") ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"k\")) ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"v\")))) (set_pause True None None None True None (\"fa2.py\" 510) (((\"fa2.py\" 511) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 511) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 512) set ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\") ((\"fa2.py\" 510) params)))) (transfer True None None None True None (\"fa2.py\" 375) (((\"fa2.py\" 376) verify ((\"fa2.py\" 376) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 376) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 377) set_type ((\"fa2.py\" 375) params) (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169)))) ((\"fa2.py\" 378) for_group \"transfer\" ((\"fa2.py\" 375) params) (((\"fa2.py\" 380) for_group \"tx\" ((\"fa2.py\" 380) attr ((\"fa2.py\" 378) iter \"transfer\") \"txs\") (((\"fa2.py\" 395) verify ((\"fa2.py\" 389) or ((\"fa2.py\" 384) or ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 385) eq ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") ((\"\" -1) sender))) ((\"fa2.py\" 259) contains ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"\" -1) sender)) (owner ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\")) (token_id ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))) ((\"fa2.py\" 395) literal (string \"FA2_NOT_OPERATOR\"))) ((\"fa2.py\" 396) verify ((\"fa2.py\" 397) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\")) ((\"fa2.py\" 396) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 401) if_block ((\"fa2.py\" 401) gt ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\") ((\"fa2.py\" 401) literal (intOrNat 0))) (((\"fa2.py\" 403) verify ((\"fa2.py\" 404) ge ((\"fa2.py\" 404) attr ((\"fa2.py\" 404) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")) ((\"fa2.py\" 403) literal (string \"FA2_INSUFFICIENT_BALANCE\"))) ((\"fa2.py\" 407) set ((\"fa2.py\" 407) attr ((\"fa2.py\" 407) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 407) open_variant ((\"fa2.py\" 407) is_nat ((\"fa2.py\" 408) sub ((\"fa2.py\" 408) attr ((\"fa2.py\" 408) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))) \"Some\" \"None\")) ((\"fa2.py\" 409) if_block ((\"fa2.py\" 409) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) (((\"fa2.py\" 410) set ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 410) add ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))))) (else_block (((\"fa2.py\" 412) set ((\"fa2.py\" 412) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")))))))) (else_block ()))))))) (update_operators True None None None True None (\"fa2.py\" 457) (((\"fa2.py\" 458) set_type ((\"fa2.py\" 457) params) (list (variant ((add_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189))) (remove_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) None (\"fa2.py\" 459)))) ((\"fa2.py\" 465) for_group \"update\" ((\"fa2.py\" 457) params) (((\"fa2.py\" 466) match_cases ((\"fa2.py\" 465) iter \"update\") \"match_fa2_466\" (((\"fa2.py\" 467) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"add_operator\" \"add_operator\" (((\"fa2.py\" 468) verify ((\"fa2.py\" 469) or ((\"fa2.py\" 469) eq ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 468) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 255) set ((\"fa2.py\" 255) get_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 474) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"operator\")) (owner ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\")) (token_id ((\"fa2.py\" 475) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))) ((\"\" -1) literal (unit))))) ((\"fa2.py\" 476) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"remove_operator\" \"remove_operator\" (((\"fa2.py\" 477) verify ((\"fa2.py\" 478) or ((\"fa2.py\" 478) eq ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 477) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 257) del_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 483) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"operator\")) (owner ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\")) (token_id ((\"fa2.py\" 484) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))))))))))))\nflags ((initial-cast) (exceptions default-line))\nprivates ()\nviews ((offchain all_tokens False (\"fa2.py\" 586) True \"\\n            This view is specified (but optional) in the standard.\\n\\n            This contract is built with assume_consecutive_token_ids =\\n            True, so we return a list constructed from the number of tokens.\\n            \" (((\"fa2.py\" 588) result ((\"fa2.py\" 588) range ((\"fa2.py\" 588) literal (intOrNat 0)) ((\"fa2.py\" 588) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 588) literal (intOrNat 1)))))) (offchain count_tokens False (\"fa2.py\" 574) True \"Get how many tokens are in this FA2 contract.\\n        \" (((\"fa2.py\" 577) result ((\"fa2.py\" 577) attr ((\"fa2.py\" 725) data) \"all_tokens\")))) (offchain does_token_exist True (\"fa2.py\" 580) True \"Ask whether a token ID is exists.\" (((\"fa2.py\" 582) set_type ((\"fa2.py\" 580) params) \"nat\") ((\"fa2.py\" 583) result ((\"fa2.py\" 583) contains ((\"fa2.py\" 583) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 580) params))))) (offchain get_balance True (\"fa2.py\" 444) True \"This is the `get_balance` view defined in TZIP-12.\" (((\"fa2.py\" 446) set_type ((\"fa2.py\" 444) params) (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 447))) ((\"fa2.py\" 452) verify ((\"fa2.py\" 452) contains ((\"fa2.py\" 452) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\")) ((\"fa2.py\" 452) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 453) result ((\"fa2.py\" 453) attr ((\"fa2.py\" 453) get_item ((\"fa2.py\" 453) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\") \"nat\"))) \"balance\")))) (offchain is_operator True (\"fa2.py\" 601) True \"\" (((\"fa2.py\" 602) set_type ((\"fa2.py\" 601) params) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 603))) ((\"fa2.py\" 607) result ((\"fa2.py\" 259) contains ((\"fa2.py\" 608) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 610) attr ((\"fa2.py\" 601) params) \"operator\")) (owner ((\"fa2.py\" 609) attr ((\"fa2.py\" 601) params) \"owner\")) (token_id ((\"fa2.py\" 611) attr ((\"fa2.py\" 601) params) \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))))) (offchain total_supply True (\"fa2.py\" 593) True \"\" (((\"fa2.py\" 595) result ((\"fa2.py\" 595) get_item ((\"fa2.py\" 595) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 593) params))))))\nentry_points_layout ()\ninitial_metadata ((metadata_base (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"version\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-debug\")))) (elem ((\"fa2.py\" 674) literal (string \"description\")) (meta_expr ((\"fa2.py\" 674) literal (string \"This is a didactic reference implementation of FA2, a.k.a. TZIP-012, using SmartPy.\n\nThis particular contract uses the configuration named: FA2-debug.\")))) (elem ((\"fa2.py\" 674) literal (string \"interfaces\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-012\"))) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-016\"))))) (elem ((\"fa2.py\" 674) literal (string \"authors\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"Seb Mondet <https://seb.mondet.org>\"))))) (elem ((\"fa2.py\" 674) literal (string \"homepage\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy\")))) (elem ((\"fa2.py\" 674) literal (string \"views\")) (meta_list (\"fa2.py\" 674) (meta_view \"get_balance\" (\"fa2.py\" 444)) (meta_view \"does_token_exist\" (\"fa2.py\" 580)) (meta_view \"count_tokens\" (\"fa2.py\" 574)) (meta_view \"all_tokens\" (\"fa2.py\" 586)) (meta_view \"is_operator\" (\"fa2.py\" 601)) (meta_view \"total_supply\" (\"fa2.py\" 593)))) (elem ((\"fa2.py\" 674) literal (string \"source\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"tools\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"SmartPy\"))))) (elem ((\"fa2.py\" 674) literal (string \"location\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy.git\")))))) (elem ((\"fa2.py\" 674) literal (string \"permissions\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"operator\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-or-operator-transfer\")))) (elem ((\"fa2.py\" 674) literal (string \"receiver\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))) (elem ((\"fa2.py\" 674) literal (string \"sender\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))))) (elem ((\"fa2.py\" 674) literal (string \"fa2-smartpy\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"configuration\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"add_mutez_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"allow_self_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"assume_consecutive_token_ids\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"force_layouts\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"lazy_entry_points\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"name\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-debug\")))) (elem ((\"fa2.py\" 674) literal (string \"non_fungible\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"readable\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"single_asset\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"store_total_supply\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"support_operator\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"use_token_metadata_offchain_view\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))))))))))\nbalance ())",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 725)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Initial Minting",
    "line_no": "(\"fa2.py\" 729)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "The administrator mints 100 token-0's to Alice.",
    "line_no": "(\"fa2.py\" 730)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 735)",
    "message": "mint",
    "params": "((\"fa2.py\" 735) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 735) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 735) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 735) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 735) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 735) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 740)",
    "message": "mint",
    "params": "((\"fa2.py\" 740) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 740) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 740) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 740) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 740) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 740) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Transfers Alice -> Bob",
    "line_no": "(\"fa2.py\" 744)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 745)",
    "message": "transfer",
    "params": "((\"fa2.py\" 745) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 749) record (amount ((\"fa2.py\" 749) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 749) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 755) eq ((\"fa2.py\" 755) attr ((\"fa2.py\" 755) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 755) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 754)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 757) eq ((\"fa2.py\" 757) attr ((\"fa2.py\" 757) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 757) literal (intOrNat 10)))",
    "line_no": "(\"fa2.py\" 756)"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 758)",
    "message": "transfer",
    "params": "((\"fa2.py\" 758) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 762) record (amount ((\"fa2.py\" 762) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 762) literal (intOrNat 0)))) ((\"fa2.py\" 765) record (amount ((\"fa2.py\" 765) literal (intOrNat 11))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 765) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 771) eq ((\"fa2.py\" 771) attr ((\"fa2.py\" 771) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 771) literal (intOrNat 69)))",
    "line_no": "(\"fa2.py\" 770)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 774) eq ((\"fa2.py\" 774) attr ((\"fa2.py\" 774) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 774) literal (intOrNat 31)))",
    "line_no": "(\"fa2.py\" 773)"
   },
   {
    "action": "html",
    "inner": "More Token Types",
    "line_no": "(\"fa2.py\" 778)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 783)",
    "message": "mint",
    "params": "((\"fa2.py\" 783) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 783) literal (intOrNat 100))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 783) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 783) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x546865205365636f6e6420546f6b656e\"))) (((\"fa2.py\" 783) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b31\"))))) (token_id ((\"fa2.py\" 783) literal (intOrNat 1))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 791)",
    "message": "mint",
    "params": "((\"fa2.py\" 791) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 791) literal (intOrNat 200))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 791) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 791) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e204e756d626572205468726565\"))) (((\"fa2.py\" 791) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b32\"))))) (token_id ((\"fa2.py\" 791) literal (intOrNat 2))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Multi-token Transfer Bob -> Alice",
    "line_no": "(\"fa2.py\" 795)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 796)",
    "message": "transfer",
    "params": "((\"fa2.py\" 796) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 800) record (amount ((\"fa2.py\" 800) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 800) literal (intOrNat 0)))) ((\"fa2.py\" 803) record (amount ((\"fa2.py\" 803) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 803) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 809) record (amount ((\"fa2.py\" 809) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 809) literal (intOrNat 2))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Other Basic Permission Tests",
    "line_no": "(\"fa2.py\" 813)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "Bob cannot transfer Alice's tokens.",
    "line_no": "(\"fa2.py\" 814)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 815)",
    "message": "transfer",
    "params": "((\"fa2.py\" 815) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 819) record (amount ((\"fa2.py\" 819) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 819) literal (intOrNat 0)))) ((\"fa2.py\" 822) record (amount ((\"fa2.py\" 822) literal (intOrNat 1))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 822) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert",
    "valid": "((\"fa2.py\" 815) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Admin can transfer anything.",
    "line_no": "(\"fa2.py\" 826)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 827)",
    "message": "transfer",
    "params": "((\"fa2.py\" 827) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 831) record (amount ((\"fa2.py\" 831) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 831) literal (intOrNat 0)))) ((\"fa2.py\" 834) record (amount ((\"fa2.py\" 834) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 834) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 839) record (amount ((\"fa2.py\" 839) literal (intOrNat 11))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 839) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Even Admin cannot transfer too much.",
    "line_no": "(\"fa2.py\" 843)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 844)",
    "message": "transfer",
    "params": "((\"fa2.py\" 844) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 848) record (amount ((\"fa2.py\" 848) literal (intOrNat 1000))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 848) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator",
    "valid": "((\"fa2.py\" 844) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Consumer Contract for Callback Calls.",
    "line_no": "(\"fa2.py\" 852)",
    "tag": "h3"
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 854) static_id 1) \nstorage ((\"fa2.py\" 689) record (last_sum ((\"fa2.py\" 689) literal (intOrNat 0))) (operator_support ((\"fa2.py\" 689) literal (bool False))))\nstorage_type (())\nentry_points ((receive_balances True None None None True None (\"fa2.py\" 698) (((\"fa2.py\" 699) set_type ((\"fa2.py\" 698) params) (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))) ((\"fa2.py\" 700) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 700) literal (intOrNat 0))) ((\"fa2.py\" 701) for_group \"resp\" ((\"fa2.py\" 698) params) (((\"fa2.py\" 702) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) add ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) attr ((\"fa2.py\" 701) iter \"resp\") \"balance\"))))))) (reinit True None None None False None (\"fa2.py\" 693) (((\"fa2.py\" 694) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 694) literal (intOrNat 0))))))\nflags ()\nprivates ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "((\"fa2.py\" 854) static_id 1)",
    "line_no": "(\"fa2.py\" 854)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Consumer virtual address: ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")",
    "line_no": "(\"fa2.py\" 855)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Balance-of.",
    "line_no": "(\"fa2.py\" 857)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 865)",
    "message": "balance_of",
    "params": "((\"fa2.py\" 859) record (callback ((\"fa2.py\" 860) open_variant ((\"fa2.py\" 860) contract \"receive_balances\" (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))) ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")) \"Some\" \"None\")) (requests ((\"fa2.py\" 859) list ((\"fa2.py\" 866) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 866) literal (intOrNat 0)))) ((\"fa2.py\" 867) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 867) literal (intOrNat 1)))) ((\"fa2.py\" 868) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 868) literal (intOrNat 2)))))))"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 870) eq ((\"fa2.py\" 870) attr ((\"fa2.py\" 854) contract_data ((\"fa2.py\" 854) static_id 1)) \"last_sum\") ((\"fa2.py\" 870) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 870)"
   },
   {
    "action": "html",
    "inner": "Operators",
    "line_no": "(\"fa2.py\" 871)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "This version was compiled with operator support.",
    "line_no": "(\"fa2.py\" 877)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Calling 0 updates should work:",
    "line_no": "(\"fa2.py\" 878)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 879)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 879) list )"
   },
   {
    "action": "html",
    "inner": "Operator Accounts",
    "line_no": "(\"fa2.py\" 880)",
    "tag": "h3"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 884) list ((\"fa2.py\" 881) account_of_seed \"Operator0\") ((\"fa2.py\" 882) account_of_seed \"Operator1\") ((\"fa2.py\" 883) account_of_seed \"Operator2\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 884)",
    "stripStrings": false
   },
   {
    "action": "html",
    "inner": "Admin can change Alice's operator.",
    "line_no": "(\"fa2.py\" 885)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 886)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 886) list ((\"fa2.py\" 887) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 891) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 2)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Operator1 can now transfer Alice's tokens 0 and 2",
    "line_no": "(\"fa2.py\" 896)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 897)",
    "message": "transfer",
    "params": "((\"fa2.py\" 897) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 901) record (amount ((\"fa2.py\" 901) literal (intOrNat 2))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 901) literal (intOrNat 0)))) ((\"fa2.py\" 904) record (amount ((\"fa2.py\" 904) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 904) literal (intOrNat 2))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Bob's tokens",
    "line_no": "(\"fa2.py\" 908)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 909)",
    "message": "transfer",
    "params": "((\"fa2.py\" 909) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 913) record (amount ((\"fa2.py\" 913) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 913) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1",
    "valid": "((\"fa2.py\" 909) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Operator2 cannot transfer Alice's tokens",
    "line_no": "(\"fa2.py\" 917)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 918)",
    "message": "transfer",
    "params": "((\"fa2.py\" 918) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 922) record (amount ((\"fa2.py\" 922) literal (intOrNat 2))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 922) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator2",
    "valid": "((\"fa2.py\" 918) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can remove their operator",
    "line_no": "(\"fa2.py\" 926)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 927)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 927) list ((\"fa2.py\" 928) variant \"remove_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 932) variant \"remove_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Alice's tokens any more",
    "line_no": "(\"fa2.py\" 937)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 938)",
    "message": "transfer",
    "params": "((\"fa2.py\" 938) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 942) record (amount ((\"fa2.py\" 942) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 942) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1",
    "valid": "((\"fa2.py\" 938) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Bob can add Operator0.",
    "line_no": "(\"fa2.py\" 946)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 947)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 947) list ((\"fa2.py\" 948) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 952) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 1)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 can transfer Bob's tokens '0' and '1'",
    "line_no": "(\"fa2.py\" 957)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 958)",
    "message": "transfer",
    "params": "((\"fa2.py\" 958) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 962) record (amount ((\"fa2.py\" 962) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 962) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 967) record (amount ((\"fa2.py\" 967) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 967) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob cannot add Operator0 for Alice's tokens.",
    "line_no": "(\"fa2.py\" 971)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 972)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 972) list ((\"fa2.py\" 973) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert",
    "valid": "((\"fa2.py\" 972) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can also add Operator0 for their tokens 0.",
    "line_no": "(\"fa2.py\" 979)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 980)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 980) list ((\"fa2.py\" 981) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator0 can now transfer Bob's and Alice's 0-tokens.",
    "line_no": "(\"fa2.py\" 987)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 988)",
    "message": "transfer",
    "params": "((\"fa2.py\" 988) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 992) record (amount ((\"fa2.py\" 992) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 992) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 997) record (amount ((\"fa2.py\" 997) literal (intOrNat 1))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 997) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob adds Operator2 as second operator for 0-tokens.",
    "line_no": "(\"fa2.py\" 1001)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1002)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 1002) list ((\"fa2.py\" 1003) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 883) resolve ((\"fa2.py\" 883) attr ((\"fa2.py\" 883) account_of_seed \"Operator2\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 and Operator2 can transfer Bob's 0-tokens.",
    "line_no": "(\"fa2.py\" 1009)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1010)",
    "message": "transfer",
    "params": "((\"fa2.py\" 1010) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 1014) record (amount ((\"fa2.py\" 1014) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 1014) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1018)",
    "message": "transfer",
    "params": "((\"fa2.py\" 1018) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 1022) record (amount ((\"fa2.py\" 1022) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 1022) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator2"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 1026)",
    "tag": "p"
   }
  ],
  "kind": "test"
 },
 {
  "shortname": "FA2-single_asset",
  "longname": "FA2-single_asset",
  "scenario": [
   {
    "action": "html",
    "inner": "FA2 Contract Name: FA2-single_asset",
    "line_no": "(\"fa2.py\" 713)",
    "tag": "h1"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 714)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Accounts",
    "line_no": "(\"fa2.py\" 720)",
    "tag": "h2"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 721) list ((\"fa2.py\" 716) account_of_seed \"Administrator\") ((\"fa2.py\" 717) account_of_seed \"Alice\") ((\"fa2.py\" 718) account_of_seed \"Robert\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 721)",
    "stripStrings": false
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 725) static_id 0) \nstorage ((\"fa2.py\" 370) record (administrator ((\"fa2.py\" 716) resolve ((\"fa2.py\" 716) attr ((\"fa2.py\" 716) account_of_seed \"Administrator\") \"address\"))) (all_tokens ((\"fa2.py\" 299) literal (nat 0))) (ledger ((\"fa2.py\" 361) type_annotation ((\"fa2.py\" 361) big_map ) (bigmap (unknown 8) (record ((balance \"nat\")) None (\"fa2.py\" 221))))) (metadata ((\"fa2.py\" 723) big_map (((\"fa2.py\" 725) literal (string \"\")) ((\"fa2.py\" 723) literal (bytes \"0x68747470733a2f2f6578616d706c652e636f6d\"))))) (operators ((\"fa2.py\" 244) type_annotation ((\"fa2.py\" 244) big_map ) (bigmap (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)) \"unit\"))) (paused ((\"fa2.py\" 360) literal (bool False))) (token_metadata ((\"fa2.py\" 362) type_annotation ((\"fa2.py\" 362) big_map ) (bigmap \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) None (\"fa2.py\" 282))))) (total_supply ((\"fa2.py\" 371) type_annotation ((\"fa2.py\" 371) big_map ) (bigmap \"nat\" \"nat\"))))\nstorage_type (())\nentry_points ((balance_of True None None None True None (\"fa2.py\" 417) (((\"fa2.py\" 419) verify ((\"fa2.py\" 419) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 419) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 420) set_type ((\"fa2.py\" 417) params) (record ((callback (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))))) (requests (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263))))) (Some ((\"requests\") (\"callback\"))) (\"fa2.py\" 272))) ((\"fa2.py\" 439) define_local \"responses\" ((\"fa2.py\" 439) map_function ((\"fa2.py\" 439) attr ((\"fa2.py\" 417) params) \"requests\") ((\"fa2.py\" 439) lambda 0 None False None \"\" (((\"fa2.py\" 423) verify ((\"fa2.py\" 423) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 9)) \"token_id\")) ((\"fa2.py\" 423) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 424) if_block ((\"fa2.py\" 424) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 9)) \"owner\") \"address\")) (((\"fa2.py\" 426) result ((\"fa2.py\" 427) record (balance ((\"fa2.py\" 425) attr ((\"fa2.py\" 425) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 9)) \"owner\") \"address\")) \"balance\")) (request ((\"fa2.py\" 428) record (owner ((\"fa2.py\" 429) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 9)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 430) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 9)) \"token_id\") \"nat\")))))))) (else_block (((\"fa2.py\" 433) result ((\"fa2.py\" 434) record (balance ((\"fa2.py\" 434) literal (intOrNat 0))) (request ((\"fa2.py\" 435) record (owner ((\"fa2.py\" 436) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 9)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 437) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 9)) \"token_id\") \"nat\"))))))))))) True) ((\"fa2.py\" 441) set ((\"fa2.py\" 441) operations) ((\"fa2.py\" 441) cons ((\"fa2.py\" 441) transfer ((\"fa2.py\" 441) get_local \"responses\") ((\"fa2.py\" 441) literal (mutez 0)) ((\"fa2.py\" 440) type_annotation ((\"fa2.py\" 440) attr ((\"fa2.py\" 417) params) \"callback\") (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))))) ((\"fa2.py\" 441) operations))))) (mint True None None None True None (\"fa2.py\" 522) (((\"fa2.py\" 523) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 523) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 526) verify ((\"fa2.py\" 526) eq ((\"fa2.py\" 526) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 526) literal (intOrNat 0))) ((\"fa2.py\" 526) literal (string \"single-asset: token-id <> 0\"))) ((\"fa2.py\" 534) if_block ((\"fa2.py\" 534) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\")) (((\"fa2.py\" 535) set ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\")) \"balance\") ((\"fa2.py\" 535) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\")) \"balance\") ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\"))))) (else_block (((\"fa2.py\" 537) set ((\"fa2.py\" 537) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\")) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\")))))) ((\"fa2.py\" 538) if_block ((\"fa2.py\" 538) not ((\"fa2.py\" 310) lt ((\"fa2.py\" 526) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\"))) (((\"fa2.py\" 304) verify ((\"fa2.py\" 304) eq ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 526) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 304) literal (string \"Token-IDs should be consecutive\"))) ((\"fa2.py\" 305) set ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 305) add ((\"fa2.py\" 526) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 305) literal (intOrNat 1)))) ((\"fa2.py\" 540) set ((\"fa2.py\" 540) get_item ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 526) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 540) record (token_id ((\"fa2.py\" 526) attr ((\"fa2.py\" 522) params) \"token_id\")) (token_info ((\"fa2.py\" 542) attr ((\"fa2.py\" 522) params) \"metadata\")))))) ((\"fa2.py\" 545) set ((\"fa2.py\" 545) get_item ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 526) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 545) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\") ((\"fa2.py\" 545) get_item_default ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 526) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 545) literal (intOrNat 0))))))) (set_administrator True None None None True None (\"fa2.py\" 501) (((\"fa2.py\" 502) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 502) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 503) set ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\") ((\"fa2.py\" 501) params)))) (set_metadata True None None None True None (\"fa2.py\" 516) (((\"fa2.py\" 517) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 517) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 518) set ((\"fa2.py\" 518) get_item ((\"fa2.py\" 518) attr ((\"fa2.py\" 725) data) \"metadata\") ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"k\")) ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"v\")))) (set_pause True None None None True None (\"fa2.py\" 510) (((\"fa2.py\" 511) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 511) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 512) set ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\") ((\"fa2.py\" 510) params)))) (transfer True None None None True None (\"fa2.py\" 375) (((\"fa2.py\" 376) verify ((\"fa2.py\" 376) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 376) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 377) set_type ((\"fa2.py\" 375) params) (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169)))) ((\"fa2.py\" 378) for_group \"transfer\" ((\"fa2.py\" 375) params) (((\"fa2.py\" 380) for_group \"tx\" ((\"fa2.py\" 380) attr ((\"fa2.py\" 378) iter \"transfer\") \"txs\") (((\"fa2.py\" 382) verify ((\"fa2.py\" 382) eq ((\"fa2.py\" 382) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") ((\"fa2.py\" 382) literal (intOrNat 0))) ((\"fa2.py\" 382) literal (string \"single-asset: token-id <> 0\"))) ((\"fa2.py\" 395) verify ((\"fa2.py\" 389) or ((\"fa2.py\" 384) or ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 385) eq ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") ((\"\" -1) sender))) ((\"fa2.py\" 259) contains ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"\" -1) sender)) (owner ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\")) (token_id ((\"fa2.py\" 382) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))) ((\"fa2.py\" 395) literal (string \"FA2_NOT_OPERATOR\"))) ((\"fa2.py\" 396) verify ((\"fa2.py\" 397) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 382) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\")) ((\"fa2.py\" 396) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 401) if_block ((\"fa2.py\" 401) gt ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\") ((\"fa2.py\" 401) literal (intOrNat 0))) (((\"fa2.py\" 403) verify ((\"fa2.py\" 404) ge ((\"fa2.py\" 404) attr ((\"fa2.py\" 404) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\")) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")) ((\"fa2.py\" 403) literal (string \"FA2_INSUFFICIENT_BALANCE\"))) ((\"fa2.py\" 407) set ((\"fa2.py\" 407) attr ((\"fa2.py\" 407) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\")) \"balance\") ((\"fa2.py\" 407) open_variant ((\"fa2.py\" 407) is_nat ((\"fa2.py\" 408) sub ((\"fa2.py\" 408) attr ((\"fa2.py\" 408) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\")) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))) \"Some\" \"None\")) ((\"fa2.py\" 409) if_block ((\"fa2.py\" 409) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\")) (((\"fa2.py\" 410) set ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\")) \"balance\") ((\"fa2.py\" 410) add ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\")) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))))) (else_block (((\"fa2.py\" 412) set ((\"fa2.py\" 412) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\")) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")))))))) (else_block ()))))))) (update_operators True None None None True None (\"fa2.py\" 457) (((\"fa2.py\" 458) set_type ((\"fa2.py\" 457) params) (list (variant ((add_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189))) (remove_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) None (\"fa2.py\" 459)))) ((\"fa2.py\" 465) for_group \"update\" ((\"fa2.py\" 457) params) (((\"fa2.py\" 466) match_cases ((\"fa2.py\" 465) iter \"update\") \"match_fa2_466\" (((\"fa2.py\" 467) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"add_operator\" \"add_operator\" (((\"fa2.py\" 468) verify ((\"fa2.py\" 469) or ((\"fa2.py\" 469) eq ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 468) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 255) set ((\"fa2.py\" 255) get_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 474) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"operator\")) (owner ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\")) (token_id ((\"fa2.py\" 475) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))) ((\"\" -1) literal (unit))))) ((\"fa2.py\" 476) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"remove_operator\" \"remove_operator\" (((\"fa2.py\" 477) verify ((\"fa2.py\" 478) or ((\"fa2.py\" 478) eq ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 477) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 257) del_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 483) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"operator\")) (owner ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\")) (token_id ((\"fa2.py\" 484) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))))))))))))\nflags ((initial-cast) (exceptions default-line))\nprivates ()\nviews ((offchain all_tokens False (\"fa2.py\" 586) True \"\\n            This view is specified (but optional) in the standard.\\n\\n            This contract is built with assume_consecutive_token_ids =\\n            True, so we return a list constructed from the number of tokens.\\n            \" (((\"fa2.py\" 588) result ((\"fa2.py\" 588) range ((\"fa2.py\" 588) literal (intOrNat 0)) ((\"fa2.py\" 588) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 588) literal (intOrNat 1)))))) (offchain count_tokens False (\"fa2.py\" 574) True \"Get how many tokens are in this FA2 contract.\\n        \" (((\"fa2.py\" 577) result ((\"fa2.py\" 577) attr ((\"fa2.py\" 725) data) \"all_tokens\")))) (offchain does_token_exist True (\"fa2.py\" 580) True \"Ask whether a token ID is exists.\" (((\"fa2.py\" 582) set_type ((\"fa2.py\" 580) params) \"nat\") ((\"fa2.py\" 583) result ((\"fa2.py\" 583) contains ((\"fa2.py\" 583) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 580) params))))) (offchain get_balance True (\"fa2.py\" 444) True \"This is the `get_balance` view defined in TZIP-12.\" (((\"fa2.py\" 446) set_type ((\"fa2.py\" 444) params) (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 447))) ((\"fa2.py\" 452) verify ((\"fa2.py\" 452) contains ((\"fa2.py\" 452) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\")) ((\"fa2.py\" 452) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 453) result ((\"fa2.py\" 453) attr ((\"fa2.py\" 453) get_item ((\"fa2.py\" 453) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"owner\") \"address\")) \"balance\")))) (offchain is_operator True (\"fa2.py\" 601) True \"\" (((\"fa2.py\" 602) set_type ((\"fa2.py\" 601) params) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 603))) ((\"fa2.py\" 607) result ((\"fa2.py\" 259) contains ((\"fa2.py\" 608) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 610) attr ((\"fa2.py\" 601) params) \"operator\")) (owner ((\"fa2.py\" 609) attr ((\"fa2.py\" 601) params) \"owner\")) (token_id ((\"fa2.py\" 611) attr ((\"fa2.py\" 601) params) \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))))) (offchain total_supply True (\"fa2.py\" 593) True \"\" (((\"fa2.py\" 595) result ((\"fa2.py\" 595) get_item ((\"fa2.py\" 595) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 593) params))))))\nentry_points_layout ()\ninitial_metadata ((metadata_base (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"version\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-single_asset\")))) (elem ((\"fa2.py\" 674) literal (string \"description\")) (meta_expr ((\"fa2.py\" 674) literal (string \"This is a didactic reference implementation of FA2, a.k.a. TZIP-012, using SmartPy.\n\nThis particular contract uses the configuration named: FA2-single_asset.\")))) (elem ((\"fa2.py\" 674) literal (string \"interfaces\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-012\"))) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-016\"))))) (elem ((\"fa2.py\" 674) literal (string \"authors\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"Seb Mondet <https://seb.mondet.org>\"))))) (elem ((\"fa2.py\" 674) literal (string \"homepage\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy\")))) (elem ((\"fa2.py\" 674) literal (string \"views\")) (meta_list (\"fa2.py\" 674) (meta_view \"get_balance\" (\"fa2.py\" 444)) (meta_view \"does_token_exist\" (\"fa2.py\" 580)) (meta_view \"count_tokens\" (\"fa2.py\" 574)) (meta_view \"all_tokens\" (\"fa2.py\" 586)) (meta_view \"is_operator\" (\"fa2.py\" 601)) (meta_view \"total_supply\" (\"fa2.py\" 593)))) (elem ((\"fa2.py\" 674) literal (string \"source\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"tools\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"SmartPy\"))))) (elem ((\"fa2.py\" 674) literal (string \"location\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy.git\")))))) (elem ((\"fa2.py\" 674) literal (string \"permissions\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"operator\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-or-operator-transfer\")))) (elem ((\"fa2.py\" 674) literal (string \"receiver\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))) (elem ((\"fa2.py\" 674) literal (string \"sender\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))))) (elem ((\"fa2.py\" 674) literal (string \"fa2-smartpy\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"configuration\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"add_mutez_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"allow_self_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"assume_consecutive_token_ids\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"force_layouts\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"lazy_entry_points\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"name\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-single_asset\")))) (elem ((\"fa2.py\" 674) literal (string \"non_fungible\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"readable\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"single_asset\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"store_total_supply\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"support_operator\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"use_token_metadata_offchain_view\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))))))))))\nbalance ())",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 725)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Initial Minting",
    "line_no": "(\"fa2.py\" 729)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "The administrator mints 100 token-0's to Alice.",
    "line_no": "(\"fa2.py\" 730)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 735)",
    "message": "mint",
    "params": "((\"fa2.py\" 735) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 735) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 735) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 735) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 735) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 735) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 740)",
    "message": "mint",
    "params": "((\"fa2.py\" 740) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 740) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 740) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 740) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 740) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 740) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Transfers Alice -> Bob",
    "line_no": "(\"fa2.py\" 744)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 745)",
    "message": "transfer",
    "params": "((\"fa2.py\" 745) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 749) record (amount ((\"fa2.py\" 749) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 749) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 755) eq ((\"fa2.py\" 755) attr ((\"fa2.py\" 755) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\")) \"balance\") ((\"fa2.py\" 755) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 754)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 757) eq ((\"fa2.py\" 757) attr ((\"fa2.py\" 757) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\")) \"balance\") ((\"fa2.py\" 757) literal (intOrNat 10)))",
    "line_no": "(\"fa2.py\" 756)"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 758)",
    "message": "transfer",
    "params": "((\"fa2.py\" 758) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 762) record (amount ((\"fa2.py\" 762) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 762) literal (intOrNat 0)))) ((\"fa2.py\" 765) record (amount ((\"fa2.py\" 765) literal (intOrNat 11))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 765) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 771) eq ((\"fa2.py\" 771) attr ((\"fa2.py\" 771) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\")) \"balance\") ((\"fa2.py\" 771) literal (intOrNat 69)))",
    "line_no": "(\"fa2.py\" 770)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 774) eq ((\"fa2.py\" 774) attr ((\"fa2.py\" 774) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\")) \"balance\") ((\"fa2.py\" 774) literal (intOrNat 31)))",
    "line_no": "(\"fa2.py\" 773)"
   }
  ],
  "kind": "test"
 },
 {
  "shortname": "FA2-nft-mutez",
  "longname": "FA2-nft-mutez",
  "scenario": [
   {
    "action": "html",
    "inner": "FA2 Contract Name: FA2-nft-mutez",
    "line_no": "(\"fa2.py\" 713)",
    "tag": "h1"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 714)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Accounts",
    "line_no": "(\"fa2.py\" 720)",
    "tag": "h2"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 721) list ((\"fa2.py\" 716) account_of_seed \"Administrator\") ((\"fa2.py\" 717) account_of_seed \"Alice\") ((\"fa2.py\" 718) account_of_seed \"Robert\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 721)",
    "stripStrings": false
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 725) static_id 0) \nstorage ((\"fa2.py\" 370) record (administrator ((\"fa2.py\" 716) resolve ((\"fa2.py\" 716) attr ((\"fa2.py\" 716) account_of_seed \"Administrator\") \"address\"))) (all_tokens ((\"fa2.py\" 299) literal (nat 0))) (ledger ((\"fa2.py\" 361) type_annotation ((\"fa2.py\" 361) big_map ) (bigmap (unknown 11) (record ((balance \"nat\")) None (\"fa2.py\" 221))))) (metadata ((\"fa2.py\" 723) big_map (((\"fa2.py\" 725) literal (string \"\")) ((\"fa2.py\" 723) literal (bytes \"0x68747470733a2f2f6578616d706c652e636f6d\"))))) (operators ((\"fa2.py\" 244) type_annotation ((\"fa2.py\" 244) big_map ) (bigmap (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)) \"unit\"))) (paused ((\"fa2.py\" 360) literal (bool False))) (token_metadata ((\"fa2.py\" 362) type_annotation ((\"fa2.py\" 362) big_map ) (bigmap \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) None (\"fa2.py\" 282))))) (total_supply ((\"fa2.py\" 371) type_annotation ((\"fa2.py\" 371) big_map ) (bigmap \"nat\" \"nat\"))))\nstorage_type (())\nentry_points ((balance_of True None None None True None (\"fa2.py\" 417) (((\"fa2.py\" 419) verify ((\"fa2.py\" 419) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 419) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 420) set_type ((\"fa2.py\" 417) params) (record ((callback (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))))) (requests (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263))))) (Some ((\"requests\") (\"callback\"))) (\"fa2.py\" 272))) ((\"fa2.py\" 439) define_local \"responses\" ((\"fa2.py\" 439) map_function ((\"fa2.py\" 439) attr ((\"fa2.py\" 417) params) \"requests\") ((\"fa2.py\" 439) lambda 0 None False None \"\" (((\"fa2.py\" 423) verify ((\"fa2.py\" 423) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 12)) \"token_id\")) ((\"fa2.py\" 423) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 424) if_block ((\"fa2.py\" 424) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 12)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 12)) \"token_id\") \"nat\"))) (((\"fa2.py\" 426) result ((\"fa2.py\" 427) record (balance ((\"fa2.py\" 425) attr ((\"fa2.py\" 425) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 12)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 12)) \"token_id\") \"nat\"))) \"balance\")) (request ((\"fa2.py\" 428) record (owner ((\"fa2.py\" 429) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 12)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 430) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 12)) \"token_id\") \"nat\")))))))) (else_block (((\"fa2.py\" 433) result ((\"fa2.py\" 434) record (balance ((\"fa2.py\" 434) literal (intOrNat 0))) (request ((\"fa2.py\" 435) record (owner ((\"fa2.py\" 436) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 12)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 437) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 12)) \"token_id\") \"nat\"))))))))))) True) ((\"fa2.py\" 441) set ((\"fa2.py\" 441) operations) ((\"fa2.py\" 441) cons ((\"fa2.py\" 441) transfer ((\"fa2.py\" 441) get_local \"responses\") ((\"fa2.py\" 441) literal (mutez 0)) ((\"fa2.py\" 440) type_annotation ((\"fa2.py\" 440) attr ((\"fa2.py\" 417) params) \"callback\") (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))))) ((\"fa2.py\" 441) operations))))) (mint True None None None True None (\"fa2.py\" 522) (((\"fa2.py\" 523) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 523) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 528) verify ((\"fa2.py\" 528) eq ((\"fa2.py\" 528) attr ((\"fa2.py\" 522) params) \"amount\") ((\"fa2.py\" 528) literal (intOrNat 1))) ((\"fa2.py\" 528) literal (string \"NFT-asset: amount <> 1\"))) ((\"fa2.py\" 529) verify ((\"fa2.py\" 530) not ((\"fa2.py\" 310) lt ((\"fa2.py\" 530) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 530) attr ((\"fa2.py\" 725) data) \"all_tokens\"))) ((\"fa2.py\" 529) literal (string \"NFT-asset: cannot mint twice same token\"))) ((\"fa2.py\" 534) if_block ((\"fa2.py\" 534) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 530) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) (((\"fa2.py\" 535) set ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 530) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 530) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 528) attr ((\"fa2.py\" 522) params) \"amount\"))))) (else_block (((\"fa2.py\" 537) set ((\"fa2.py\" 537) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 530) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 528) attr ((\"fa2.py\" 522) params) \"amount\")))))) ((\"fa2.py\" 538) if_block ((\"fa2.py\" 538) not ((\"fa2.py\" 310) lt ((\"fa2.py\" 530) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 530) attr ((\"fa2.py\" 725) data) \"all_tokens\"))) (((\"fa2.py\" 304) verify ((\"fa2.py\" 304) eq ((\"fa2.py\" 530) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 530) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 304) literal (string \"Token-IDs should be consecutive\"))) ((\"fa2.py\" 305) set ((\"fa2.py\" 530) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 305) add ((\"fa2.py\" 530) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 305) literal (intOrNat 1)))) ((\"fa2.py\" 540) set ((\"fa2.py\" 540) get_item ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 530) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 540) record (token_id ((\"fa2.py\" 530) attr ((\"fa2.py\" 522) params) \"token_id\")) (token_info ((\"fa2.py\" 542) attr ((\"fa2.py\" 522) params) \"metadata\")))))) ((\"fa2.py\" 545) set ((\"fa2.py\" 545) get_item ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 530) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 545) add ((\"fa2.py\" 528) attr ((\"fa2.py\" 522) params) \"amount\") ((\"fa2.py\" 545) get_item_default ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 530) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 545) literal (intOrNat 0))))))) (mutez_transfer True None None None True None (\"fa2.py\" 355) (((\"fa2.py\" 325) verify ((\"fa2.py\" 325) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 326) set_type ((\"fa2.py\" 326) attr ((\"fa2.py\" 355) params) \"destination\") \"address\") ((\"fa2.py\" 327) set_type ((\"fa2.py\" 327) attr ((\"fa2.py\" 355) params) \"amount\") \"mutez\") ((\"fa2.py\" 328) set ((\"fa2.py\" 328) operations) ((\"fa2.py\" 328) cons ((\"fa2.py\" 328) transfer ((\"\" -1) literal (unit)) ((\"fa2.py\" 327) attr ((\"fa2.py\" 355) params) \"amount\") ((\"fa2.py\" 328) open_variant ((\"fa2.py\" 328) contract \"\" \"unit\" ((\"fa2.py\" 326) attr ((\"fa2.py\" 355) params) \"destination\")) \"Some\" \"None\")) ((\"fa2.py\" 328) operations))))) (set_administrator True None None None True None (\"fa2.py\" 501) (((\"fa2.py\" 502) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 502) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 503) set ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\") ((\"fa2.py\" 501) params)))) (set_metadata True None None None True None (\"fa2.py\" 516) (((\"fa2.py\" 517) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 517) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 518) set ((\"fa2.py\" 518) get_item ((\"fa2.py\" 518) attr ((\"fa2.py\" 725) data) \"metadata\") ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"k\")) ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"v\")))) (set_pause True None None None True None (\"fa2.py\" 510) (((\"fa2.py\" 511) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 511) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 512) set ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\") ((\"fa2.py\" 510) params)))) (transfer True None None None True None (\"fa2.py\" 375) (((\"fa2.py\" 376) verify ((\"fa2.py\" 376) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 376) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 377) set_type ((\"fa2.py\" 375) params) (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169)))) ((\"fa2.py\" 378) for_group \"transfer\" ((\"fa2.py\" 375) params) (((\"fa2.py\" 380) for_group \"tx\" ((\"fa2.py\" 380) attr ((\"fa2.py\" 378) iter \"transfer\") \"txs\") (((\"fa2.py\" 395) verify ((\"fa2.py\" 389) or ((\"fa2.py\" 384) or ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 385) eq ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") ((\"\" -1) sender))) ((\"fa2.py\" 259) contains ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"\" -1) sender)) (owner ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\")) (token_id ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))) ((\"fa2.py\" 395) literal (string \"FA2_NOT_OPERATOR\"))) ((\"fa2.py\" 396) verify ((\"fa2.py\" 397) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\")) ((\"fa2.py\" 396) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 401) if_block ((\"fa2.py\" 401) gt ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\") ((\"fa2.py\" 401) literal (intOrNat 0))) (((\"fa2.py\" 403) verify ((\"fa2.py\" 404) ge ((\"fa2.py\" 404) attr ((\"fa2.py\" 404) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")) ((\"fa2.py\" 403) literal (string \"FA2_INSUFFICIENT_BALANCE\"))) ((\"fa2.py\" 407) set ((\"fa2.py\" 407) attr ((\"fa2.py\" 407) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 407) open_variant ((\"fa2.py\" 407) is_nat ((\"fa2.py\" 408) sub ((\"fa2.py\" 408) attr ((\"fa2.py\" 408) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))) \"Some\" \"None\")) ((\"fa2.py\" 409) if_block ((\"fa2.py\" 409) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) (((\"fa2.py\" 410) set ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 410) add ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))))) (else_block (((\"fa2.py\" 412) set ((\"fa2.py\" 412) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")))))))) (else_block ()))))))) (update_operators True None None None True None (\"fa2.py\" 457) (((\"fa2.py\" 458) set_type ((\"fa2.py\" 457) params) (list (variant ((add_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189))) (remove_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) None (\"fa2.py\" 459)))) ((\"fa2.py\" 465) for_group \"update\" ((\"fa2.py\" 457) params) (((\"fa2.py\" 466) match_cases ((\"fa2.py\" 465) iter \"update\") \"match_fa2_466\" (((\"fa2.py\" 467) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"add_operator\" \"add_operator\" (((\"fa2.py\" 468) verify ((\"fa2.py\" 469) or ((\"fa2.py\" 469) eq ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 468) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 255) set ((\"fa2.py\" 255) get_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 474) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"operator\")) (owner ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\")) (token_id ((\"fa2.py\" 475) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))) ((\"\" -1) literal (unit))))) ((\"fa2.py\" 476) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"remove_operator\" \"remove_operator\" (((\"fa2.py\" 477) verify ((\"fa2.py\" 478) or ((\"fa2.py\" 478) eq ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 477) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 257) del_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 483) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"operator\")) (owner ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\")) (token_id ((\"fa2.py\" 484) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))))))))))))\nflags ((initial-cast) (exceptions default-line))\nprivates ()\nviews ((offchain all_tokens False (\"fa2.py\" 586) True \"\\n            This view is specified (but optional) in the standard.\\n\\n            This contract is built with assume_consecutive_token_ids =\\n            True, so we return a list constructed from the number of tokens.\\n            \" (((\"fa2.py\" 588) result ((\"fa2.py\" 588) range ((\"fa2.py\" 588) literal (intOrNat 0)) ((\"fa2.py\" 588) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 588) literal (intOrNat 1)))))) (offchain count_tokens False (\"fa2.py\" 574) True \"Get how many tokens are in this FA2 contract.\\n        \" (((\"fa2.py\" 577) result ((\"fa2.py\" 577) attr ((\"fa2.py\" 725) data) \"all_tokens\")))) (offchain does_token_exist True (\"fa2.py\" 580) True \"Ask whether a token ID is exists.\" (((\"fa2.py\" 582) set_type ((\"fa2.py\" 580) params) \"nat\") ((\"fa2.py\" 583) result ((\"fa2.py\" 583) contains ((\"fa2.py\" 583) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 580) params))))) (offchain get_balance True (\"fa2.py\" 444) True \"This is the `get_balance` view defined in TZIP-12.\" (((\"fa2.py\" 446) set_type ((\"fa2.py\" 444) params) (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 447))) ((\"fa2.py\" 452) verify ((\"fa2.py\" 452) contains ((\"fa2.py\" 452) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\")) ((\"fa2.py\" 452) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 453) result ((\"fa2.py\" 453) attr ((\"fa2.py\" 453) get_item ((\"fa2.py\" 453) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\") \"nat\"))) \"balance\")))) (offchain is_operator True (\"fa2.py\" 601) True \"\" (((\"fa2.py\" 602) set_type ((\"fa2.py\" 601) params) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 603))) ((\"fa2.py\" 607) result ((\"fa2.py\" 259) contains ((\"fa2.py\" 608) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 610) attr ((\"fa2.py\" 601) params) \"operator\")) (owner ((\"fa2.py\" 609) attr ((\"fa2.py\" 601) params) \"owner\")) (token_id ((\"fa2.py\" 611) attr ((\"fa2.py\" 601) params) \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))))) (offchain total_supply True (\"fa2.py\" 593) True \"\" (((\"fa2.py\" 595) result ((\"fa2.py\" 595) get_item ((\"fa2.py\" 595) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 593) params))))))\nentry_points_layout ()\ninitial_metadata ((metadata_base (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"version\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-nft-mutez\")))) (elem ((\"fa2.py\" 674) literal (string \"description\")) (meta_expr ((\"fa2.py\" 674) literal (string \"This is a didactic reference implementation of FA2, a.k.a. TZIP-012, using SmartPy.\n\nThis particular contract uses the configuration named: FA2-nft-mutez.\")))) (elem ((\"fa2.py\" 674) literal (string \"interfaces\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-012\"))) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-016\"))))) (elem ((\"fa2.py\" 674) literal (string \"authors\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"Seb Mondet <https://seb.mondet.org>\"))))) (elem ((\"fa2.py\" 674) literal (string \"homepage\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy\")))) (elem ((\"fa2.py\" 674) literal (string \"views\")) (meta_list (\"fa2.py\" 674) (meta_view \"get_balance\" (\"fa2.py\" 444)) (meta_view \"does_token_exist\" (\"fa2.py\" 580)) (meta_view \"count_tokens\" (\"fa2.py\" 574)) (meta_view \"all_tokens\" (\"fa2.py\" 586)) (meta_view \"is_operator\" (\"fa2.py\" 601)) (meta_view \"total_supply\" (\"fa2.py\" 593)))) (elem ((\"fa2.py\" 674) literal (string \"source\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"tools\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"SmartPy\"))))) (elem ((\"fa2.py\" 674) literal (string \"location\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy.git\")))))) (elem ((\"fa2.py\" 674) literal (string \"permissions\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"operator\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-or-operator-transfer\")))) (elem ((\"fa2.py\" 674) literal (string \"receiver\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))) (elem ((\"fa2.py\" 674) literal (string \"sender\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))))) (elem ((\"fa2.py\" 674) literal (string \"fa2-smartpy\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"configuration\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"add_mutez_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"allow_self_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"assume_consecutive_token_ids\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"force_layouts\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"lazy_entry_points\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"name\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-nft-mutez\")))) (elem ((\"fa2.py\" 674) literal (string \"non_fungible\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"readable\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"single_asset\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"store_total_supply\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"support_operator\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"use_token_metadata_offchain_view\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))))))))))\nbalance ())",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 725)",
    "show": true
   }
  ],
  "kind": "test"
 },
 {
  "shortname": "FA2-no_readable",
  "longname": "FA2-no_readable",
  "scenario": [
   {
    "action": "html",
    "inner": "FA2 Contract Name: FA2-no_readable",
    "line_no": "(\"fa2.py\" 713)",
    "tag": "h1"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 714)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Accounts",
    "line_no": "(\"fa2.py\" 720)",
    "tag": "h2"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 721) list ((\"fa2.py\" 716) account_of_seed \"Administrator\") ((\"fa2.py\" 717) account_of_seed \"Alice\") ((\"fa2.py\" 718) account_of_seed \"Robert\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 721)",
    "stripStrings": false
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 725) static_id 0) \nstorage ((\"fa2.py\" 370) record (administrator ((\"fa2.py\" 716) resolve ((\"fa2.py\" 716) attr ((\"fa2.py\" 716) account_of_seed \"Administrator\") \"address\"))) (all_tokens ((\"fa2.py\" 299) literal (nat 0))) (ledger ((\"fa2.py\" 361) type_annotation ((\"fa2.py\" 361) big_map ) (bigmap (unknown 14) (record ((balance \"nat\")) None (\"fa2.py\" 221))))) (metadata ((\"fa2.py\" 723) big_map (((\"fa2.py\" 725) literal (string \"\")) ((\"fa2.py\" 723) literal (bytes \"0x68747470733a2f2f6578616d706c652e636f6d\"))))) (operators ((\"fa2.py\" 244) type_annotation ((\"fa2.py\" 244) big_map ) (bigmap \"bytes\" \"unit\"))) (paused ((\"fa2.py\" 360) literal (bool False))) (token_metadata ((\"fa2.py\" 362) type_annotation ((\"fa2.py\" 362) big_map ) (bigmap \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) None (\"fa2.py\" 282))))) (total_supply ((\"fa2.py\" 371) type_annotation ((\"fa2.py\" 371) big_map ) (bigmap \"nat\" \"nat\"))))\nstorage_type (())\nentry_points ((balance_of True None None None True None (\"fa2.py\" 417) (((\"fa2.py\" 419) verify ((\"fa2.py\" 419) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 419) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 420) set_type ((\"fa2.py\" 417) params) (record ((callback (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))))) (requests (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263))))) (Some ((\"requests\") (\"callback\"))) (\"fa2.py\" 272))) ((\"fa2.py\" 439) define_local \"responses\" ((\"fa2.py\" 439) map_function ((\"fa2.py\" 439) attr ((\"fa2.py\" 417) params) \"requests\") ((\"fa2.py\" 439) lambda 0 None False None \"\" (((\"fa2.py\" 423) verify ((\"fa2.py\" 423) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 15)) \"token_id\")) ((\"fa2.py\" 423) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 424) if_block ((\"fa2.py\" 424) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 15)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 15)) \"token_id\") \"nat\")))) (((\"fa2.py\" 426) result ((\"fa2.py\" 427) record (balance ((\"fa2.py\" 425) attr ((\"fa2.py\" 425) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 15)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 15)) \"token_id\") \"nat\")))) \"balance\")) (request ((\"fa2.py\" 428) record (owner ((\"fa2.py\" 429) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 15)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 430) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 15)) \"token_id\") \"nat\")))))))) (else_block (((\"fa2.py\" 433) result ((\"fa2.py\" 434) record (balance ((\"fa2.py\" 434) literal (intOrNat 0))) (request ((\"fa2.py\" 435) record (owner ((\"fa2.py\" 436) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 15)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 437) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 15)) \"token_id\") \"nat\"))))))))))) True) ((\"fa2.py\" 441) set ((\"fa2.py\" 441) operations) ((\"fa2.py\" 441) cons ((\"fa2.py\" 441) transfer ((\"fa2.py\" 441) get_local \"responses\") ((\"fa2.py\" 441) literal (mutez 0)) ((\"fa2.py\" 440) type_annotation ((\"fa2.py\" 440) attr ((\"fa2.py\" 417) params) \"callback\") (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))))) ((\"fa2.py\" 441) operations))))) (mint True None None None True None (\"fa2.py\" 522) (((\"fa2.py\" 523) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 523) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 534) if_block ((\"fa2.py\" 534) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\")))) (((\"fa2.py\" 535) set ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\")))) \"balance\") ((\"fa2.py\" 535) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\")))) \"balance\") ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\"))))) (else_block (((\"fa2.py\" 537) set ((\"fa2.py\" 537) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\")))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\")))))) ((\"fa2.py\" 538) if_block ((\"fa2.py\" 538) not ((\"fa2.py\" 310) lt ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\"))) (((\"fa2.py\" 304) verify ((\"fa2.py\" 304) eq ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 304) literal (string \"Token-IDs should be consecutive\"))) ((\"fa2.py\" 305) set ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 305) add ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 305) literal (intOrNat 1)))) ((\"fa2.py\" 540) set ((\"fa2.py\" 540) get_item ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 540) record (token_id ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) (token_info ((\"fa2.py\" 542) attr ((\"fa2.py\" 522) params) \"metadata\")))))) ((\"fa2.py\" 545) set ((\"fa2.py\" 545) get_item ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 545) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\") ((\"fa2.py\" 545) get_item_default ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 545) literal (intOrNat 0))))))) (set_administrator True None None None True None (\"fa2.py\" 501) (((\"fa2.py\" 502) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 502) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 503) set ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\") ((\"fa2.py\" 501) params)))) (set_metadata True None None None True None (\"fa2.py\" 516) (((\"fa2.py\" 517) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 517) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 518) set ((\"fa2.py\" 518) get_item ((\"fa2.py\" 518) attr ((\"fa2.py\" 725) data) \"metadata\") ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"k\")) ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"v\")))) (set_pause True None None None True None (\"fa2.py\" 510) (((\"fa2.py\" 511) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 511) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 512) set ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\") ((\"fa2.py\" 510) params)))) (transfer True None None None True None (\"fa2.py\" 375) (((\"fa2.py\" 376) verify ((\"fa2.py\" 376) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 376) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 377) set_type ((\"fa2.py\" 375) params) (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169)))) ((\"fa2.py\" 378) for_group \"transfer\" ((\"fa2.py\" 375) params) (((\"fa2.py\" 380) for_group \"tx\" ((\"fa2.py\" 380) attr ((\"fa2.py\" 378) iter \"transfer\") \"txs\") (((\"fa2.py\" 395) verify ((\"fa2.py\" 389) or ((\"fa2.py\" 384) or ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 385) eq ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") ((\"\" -1) sender))) ((\"fa2.py\" 259) contains ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 253) pack ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"\" -1) sender)) (owner ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\")) (token_id ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))))) ((\"fa2.py\" 395) literal (string \"FA2_NOT_OPERATOR\"))) ((\"fa2.py\" 396) verify ((\"fa2.py\" 397) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\")) ((\"fa2.py\" 396) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 401) if_block ((\"fa2.py\" 401) gt ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\") ((\"fa2.py\" 401) literal (intOrNat 0))) (((\"fa2.py\" 403) verify ((\"fa2.py\" 404) ge ((\"fa2.py\" 404) attr ((\"fa2.py\" 404) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\")))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")) ((\"fa2.py\" 403) literal (string \"FA2_INSUFFICIENT_BALANCE\"))) ((\"fa2.py\" 407) set ((\"fa2.py\" 407) attr ((\"fa2.py\" 407) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\")))) \"balance\") ((\"fa2.py\" 407) open_variant ((\"fa2.py\" 407) is_nat ((\"fa2.py\" 408) sub ((\"fa2.py\" 408) attr ((\"fa2.py\" 408) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\")))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))) \"Some\" \"None\")) ((\"fa2.py\" 409) if_block ((\"fa2.py\" 409) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\")))) (((\"fa2.py\" 410) set ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\")))) \"balance\") ((\"fa2.py\" 410) add ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\")))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))))) (else_block (((\"fa2.py\" 412) set ((\"fa2.py\" 412) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\")))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")))))))) (else_block ()))))))) (update_operators True None None None True None (\"fa2.py\" 457) (((\"fa2.py\" 458) set_type ((\"fa2.py\" 457) params) (list (variant ((add_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189))) (remove_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) None (\"fa2.py\" 459)))) ((\"fa2.py\" 465) for_group \"update\" ((\"fa2.py\" 457) params) (((\"fa2.py\" 466) match_cases ((\"fa2.py\" 465) iter \"update\") \"match_fa2_466\" (((\"fa2.py\" 467) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"add_operator\" \"add_operator\" (((\"fa2.py\" 468) verify ((\"fa2.py\" 469) or ((\"fa2.py\" 469) eq ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 468) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 255) set ((\"fa2.py\" 255) get_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 253) pack ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 474) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"operator\")) (owner ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\")) (token_id ((\"fa2.py\" 475) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))) ((\"\" -1) literal (unit))))) ((\"fa2.py\" 476) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"remove_operator\" \"remove_operator\" (((\"fa2.py\" 477) verify ((\"fa2.py\" 478) or ((\"fa2.py\" 478) eq ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 477) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 257) del_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 253) pack ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 483) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"operator\")) (owner ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\")) (token_id ((\"fa2.py\" 484) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))))))))))))\nflags ((initial-cast) (exceptions default-line))\nprivates ()\nviews ((offchain all_tokens False (\"fa2.py\" 586) True \"\\n            This view is specified (but optional) in the standard.\\n\\n            This contract is built with assume_consecutive_token_ids =\\n            True, so we return a list constructed from the number of tokens.\\n            \" (((\"fa2.py\" 588) result ((\"fa2.py\" 588) range ((\"fa2.py\" 588) literal (intOrNat 0)) ((\"fa2.py\" 588) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 588) literal (intOrNat 1)))))) (offchain count_tokens False (\"fa2.py\" 574) True \"Get how many tokens are in this FA2 contract.\\n        \" (((\"fa2.py\" 577) result ((\"fa2.py\" 577) attr ((\"fa2.py\" 725) data) \"all_tokens\")))) (offchain does_token_exist True (\"fa2.py\" 580) True \"Ask whether a token ID is exists.\" (((\"fa2.py\" 582) set_type ((\"fa2.py\" 580) params) \"nat\") ((\"fa2.py\" 583) result ((\"fa2.py\" 583) contains ((\"fa2.py\" 583) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 580) params))))) (offchain get_balance True (\"fa2.py\" 444) True \"This is the `get_balance` view defined in TZIP-12.\" (((\"fa2.py\" 446) set_type ((\"fa2.py\" 444) params) (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 447))) ((\"fa2.py\" 452) verify ((\"fa2.py\" 452) contains ((\"fa2.py\" 452) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\")) ((\"fa2.py\" 452) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 453) result ((\"fa2.py\" 453) attr ((\"fa2.py\" 453) get_item ((\"fa2.py\" 453) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\") \"nat\")))) \"balance\")))) (offchain is_operator True (\"fa2.py\" 601) True \"\" (((\"fa2.py\" 602) set_type ((\"fa2.py\" 601) params) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 603))) ((\"fa2.py\" 607) result ((\"fa2.py\" 259) contains ((\"fa2.py\" 608) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 253) pack ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 610) attr ((\"fa2.py\" 601) params) \"operator\")) (owner ((\"fa2.py\" 609) attr ((\"fa2.py\" 601) params) \"owner\")) (token_id ((\"fa2.py\" 611) attr ((\"fa2.py\" 601) params) \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))))))) (offchain total_supply True (\"fa2.py\" 593) True \"\" (((\"fa2.py\" 595) result ((\"fa2.py\" 595) get_item ((\"fa2.py\" 595) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 593) params))))))\nentry_points_layout ()\ninitial_metadata ((metadata_base (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"version\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-no_readable\")))) (elem ((\"fa2.py\" 674) literal (string \"description\")) (meta_expr ((\"fa2.py\" 674) literal (string \"This is a didactic reference implementation of FA2, a.k.a. TZIP-012, using SmartPy.\n\nThis particular contract uses the configuration named: FA2-no_readable.\")))) (elem ((\"fa2.py\" 674) literal (string \"interfaces\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-012\"))) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-016\"))))) (elem ((\"fa2.py\" 674) literal (string \"authors\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"Seb Mondet <https://seb.mondet.org>\"))))) (elem ((\"fa2.py\" 674) literal (string \"homepage\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy\")))) (elem ((\"fa2.py\" 674) literal (string \"views\")) (meta_list (\"fa2.py\" 674) (meta_view \"get_balance\" (\"fa2.py\" 444)) (meta_view \"does_token_exist\" (\"fa2.py\" 580)) (meta_view \"count_tokens\" (\"fa2.py\" 574)) (meta_view \"all_tokens\" (\"fa2.py\" 586)) (meta_view \"is_operator\" (\"fa2.py\" 601)) (meta_view \"total_supply\" (\"fa2.py\" 593)))) (elem ((\"fa2.py\" 674) literal (string \"source\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"tools\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"SmartPy\"))))) (elem ((\"fa2.py\" 674) literal (string \"location\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy.git\")))))) (elem ((\"fa2.py\" 674) literal (string \"permissions\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"operator\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-or-operator-transfer\")))) (elem ((\"fa2.py\" 674) literal (string \"receiver\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))) (elem ((\"fa2.py\" 674) literal (string \"sender\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))))) (elem ((\"fa2.py\" 674) literal (string \"fa2-smartpy\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"configuration\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"add_mutez_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"allow_self_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"assume_consecutive_token_ids\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"force_layouts\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"lazy_entry_points\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"name\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-no_readable\")))) (elem ((\"fa2.py\" 674) literal (string \"non_fungible\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"readable\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"single_asset\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"store_total_supply\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"support_operator\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"use_token_metadata_offchain_view\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))))))))))\nbalance ())",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 725)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Initial Minting",
    "line_no": "(\"fa2.py\" 729)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "The administrator mints 100 token-0's to Alice.",
    "line_no": "(\"fa2.py\" 730)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 735)",
    "message": "mint",
    "params": "((\"fa2.py\" 735) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 735) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 735) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 735) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 735) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 735) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 740)",
    "message": "mint",
    "params": "((\"fa2.py\" 740) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 740) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 740) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 740) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 740) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 740) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Transfers Alice -> Bob",
    "line_no": "(\"fa2.py\" 744)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 745)",
    "message": "transfer",
    "params": "((\"fa2.py\" 745) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 749) record (amount ((\"fa2.py\" 749) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 749) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 755) eq ((\"fa2.py\" 755) attr ((\"fa2.py\" 755) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\")))) \"balance\") ((\"fa2.py\" 755) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 754)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 757) eq ((\"fa2.py\" 757) attr ((\"fa2.py\" 757) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\")))) \"balance\") ((\"fa2.py\" 757) literal (intOrNat 10)))",
    "line_no": "(\"fa2.py\" 756)"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 758)",
    "message": "transfer",
    "params": "((\"fa2.py\" 758) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 762) record (amount ((\"fa2.py\" 762) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 762) literal (intOrNat 0)))) ((\"fa2.py\" 765) record (amount ((\"fa2.py\" 765) literal (intOrNat 11))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 765) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 771) eq ((\"fa2.py\" 771) attr ((\"fa2.py\" 771) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\")))) \"balance\") ((\"fa2.py\" 771) literal (intOrNat 69)))",
    "line_no": "(\"fa2.py\" 770)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 774) eq ((\"fa2.py\" 774) attr ((\"fa2.py\" 774) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 214) pack ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\")))) \"balance\") ((\"fa2.py\" 774) literal (intOrNat 31)))",
    "line_no": "(\"fa2.py\" 773)"
   },
   {
    "action": "html",
    "inner": "More Token Types",
    "line_no": "(\"fa2.py\" 778)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 783)",
    "message": "mint",
    "params": "((\"fa2.py\" 783) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 783) literal (intOrNat 100))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 783) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 783) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x546865205365636f6e6420546f6b656e\"))) (((\"fa2.py\" 783) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b31\"))))) (token_id ((\"fa2.py\" 783) literal (intOrNat 1))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 791)",
    "message": "mint",
    "params": "((\"fa2.py\" 791) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 791) literal (intOrNat 200))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 791) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 791) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e204e756d626572205468726565\"))) (((\"fa2.py\" 791) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b32\"))))) (token_id ((\"fa2.py\" 791) literal (intOrNat 2))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Multi-token Transfer Bob -> Alice",
    "line_no": "(\"fa2.py\" 795)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 796)",
    "message": "transfer",
    "params": "((\"fa2.py\" 796) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 800) record (amount ((\"fa2.py\" 800) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 800) literal (intOrNat 0)))) ((\"fa2.py\" 803) record (amount ((\"fa2.py\" 803) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 803) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 809) record (amount ((\"fa2.py\" 809) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 809) literal (intOrNat 2))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Other Basic Permission Tests",
    "line_no": "(\"fa2.py\" 813)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "Bob cannot transfer Alice's tokens.",
    "line_no": "(\"fa2.py\" 814)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 815)",
    "message": "transfer",
    "params": "((\"fa2.py\" 815) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 819) record (amount ((\"fa2.py\" 819) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 819) literal (intOrNat 0)))) ((\"fa2.py\" 822) record (amount ((\"fa2.py\" 822) literal (intOrNat 1))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 822) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert",
    "valid": "((\"fa2.py\" 815) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Admin can transfer anything.",
    "line_no": "(\"fa2.py\" 826)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 827)",
    "message": "transfer",
    "params": "((\"fa2.py\" 827) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 831) record (amount ((\"fa2.py\" 831) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 831) literal (intOrNat 0)))) ((\"fa2.py\" 834) record (amount ((\"fa2.py\" 834) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 834) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 839) record (amount ((\"fa2.py\" 839) literal (intOrNat 11))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 839) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Even Admin cannot transfer too much.",
    "line_no": "(\"fa2.py\" 843)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 844)",
    "message": "transfer",
    "params": "((\"fa2.py\" 844) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 848) record (amount ((\"fa2.py\" 848) literal (intOrNat 1000))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 848) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator",
    "valid": "((\"fa2.py\" 844) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Consumer Contract for Callback Calls.",
    "line_no": "(\"fa2.py\" 852)",
    "tag": "h3"
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 854) static_id 1) \nstorage ((\"fa2.py\" 689) record (last_sum ((\"fa2.py\" 689) literal (intOrNat 0))) (operator_support ((\"fa2.py\" 689) literal (bool False))))\nstorage_type (())\nentry_points ((receive_balances True None None None True None (\"fa2.py\" 698) (((\"fa2.py\" 699) set_type ((\"fa2.py\" 698) params) (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))) ((\"fa2.py\" 700) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 700) literal (intOrNat 0))) ((\"fa2.py\" 701) for_group \"resp\" ((\"fa2.py\" 698) params) (((\"fa2.py\" 702) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) add ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) attr ((\"fa2.py\" 701) iter \"resp\") \"balance\"))))))) (reinit True None None None False None (\"fa2.py\" 693) (((\"fa2.py\" 694) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 694) literal (intOrNat 0))))))\nflags ()\nprivates ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "((\"fa2.py\" 854) static_id 1)",
    "line_no": "(\"fa2.py\" 854)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Consumer virtual address: ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")",
    "line_no": "(\"fa2.py\" 855)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Balance-of.",
    "line_no": "(\"fa2.py\" 857)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 865)",
    "message": "balance_of",
    "params": "((\"fa2.py\" 859) record (callback ((\"fa2.py\" 860) open_variant ((\"fa2.py\" 860) contract \"receive_balances\" (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))) ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")) \"Some\" \"None\")) (requests ((\"fa2.py\" 859) list ((\"fa2.py\" 866) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 866) literal (intOrNat 0)))) ((\"fa2.py\" 867) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 867) literal (intOrNat 1)))) ((\"fa2.py\" 868) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 868) literal (intOrNat 2)))))))"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 870) eq ((\"fa2.py\" 870) attr ((\"fa2.py\" 854) contract_data ((\"fa2.py\" 854) static_id 1)) \"last_sum\") ((\"fa2.py\" 870) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 870)"
   },
   {
    "action": "html",
    "inner": "Operators",
    "line_no": "(\"fa2.py\" 871)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "This version was compiled with operator support.",
    "line_no": "(\"fa2.py\" 877)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Calling 0 updates should work:",
    "line_no": "(\"fa2.py\" 878)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 879)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 879) list )"
   },
   {
    "action": "html",
    "inner": "Operator Accounts",
    "line_no": "(\"fa2.py\" 880)",
    "tag": "h3"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 884) list ((\"fa2.py\" 881) account_of_seed \"Operator0\") ((\"fa2.py\" 882) account_of_seed \"Operator1\") ((\"fa2.py\" 883) account_of_seed \"Operator2\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 884)",
    "stripStrings": false
   },
   {
    "action": "html",
    "inner": "Admin can change Alice's operator.",
    "line_no": "(\"fa2.py\" 885)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 886)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 886) list ((\"fa2.py\" 887) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 891) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 2)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Operator1 can now transfer Alice's tokens 0 and 2",
    "line_no": "(\"fa2.py\" 896)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 897)",
    "message": "transfer",
    "params": "((\"fa2.py\" 897) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 901) record (amount ((\"fa2.py\" 901) literal (intOrNat 2))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 901) literal (intOrNat 0)))) ((\"fa2.py\" 904) record (amount ((\"fa2.py\" 904) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 904) literal (intOrNat 2))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Bob's tokens",
    "line_no": "(\"fa2.py\" 908)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 909)",
    "message": "transfer",
    "params": "((\"fa2.py\" 909) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 913) record (amount ((\"fa2.py\" 913) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 913) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1",
    "valid": "((\"fa2.py\" 909) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Operator2 cannot transfer Alice's tokens",
    "line_no": "(\"fa2.py\" 917)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 918)",
    "message": "transfer",
    "params": "((\"fa2.py\" 918) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 922) record (amount ((\"fa2.py\" 922) literal (intOrNat 2))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 922) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator2",
    "valid": "((\"fa2.py\" 918) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can remove their operator",
    "line_no": "(\"fa2.py\" 926)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 927)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 927) list ((\"fa2.py\" 928) variant \"remove_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 932) variant \"remove_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Alice's tokens any more",
    "line_no": "(\"fa2.py\" 937)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 938)",
    "message": "transfer",
    "params": "((\"fa2.py\" 938) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 942) record (amount ((\"fa2.py\" 942) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 942) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1",
    "valid": "((\"fa2.py\" 938) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Bob can add Operator0.",
    "line_no": "(\"fa2.py\" 946)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 947)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 947) list ((\"fa2.py\" 948) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 952) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 1)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 can transfer Bob's tokens '0' and '1'",
    "line_no": "(\"fa2.py\" 957)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 958)",
    "message": "transfer",
    "params": "((\"fa2.py\" 958) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 962) record (amount ((\"fa2.py\" 962) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 962) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 967) record (amount ((\"fa2.py\" 967) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 967) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob cannot add Operator0 for Alice's tokens.",
    "line_no": "(\"fa2.py\" 971)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 972)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 972) list ((\"fa2.py\" 973) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert",
    "valid": "((\"fa2.py\" 972) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can also add Operator0 for their tokens 0.",
    "line_no": "(\"fa2.py\" 979)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 980)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 980) list ((\"fa2.py\" 981) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator0 can now transfer Bob's and Alice's 0-tokens.",
    "line_no": "(\"fa2.py\" 987)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 988)",
    "message": "transfer",
    "params": "((\"fa2.py\" 988) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 992) record (amount ((\"fa2.py\" 992) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 992) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 997) record (amount ((\"fa2.py\" 997) literal (intOrNat 1))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 997) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob adds Operator2 as second operator for 0-tokens.",
    "line_no": "(\"fa2.py\" 1001)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1002)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 1002) list ((\"fa2.py\" 1003) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 883) resolve ((\"fa2.py\" 883) attr ((\"fa2.py\" 883) account_of_seed \"Operator2\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 and Operator2 can transfer Bob's 0-tokens.",
    "line_no": "(\"fa2.py\" 1009)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1010)",
    "message": "transfer",
    "params": "((\"fa2.py\" 1010) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 1014) record (amount ((\"fa2.py\" 1014) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 1014) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1018)",
    "message": "transfer",
    "params": "((\"fa2.py\" 1018) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 1022) record (amount ((\"fa2.py\" 1022) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 1022) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator2"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 1026)",
    "tag": "p"
   }
  ],
  "kind": "test"
 },
 {
  "shortname": "FA2-no_layout",
  "longname": "FA2-no_layout",
  "scenario": [
   {
    "action": "html",
    "inner": "FA2 Contract Name: FA2-no_layout",
    "line_no": "(\"fa2.py\" 713)",
    "tag": "h1"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 714)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Accounts",
    "line_no": "(\"fa2.py\" 720)",
    "tag": "h2"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 721) list ((\"fa2.py\" 716) account_of_seed \"Administrator\") ((\"fa2.py\" 717) account_of_seed \"Alice\") ((\"fa2.py\" 718) account_of_seed \"Robert\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 721)",
    "stripStrings": false
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 725) static_id 0) \nstorage ((\"fa2.py\" 370) record (administrator ((\"fa2.py\" 716) resolve ((\"fa2.py\" 716) attr ((\"fa2.py\" 716) account_of_seed \"Administrator\") \"address\"))) (all_tokens ((\"fa2.py\" 299) literal (nat 0))) (ledger ((\"fa2.py\" 361) type_annotation ((\"fa2.py\" 361) big_map ) (bigmap (unknown 17) (record ((balance \"nat\")) None (\"fa2.py\" 221))))) (metadata ((\"fa2.py\" 723) big_map (((\"fa2.py\" 725) literal (string \"\")) ((\"fa2.py\" 723) literal (bytes \"0x68747470733a2f2f6578616d706c652e636f6d\"))))) (operators ((\"fa2.py\" 244) type_annotation ((\"fa2.py\" 244) big_map ) (bigmap (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)) \"unit\"))) (paused ((\"fa2.py\" 360) literal (bool False))) (token_metadata ((\"fa2.py\" 362) type_annotation ((\"fa2.py\" 362) big_map ) (bigmap \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) None (\"fa2.py\" 282))))) (total_supply ((\"fa2.py\" 371) type_annotation ((\"fa2.py\" 371) big_map ) (bigmap \"nat\" \"nat\"))))\nstorage_type (())\nentry_points ((balance_of True None None None True None (\"fa2.py\" 417) (((\"fa2.py\" 419) verify ((\"fa2.py\" 419) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 419) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 420) set_type ((\"fa2.py\" 417) params) (record ((callback (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))))) (requests (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263))))) (Some ((\"requests\") (\"callback\"))) (\"fa2.py\" 272))) ((\"fa2.py\" 439) define_local \"responses\" ((\"fa2.py\" 439) map_function ((\"fa2.py\" 439) attr ((\"fa2.py\" 417) params) \"requests\") ((\"fa2.py\" 439) lambda 0 None False None \"\" (((\"fa2.py\" 423) verify ((\"fa2.py\" 423) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 18)) \"token_id\")) ((\"fa2.py\" 423) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 424) if_block ((\"fa2.py\" 424) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 18)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 18)) \"token_id\") \"nat\"))) (((\"fa2.py\" 426) result ((\"fa2.py\" 427) record (balance ((\"fa2.py\" 425) attr ((\"fa2.py\" 425) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 18)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 18)) \"token_id\") \"nat\"))) \"balance\")) (request ((\"fa2.py\" 428) record (owner ((\"fa2.py\" 429) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 18)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 430) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 18)) \"token_id\") \"nat\")))))))) (else_block (((\"fa2.py\" 433) result ((\"fa2.py\" 434) record (balance ((\"fa2.py\" 434) literal (intOrNat 0))) (request ((\"fa2.py\" 435) record (owner ((\"fa2.py\" 436) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 18)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 437) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 18)) \"token_id\") \"nat\"))))))))))) True) ((\"fa2.py\" 441) set ((\"fa2.py\" 441) operations) ((\"fa2.py\" 441) cons ((\"fa2.py\" 441) transfer ((\"fa2.py\" 441) get_local \"responses\") ((\"fa2.py\" 441) literal (mutez 0)) ((\"fa2.py\" 440) type_annotation ((\"fa2.py\" 440) attr ((\"fa2.py\" 417) params) \"callback\") (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))))) ((\"fa2.py\" 441) operations))))) (mint True None None None True None (\"fa2.py\" 522) (((\"fa2.py\" 523) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 523) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 534) if_block ((\"fa2.py\" 534) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) (((\"fa2.py\" 535) set ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\"))))) (else_block (((\"fa2.py\" 537) set ((\"fa2.py\" 537) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\")))))) ((\"fa2.py\" 538) if_block ((\"fa2.py\" 538) not ((\"fa2.py\" 310) lt ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\"))) (((\"fa2.py\" 304) verify ((\"fa2.py\" 304) eq ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 304) literal (string \"Token-IDs should be consecutive\"))) ((\"fa2.py\" 305) set ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 305) add ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 305) literal (intOrNat 1)))) ((\"fa2.py\" 540) set ((\"fa2.py\" 540) get_item ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 540) record (token_id ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) (token_info ((\"fa2.py\" 542) attr ((\"fa2.py\" 522) params) \"metadata\")))))) ((\"fa2.py\" 545) set ((\"fa2.py\" 545) get_item ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 545) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\") ((\"fa2.py\" 545) get_item_default ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 545) literal (intOrNat 0))))))) (set_administrator True None None None True None (\"fa2.py\" 501) (((\"fa2.py\" 502) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 502) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 503) set ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\") ((\"fa2.py\" 501) params)))) (set_metadata True None None None True None (\"fa2.py\" 516) (((\"fa2.py\" 517) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 517) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 518) set ((\"fa2.py\" 518) get_item ((\"fa2.py\" 518) attr ((\"fa2.py\" 725) data) \"metadata\") ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"k\")) ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"v\")))) (set_pause True None None None True None (\"fa2.py\" 510) (((\"fa2.py\" 511) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 511) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 512) set ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\") ((\"fa2.py\" 510) params)))) (transfer True None None None True None (\"fa2.py\" 375) (((\"fa2.py\" 376) verify ((\"fa2.py\" 376) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 376) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 377) set_type ((\"fa2.py\" 375) params) (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169)))) ((\"fa2.py\" 378) for_group \"transfer\" ((\"fa2.py\" 375) params) (((\"fa2.py\" 380) for_group \"tx\" ((\"fa2.py\" 380) attr ((\"fa2.py\" 378) iter \"transfer\") \"txs\") (((\"fa2.py\" 395) verify ((\"fa2.py\" 389) or ((\"fa2.py\" 384) or ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 385) eq ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") ((\"\" -1) sender))) ((\"fa2.py\" 259) contains ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"\" -1) sender)) (owner ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\")) (token_id ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))) ((\"fa2.py\" 395) literal (string \"FA2_NOT_OPERATOR\"))) ((\"fa2.py\" 396) verify ((\"fa2.py\" 397) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\")) ((\"fa2.py\" 396) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 401) if_block ((\"fa2.py\" 401) gt ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\") ((\"fa2.py\" 401) literal (intOrNat 0))) (((\"fa2.py\" 403) verify ((\"fa2.py\" 404) ge ((\"fa2.py\" 404) attr ((\"fa2.py\" 404) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")) ((\"fa2.py\" 403) literal (string \"FA2_INSUFFICIENT_BALANCE\"))) ((\"fa2.py\" 407) set ((\"fa2.py\" 407) attr ((\"fa2.py\" 407) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 407) open_variant ((\"fa2.py\" 407) is_nat ((\"fa2.py\" 408) sub ((\"fa2.py\" 408) attr ((\"fa2.py\" 408) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))) \"Some\" \"None\")) ((\"fa2.py\" 409) if_block ((\"fa2.py\" 409) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) (((\"fa2.py\" 410) set ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 410) add ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))))) (else_block (((\"fa2.py\" 412) set ((\"fa2.py\" 412) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")))))))) (else_block ()))))))) (update_operators True None None None True None (\"fa2.py\" 457) (((\"fa2.py\" 458) set_type ((\"fa2.py\" 457) params) (list (variant ((add_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) None (\"fa2.py\" 184))) (remove_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) None (\"fa2.py\" 184)))) None (\"fa2.py\" 459)))) ((\"fa2.py\" 465) for_group \"update\" ((\"fa2.py\" 457) params) (((\"fa2.py\" 466) match_cases ((\"fa2.py\" 465) iter \"update\") \"match_fa2_466\" (((\"fa2.py\" 467) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"add_operator\" \"add_operator\" (((\"fa2.py\" 468) verify ((\"fa2.py\" 469) or ((\"fa2.py\" 469) eq ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 468) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 255) set ((\"fa2.py\" 255) get_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 474) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"operator\")) (owner ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\")) (token_id ((\"fa2.py\" 475) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))) ((\"\" -1) literal (unit))))) ((\"fa2.py\" 476) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"remove_operator\" \"remove_operator\" (((\"fa2.py\" 477) verify ((\"fa2.py\" 478) or ((\"fa2.py\" 478) eq ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 477) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 257) del_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 483) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"operator\")) (owner ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\")) (token_id ((\"fa2.py\" 484) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))))))))))))\nflags ((initial-cast) (exceptions default-line))\nprivates ()\nviews ((offchain all_tokens False (\"fa2.py\" 586) True \"\\n            This view is specified (but optional) in the standard.\\n\\n            This contract is built with assume_consecutive_token_ids =\\n            True, so we return a list constructed from the number of tokens.\\n            \" (((\"fa2.py\" 588) result ((\"fa2.py\" 588) range ((\"fa2.py\" 588) literal (intOrNat 0)) ((\"fa2.py\" 588) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 588) literal (intOrNat 1)))))) (offchain count_tokens False (\"fa2.py\" 574) True \"Get how many tokens are in this FA2 contract.\\n        \" (((\"fa2.py\" 577) result ((\"fa2.py\" 577) attr ((\"fa2.py\" 725) data) \"all_tokens\")))) (offchain does_token_exist True (\"fa2.py\" 580) True \"Ask whether a token ID is exists.\" (((\"fa2.py\" 582) set_type ((\"fa2.py\" 580) params) \"nat\") ((\"fa2.py\" 583) result ((\"fa2.py\" 583) contains ((\"fa2.py\" 583) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 580) params))))) (offchain get_balance True (\"fa2.py\" 444) True \"This is the `get_balance` view defined in TZIP-12.\" (((\"fa2.py\" 446) set_type ((\"fa2.py\" 444) params) (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 447))) ((\"fa2.py\" 452) verify ((\"fa2.py\" 452) contains ((\"fa2.py\" 452) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\")) ((\"fa2.py\" 452) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 453) result ((\"fa2.py\" 453) attr ((\"fa2.py\" 453) get_item ((\"fa2.py\" 453) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\") \"nat\"))) \"balance\")))) (offchain is_operator True (\"fa2.py\" 601) True \"\" (((\"fa2.py\" 602) set_type ((\"fa2.py\" 601) params) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 603))) ((\"fa2.py\" 607) result ((\"fa2.py\" 259) contains ((\"fa2.py\" 608) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 610) attr ((\"fa2.py\" 601) params) \"operator\")) (owner ((\"fa2.py\" 609) attr ((\"fa2.py\" 601) params) \"owner\")) (token_id ((\"fa2.py\" 611) attr ((\"fa2.py\" 601) params) \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))))) (offchain total_supply True (\"fa2.py\" 593) True \"\" (((\"fa2.py\" 595) result ((\"fa2.py\" 595) get_item ((\"fa2.py\" 595) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 593) params))))))\nentry_points_layout ()\ninitial_metadata ((metadata_base (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"version\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-no_layout\")))) (elem ((\"fa2.py\" 674) literal (string \"description\")) (meta_expr ((\"fa2.py\" 674) literal (string \"This is a didactic reference implementation of FA2, a.k.a. TZIP-012, using SmartPy.\n\nThis particular contract uses the configuration named: FA2-no_layout.\")))) (elem ((\"fa2.py\" 674) literal (string \"interfaces\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-012\"))) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-016\"))))) (elem ((\"fa2.py\" 674) literal (string \"authors\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"Seb Mondet <https://seb.mondet.org>\"))))) (elem ((\"fa2.py\" 674) literal (string \"homepage\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy\")))) (elem ((\"fa2.py\" 674) literal (string \"views\")) (meta_list (\"fa2.py\" 674) (meta_view \"get_balance\" (\"fa2.py\" 444)) (meta_view \"does_token_exist\" (\"fa2.py\" 580)) (meta_view \"count_tokens\" (\"fa2.py\" 574)) (meta_view \"all_tokens\" (\"fa2.py\" 586)) (meta_view \"is_operator\" (\"fa2.py\" 601)) (meta_view \"total_supply\" (\"fa2.py\" 593)))) (elem ((\"fa2.py\" 674) literal (string \"source\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"tools\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"SmartPy\"))))) (elem ((\"fa2.py\" 674) literal (string \"location\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy.git\")))))) (elem ((\"fa2.py\" 674) literal (string \"permissions\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"operator\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-or-operator-transfer\")))) (elem ((\"fa2.py\" 674) literal (string \"receiver\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))) (elem ((\"fa2.py\" 674) literal (string \"sender\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))))) (elem ((\"fa2.py\" 674) literal (string \"fa2-smartpy\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"configuration\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"add_mutez_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"allow_self_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"assume_consecutive_token_ids\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"force_layouts\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"lazy_entry_points\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"name\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-no_layout\")))) (elem ((\"fa2.py\" 674) literal (string \"non_fungible\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"readable\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"single_asset\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"store_total_supply\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"support_operator\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"use_token_metadata_offchain_view\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))))))))))\nbalance ())",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 725)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Initial Minting",
    "line_no": "(\"fa2.py\" 729)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "The administrator mints 100 token-0's to Alice.",
    "line_no": "(\"fa2.py\" 730)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 735)",
    "message": "mint",
    "params": "((\"fa2.py\" 735) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 735) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 735) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 735) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 735) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 735) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 740)",
    "message": "mint",
    "params": "((\"fa2.py\" 740) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 740) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 740) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 740) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 740) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 740) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Transfers Alice -> Bob",
    "line_no": "(\"fa2.py\" 744)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 745)",
    "message": "transfer",
    "params": "((\"fa2.py\" 745) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 749) record (amount ((\"fa2.py\" 749) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 749) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 755) eq ((\"fa2.py\" 755) attr ((\"fa2.py\" 755) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 755) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 754)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 757) eq ((\"fa2.py\" 757) attr ((\"fa2.py\" 757) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 757) literal (intOrNat 10)))",
    "line_no": "(\"fa2.py\" 756)"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 758)",
    "message": "transfer",
    "params": "((\"fa2.py\" 758) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 762) record (amount ((\"fa2.py\" 762) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 762) literal (intOrNat 0)))) ((\"fa2.py\" 765) record (amount ((\"fa2.py\" 765) literal (intOrNat 11))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 765) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 771) eq ((\"fa2.py\" 771) attr ((\"fa2.py\" 771) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 771) literal (intOrNat 69)))",
    "line_no": "(\"fa2.py\" 770)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 774) eq ((\"fa2.py\" 774) attr ((\"fa2.py\" 774) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 774) literal (intOrNat 31)))",
    "line_no": "(\"fa2.py\" 773)"
   },
   {
    "action": "html",
    "inner": "More Token Types",
    "line_no": "(\"fa2.py\" 778)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 783)",
    "message": "mint",
    "params": "((\"fa2.py\" 783) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 783) literal (intOrNat 100))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 783) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 783) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x546865205365636f6e6420546f6b656e\"))) (((\"fa2.py\" 783) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b31\"))))) (token_id ((\"fa2.py\" 783) literal (intOrNat 1))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 791)",
    "message": "mint",
    "params": "((\"fa2.py\" 791) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 791) literal (intOrNat 200))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 791) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 791) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e204e756d626572205468726565\"))) (((\"fa2.py\" 791) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b32\"))))) (token_id ((\"fa2.py\" 791) literal (intOrNat 2))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Multi-token Transfer Bob -> Alice",
    "line_no": "(\"fa2.py\" 795)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 796)",
    "message": "transfer",
    "params": "((\"fa2.py\" 796) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 800) record (amount ((\"fa2.py\" 800) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 800) literal (intOrNat 0)))) ((\"fa2.py\" 803) record (amount ((\"fa2.py\" 803) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 803) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 809) record (amount ((\"fa2.py\" 809) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 809) literal (intOrNat 2))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Other Basic Permission Tests",
    "line_no": "(\"fa2.py\" 813)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "Bob cannot transfer Alice's tokens.",
    "line_no": "(\"fa2.py\" 814)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 815)",
    "message": "transfer",
    "params": "((\"fa2.py\" 815) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 819) record (amount ((\"fa2.py\" 819) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 819) literal (intOrNat 0)))) ((\"fa2.py\" 822) record (amount ((\"fa2.py\" 822) literal (intOrNat 1))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 822) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert",
    "valid": "((\"fa2.py\" 815) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Admin can transfer anything.",
    "line_no": "(\"fa2.py\" 826)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 827)",
    "message": "transfer",
    "params": "((\"fa2.py\" 827) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 831) record (amount ((\"fa2.py\" 831) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 831) literal (intOrNat 0)))) ((\"fa2.py\" 834) record (amount ((\"fa2.py\" 834) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 834) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 839) record (amount ((\"fa2.py\" 839) literal (intOrNat 11))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 839) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Even Admin cannot transfer too much.",
    "line_no": "(\"fa2.py\" 843)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 844)",
    "message": "transfer",
    "params": "((\"fa2.py\" 844) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 848) record (amount ((\"fa2.py\" 848) literal (intOrNat 1000))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 848) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator",
    "valid": "((\"fa2.py\" 844) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Consumer Contract for Callback Calls.",
    "line_no": "(\"fa2.py\" 852)",
    "tag": "h3"
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 854) static_id 1) \nstorage ((\"fa2.py\" 689) record (last_sum ((\"fa2.py\" 689) literal (intOrNat 0))) (operator_support ((\"fa2.py\" 689) literal (bool False))))\nstorage_type (())\nentry_points ((receive_balances True None None None True None (\"fa2.py\" 698) (((\"fa2.py\" 699) set_type ((\"fa2.py\" 698) params) (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))) ((\"fa2.py\" 700) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 700) literal (intOrNat 0))) ((\"fa2.py\" 701) for_group \"resp\" ((\"fa2.py\" 698) params) (((\"fa2.py\" 702) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) add ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) attr ((\"fa2.py\" 701) iter \"resp\") \"balance\"))))))) (reinit True None None None False None (\"fa2.py\" 693) (((\"fa2.py\" 694) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 694) literal (intOrNat 0))))))\nflags ()\nprivates ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "((\"fa2.py\" 854) static_id 1)",
    "line_no": "(\"fa2.py\" 854)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Consumer virtual address: ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")",
    "line_no": "(\"fa2.py\" 855)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Balance-of.",
    "line_no": "(\"fa2.py\" 857)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 865)",
    "message": "balance_of",
    "params": "((\"fa2.py\" 859) record (callback ((\"fa2.py\" 860) open_variant ((\"fa2.py\" 860) contract \"receive_balances\" (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))) ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")) \"Some\" \"None\")) (requests ((\"fa2.py\" 859) list ((\"fa2.py\" 866) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 866) literal (intOrNat 0)))) ((\"fa2.py\" 867) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 867) literal (intOrNat 1)))) ((\"fa2.py\" 868) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 868) literal (intOrNat 2)))))))"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 870) eq ((\"fa2.py\" 870) attr ((\"fa2.py\" 854) contract_data ((\"fa2.py\" 854) static_id 1)) \"last_sum\") ((\"fa2.py\" 870) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 870)"
   },
   {
    "action": "html",
    "inner": "Operators",
    "line_no": "(\"fa2.py\" 871)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "This version was compiled with operator support.",
    "line_no": "(\"fa2.py\" 877)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Calling 0 updates should work:",
    "line_no": "(\"fa2.py\" 878)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 879)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 879) list )"
   },
   {
    "action": "html",
    "inner": "Operator Accounts",
    "line_no": "(\"fa2.py\" 880)",
    "tag": "h3"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 884) list ((\"fa2.py\" 881) account_of_seed \"Operator0\") ((\"fa2.py\" 882) account_of_seed \"Operator1\") ((\"fa2.py\" 883) account_of_seed \"Operator2\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 884)",
    "stripStrings": false
   },
   {
    "action": "html",
    "inner": "Admin can change Alice's operator.",
    "line_no": "(\"fa2.py\" 885)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 886)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 886) list ((\"fa2.py\" 887) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) None (\"fa2.py\" 184)))) ((\"fa2.py\" 891) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 2)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) None (\"fa2.py\" 184)))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Operator1 can now transfer Alice's tokens 0 and 2",
    "line_no": "(\"fa2.py\" 896)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 897)",
    "message": "transfer",
    "params": "((\"fa2.py\" 897) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 901) record (amount ((\"fa2.py\" 901) literal (intOrNat 2))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 901) literal (intOrNat 0)))) ((\"fa2.py\" 904) record (amount ((\"fa2.py\" 904) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 904) literal (intOrNat 2))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Bob's tokens",
    "line_no": "(\"fa2.py\" 908)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 909)",
    "message": "transfer",
    "params": "((\"fa2.py\" 909) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 913) record (amount ((\"fa2.py\" 913) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 913) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1",
    "valid": "((\"fa2.py\" 909) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Operator2 cannot transfer Alice's tokens",
    "line_no": "(\"fa2.py\" 917)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 918)",
    "message": "transfer",
    "params": "((\"fa2.py\" 918) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 922) record (amount ((\"fa2.py\" 922) literal (intOrNat 2))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 922) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator2",
    "valid": "((\"fa2.py\" 918) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can remove their operator",
    "line_no": "(\"fa2.py\" 926)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 927)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 927) list ((\"fa2.py\" 928) variant \"remove_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) None (\"fa2.py\" 184)))) ((\"fa2.py\" 932) variant \"remove_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) None (\"fa2.py\" 184)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Alice's tokens any more",
    "line_no": "(\"fa2.py\" 937)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 938)",
    "message": "transfer",
    "params": "((\"fa2.py\" 938) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 942) record (amount ((\"fa2.py\" 942) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 942) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1",
    "valid": "((\"fa2.py\" 938) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Bob can add Operator0.",
    "line_no": "(\"fa2.py\" 946)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 947)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 947) list ((\"fa2.py\" 948) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) None (\"fa2.py\" 184)))) ((\"fa2.py\" 952) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 1)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) None (\"fa2.py\" 184)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 can transfer Bob's tokens '0' and '1'",
    "line_no": "(\"fa2.py\" 957)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 958)",
    "message": "transfer",
    "params": "((\"fa2.py\" 958) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 962) record (amount ((\"fa2.py\" 962) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 962) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 967) record (amount ((\"fa2.py\" 967) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 967) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob cannot add Operator0 for Alice's tokens.",
    "line_no": "(\"fa2.py\" 971)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 972)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 972) list ((\"fa2.py\" 973) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) None (\"fa2.py\" 184)))))",
    "sender": "seed:Robert",
    "valid": "((\"fa2.py\" 972) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can also add Operator0 for their tokens 0.",
    "line_no": "(\"fa2.py\" 979)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 980)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 980) list ((\"fa2.py\" 981) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) None (\"fa2.py\" 184)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator0 can now transfer Bob's and Alice's 0-tokens.",
    "line_no": "(\"fa2.py\" 987)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 988)",
    "message": "transfer",
    "params": "((\"fa2.py\" 988) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 992) record (amount ((\"fa2.py\" 992) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 992) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 997) record (amount ((\"fa2.py\" 997) literal (intOrNat 1))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 997) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob adds Operator2 as second operator for 0-tokens.",
    "line_no": "(\"fa2.py\" 1001)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1002)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 1002) list ((\"fa2.py\" 1003) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 883) resolve ((\"fa2.py\" 883) attr ((\"fa2.py\" 883) account_of_seed \"Operator2\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) None (\"fa2.py\" 184)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 and Operator2 can transfer Bob's 0-tokens.",
    "line_no": "(\"fa2.py\" 1009)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1010)",
    "message": "transfer",
    "params": "((\"fa2.py\" 1010) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 1014) record (amount ((\"fa2.py\" 1014) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 1014) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1018)",
    "message": "transfer",
    "params": "((\"fa2.py\" 1018) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 1022) record (amount ((\"fa2.py\" 1022) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 1022) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) None (\"fa2.py\" 162))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator2"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 1026)",
    "tag": "p"
   }
  ],
  "kind": "test"
 },
 {
  "shortname": "FA2-debug-no_ops",
  "longname": "FA2-debug-no_ops",
  "scenario": [
   {
    "action": "html",
    "inner": "FA2 Contract Name: FA2-debug-no_ops",
    "line_no": "(\"fa2.py\" 713)",
    "tag": "h1"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 714)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Accounts",
    "line_no": "(\"fa2.py\" 720)",
    "tag": "h2"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 721) list ((\"fa2.py\" 716) account_of_seed \"Administrator\") ((\"fa2.py\" 717) account_of_seed \"Alice\") ((\"fa2.py\" 718) account_of_seed \"Robert\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 721)",
    "stripStrings": false
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 725) static_id 0) \nstorage ((\"fa2.py\" 370) record (administrator ((\"fa2.py\" 716) resolve ((\"fa2.py\" 716) attr ((\"fa2.py\" 716) account_of_seed \"Administrator\") \"address\"))) (all_tokens ((\"fa2.py\" 299) literal (nat 0))) (ledger ((\"fa2.py\" 361) type_annotation ((\"fa2.py\" 361) map ) (map (unknown 20) (record ((balance \"nat\")) None (\"fa2.py\" 221))))) (metadata ((\"fa2.py\" 723) big_map (((\"fa2.py\" 725) literal (string \"\")) ((\"fa2.py\" 723) literal (bytes \"0x68747470733a2f2f6578616d706c652e636f6d\"))))) (operators ((\"fa2.py\" 244) type_annotation ((\"fa2.py\" 244) map ) (map (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)) \"unit\"))) (paused ((\"fa2.py\" 360) literal (bool False))) (token_metadata ((\"fa2.py\" 362) type_annotation ((\"fa2.py\" 362) map ) (map \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) None (\"fa2.py\" 282))))) (total_supply ((\"fa2.py\" 371) type_annotation ((\"fa2.py\" 371) map ) (map \"nat\" \"nat\"))))\nstorage_type (())\nentry_points ((balance_of True None None None True None (\"fa2.py\" 417) (((\"fa2.py\" 419) verify ((\"fa2.py\" 419) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 419) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 420) set_type ((\"fa2.py\" 417) params) (record ((callback (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))))) (requests (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263))))) (Some ((\"requests\") (\"callback\"))) (\"fa2.py\" 272))) ((\"fa2.py\" 439) define_local \"responses\" ((\"fa2.py\" 439) map_function ((\"fa2.py\" 439) attr ((\"fa2.py\" 417) params) \"requests\") ((\"fa2.py\" 439) lambda 0 None False None \"\" (((\"fa2.py\" 423) verify ((\"fa2.py\" 423) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 21)) \"token_id\")) ((\"fa2.py\" 423) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 424) if_block ((\"fa2.py\" 424) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 21)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 21)) \"token_id\") \"nat\"))) (((\"fa2.py\" 426) result ((\"fa2.py\" 427) record (balance ((\"fa2.py\" 425) attr ((\"fa2.py\" 425) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 21)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 21)) \"token_id\") \"nat\"))) \"balance\")) (request ((\"fa2.py\" 428) record (owner ((\"fa2.py\" 429) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 21)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 430) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 21)) \"token_id\") \"nat\")))))))) (else_block (((\"fa2.py\" 433) result ((\"fa2.py\" 434) record (balance ((\"fa2.py\" 434) literal (intOrNat 0))) (request ((\"fa2.py\" 435) record (owner ((\"fa2.py\" 436) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 21)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 437) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 21)) \"token_id\") \"nat\"))))))))))) True) ((\"fa2.py\" 441) set ((\"fa2.py\" 441) operations) ((\"fa2.py\" 441) cons ((\"fa2.py\" 441) transfer ((\"fa2.py\" 441) get_local \"responses\") ((\"fa2.py\" 441) literal (mutez 0)) ((\"fa2.py\" 440) type_annotation ((\"fa2.py\" 440) attr ((\"fa2.py\" 417) params) \"callback\") (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))))) ((\"fa2.py\" 441) operations))))) (mint True None None None True None (\"fa2.py\" 522) (((\"fa2.py\" 523) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 523) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 534) if_block ((\"fa2.py\" 534) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) (((\"fa2.py\" 535) set ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\"))))) (else_block (((\"fa2.py\" 537) set ((\"fa2.py\" 537) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\")))))) ((\"fa2.py\" 538) if_block ((\"fa2.py\" 538) not ((\"fa2.py\" 310) lt ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\"))) (((\"fa2.py\" 304) verify ((\"fa2.py\" 304) eq ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 304) literal (string \"Token-IDs should be consecutive\"))) ((\"fa2.py\" 305) set ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 305) add ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 305) literal (intOrNat 1)))) ((\"fa2.py\" 540) set ((\"fa2.py\" 540) get_item ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 540) record (token_id ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) (token_info ((\"fa2.py\" 542) attr ((\"fa2.py\" 522) params) \"metadata\")))))) ((\"fa2.py\" 545) set ((\"fa2.py\" 545) get_item ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 545) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\") ((\"fa2.py\" 545) get_item_default ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 545) literal (intOrNat 0))))))) (set_administrator True None None None True None (\"fa2.py\" 501) (((\"fa2.py\" 502) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 502) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 503) set ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\") ((\"fa2.py\" 501) params)))) (set_metadata True None None None True None (\"fa2.py\" 516) (((\"fa2.py\" 517) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 517) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 518) set ((\"fa2.py\" 518) get_item ((\"fa2.py\" 518) attr ((\"fa2.py\" 725) data) \"metadata\") ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"k\")) ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"v\")))) (set_pause True None None None True None (\"fa2.py\" 510) (((\"fa2.py\" 511) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 511) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 512) set ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\") ((\"fa2.py\" 510) params)))) (transfer True None None None True None (\"fa2.py\" 375) (((\"fa2.py\" 376) verify ((\"fa2.py\" 376) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 376) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 377) set_type ((\"fa2.py\" 375) params) (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169)))) ((\"fa2.py\" 378) for_group \"transfer\" ((\"fa2.py\" 375) params) (((\"fa2.py\" 380) for_group \"tx\" ((\"fa2.py\" 380) attr ((\"fa2.py\" 378) iter \"transfer\") \"txs\") (((\"fa2.py\" 395) verify ((\"fa2.py\" 384) or ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 385) eq ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") ((\"\" -1) sender))) ((\"fa2.py\" 395) literal (string \"FA2_NOT_OWNER\"))) ((\"fa2.py\" 396) verify ((\"fa2.py\" 397) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 397) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\")) ((\"fa2.py\" 396) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 401) if_block ((\"fa2.py\" 401) gt ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\") ((\"fa2.py\" 401) literal (intOrNat 0))) (((\"fa2.py\" 403) verify ((\"fa2.py\" 404) ge ((\"fa2.py\" 404) attr ((\"fa2.py\" 404) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 397) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")) ((\"fa2.py\" 403) literal (string \"FA2_INSUFFICIENT_BALANCE\"))) ((\"fa2.py\" 407) set ((\"fa2.py\" 407) attr ((\"fa2.py\" 407) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 397) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 407) open_variant ((\"fa2.py\" 407) is_nat ((\"fa2.py\" 408) sub ((\"fa2.py\" 408) attr ((\"fa2.py\" 408) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 397) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))) \"Some\" \"None\")) ((\"fa2.py\" 409) if_block ((\"fa2.py\" 409) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 397) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) (((\"fa2.py\" 410) set ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 397) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 410) add ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 397) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))))) (else_block (((\"fa2.py\" 412) set ((\"fa2.py\" 412) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 397) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")))))))) (else_block ()))))))) (update_operators True None None None True None (\"fa2.py\" 457) (((\"fa2.py\" 458) set_type ((\"fa2.py\" 457) params) (list (variant ((add_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189))) (remove_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) None (\"fa2.py\" 459)))) ((\"fa2.py\" 486) failwith ((\"fa2.py\" 486) literal (string \"FA2_OPERATORS_UNSUPPORTED\"))))))\nflags ((initial-cast) (exceptions default-line))\nprivates ()\nviews ((offchain all_tokens False (\"fa2.py\" 586) True \"\\n            This view is specified (but optional) in the standard.\\n\\n            This contract is built with assume_consecutive_token_ids =\\n            True, so we return a list constructed from the number of tokens.\\n            \" (((\"fa2.py\" 588) result ((\"fa2.py\" 588) range ((\"fa2.py\" 588) literal (intOrNat 0)) ((\"fa2.py\" 588) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 588) literal (intOrNat 1)))))) (offchain count_tokens False (\"fa2.py\" 574) True \"Get how many tokens are in this FA2 contract.\\n        \" (((\"fa2.py\" 577) result ((\"fa2.py\" 577) attr ((\"fa2.py\" 725) data) \"all_tokens\")))) (offchain does_token_exist True (\"fa2.py\" 580) True \"Ask whether a token ID is exists.\" (((\"fa2.py\" 582) set_type ((\"fa2.py\" 580) params) \"nat\") ((\"fa2.py\" 583) result ((\"fa2.py\" 583) contains ((\"fa2.py\" 583) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 580) params))))) (offchain get_balance True (\"fa2.py\" 444) True \"This is the `get_balance` view defined in TZIP-12.\" (((\"fa2.py\" 446) set_type ((\"fa2.py\" 444) params) (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 447))) ((\"fa2.py\" 452) verify ((\"fa2.py\" 452) contains ((\"fa2.py\" 452) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\")) ((\"fa2.py\" 452) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 453) result ((\"fa2.py\" 453) attr ((\"fa2.py\" 453) get_item ((\"fa2.py\" 453) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\") \"nat\"))) \"balance\")))) (offchain is_operator True (\"fa2.py\" 601) True \"\" (((\"fa2.py\" 602) set_type ((\"fa2.py\" 601) params) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 603))) ((\"fa2.py\" 607) result ((\"fa2.py\" 259) contains ((\"fa2.py\" 608) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 610) attr ((\"fa2.py\" 601) params) \"operator\")) (owner ((\"fa2.py\" 609) attr ((\"fa2.py\" 601) params) \"owner\")) (token_id ((\"fa2.py\" 611) attr ((\"fa2.py\" 601) params) \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))))) (offchain total_supply True (\"fa2.py\" 593) True \"\" (((\"fa2.py\" 595) result ((\"fa2.py\" 595) get_item ((\"fa2.py\" 595) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 593) params))))))\nentry_points_layout ()\ninitial_metadata ((metadata_base (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"version\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-debug-no_ops\")))) (elem ((\"fa2.py\" 674) literal (string \"description\")) (meta_expr ((\"fa2.py\" 674) literal (string \"This is a didactic reference implementation of FA2, a.k.a. TZIP-012, using SmartPy.\n\nThis particular contract uses the configuration named: FA2-debug-no_ops.\")))) (elem ((\"fa2.py\" 674) literal (string \"interfaces\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-012\"))) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-016\"))))) (elem ((\"fa2.py\" 674) literal (string \"authors\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"Seb Mondet <https://seb.mondet.org>\"))))) (elem ((\"fa2.py\" 674) literal (string \"homepage\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy\")))) (elem ((\"fa2.py\" 674) literal (string \"views\")) (meta_list (\"fa2.py\" 674) (meta_view \"get_balance\" (\"fa2.py\" 444)) (meta_view \"does_token_exist\" (\"fa2.py\" 580)) (meta_view \"count_tokens\" (\"fa2.py\" 574)) (meta_view \"all_tokens\" (\"fa2.py\" 586)) (meta_view \"is_operator\" (\"fa2.py\" 601)) (meta_view \"total_supply\" (\"fa2.py\" 593)))) (elem ((\"fa2.py\" 674) literal (string \"source\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"tools\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"SmartPy\"))))) (elem ((\"fa2.py\" 674) literal (string \"location\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy.git\")))))) (elem ((\"fa2.py\" 674) literal (string \"permissions\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"operator\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-transfer\")))) (elem ((\"fa2.py\" 674) literal (string \"receiver\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))) (elem ((\"fa2.py\" 674) literal (string \"sender\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))))) (elem ((\"fa2.py\" 674) literal (string \"fa2-smartpy\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"configuration\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"add_mutez_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"allow_self_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"assume_consecutive_token_ids\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"force_layouts\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"lazy_entry_points\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"name\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-debug-no_ops\")))) (elem ((\"fa2.py\" 674) literal (string \"non_fungible\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"readable\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"single_asset\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"store_total_supply\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"support_operator\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"use_token_metadata_offchain_view\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))))))))))\nbalance ())",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 725)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Initial Minting",
    "line_no": "(\"fa2.py\" 729)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "The administrator mints 100 token-0's to Alice.",
    "line_no": "(\"fa2.py\" 730)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 735)",
    "message": "mint",
    "params": "((\"fa2.py\" 735) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 735) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 735) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 735) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 735) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 735) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 740)",
    "message": "mint",
    "params": "((\"fa2.py\" 740) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 740) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 740) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 740) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 740) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 740) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Transfers Alice -> Bob",
    "line_no": "(\"fa2.py\" 744)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 745)",
    "message": "transfer",
    "params": "((\"fa2.py\" 745) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 749) record (amount ((\"fa2.py\" 749) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 749) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 755) eq ((\"fa2.py\" 755) attr ((\"fa2.py\" 755) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 755) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 754)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 757) eq ((\"fa2.py\" 757) attr ((\"fa2.py\" 757) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 757) literal (intOrNat 10)))",
    "line_no": "(\"fa2.py\" 756)"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 758)",
    "message": "transfer",
    "params": "((\"fa2.py\" 758) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 762) record (amount ((\"fa2.py\" 762) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 762) literal (intOrNat 0)))) ((\"fa2.py\" 765) record (amount ((\"fa2.py\" 765) literal (intOrNat 11))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 765) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 771) eq ((\"fa2.py\" 771) attr ((\"fa2.py\" 771) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 771) literal (intOrNat 69)))",
    "line_no": "(\"fa2.py\" 770)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 774) eq ((\"fa2.py\" 774) attr ((\"fa2.py\" 774) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 774) literal (intOrNat 31)))",
    "line_no": "(\"fa2.py\" 773)"
   },
   {
    "action": "html",
    "inner": "More Token Types",
    "line_no": "(\"fa2.py\" 778)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 783)",
    "message": "mint",
    "params": "((\"fa2.py\" 783) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 783) literal (intOrNat 100))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 783) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 783) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x546865205365636f6e6420546f6b656e\"))) (((\"fa2.py\" 783) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b31\"))))) (token_id ((\"fa2.py\" 783) literal (intOrNat 1))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 791)",
    "message": "mint",
    "params": "((\"fa2.py\" 791) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 791) literal (intOrNat 200))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 791) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 791) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e204e756d626572205468726565\"))) (((\"fa2.py\" 791) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b32\"))))) (token_id ((\"fa2.py\" 791) literal (intOrNat 2))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Multi-token Transfer Bob -> Alice",
    "line_no": "(\"fa2.py\" 795)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 796)",
    "message": "transfer",
    "params": "((\"fa2.py\" 796) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 800) record (amount ((\"fa2.py\" 800) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 800) literal (intOrNat 0)))) ((\"fa2.py\" 803) record (amount ((\"fa2.py\" 803) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 803) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 809) record (amount ((\"fa2.py\" 809) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 809) literal (intOrNat 2))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Other Basic Permission Tests",
    "line_no": "(\"fa2.py\" 813)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "Bob cannot transfer Alice's tokens.",
    "line_no": "(\"fa2.py\" 814)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 815)",
    "message": "transfer",
    "params": "((\"fa2.py\" 815) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 819) record (amount ((\"fa2.py\" 819) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 819) literal (intOrNat 0)))) ((\"fa2.py\" 822) record (amount ((\"fa2.py\" 822) literal (intOrNat 1))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 822) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert",
    "valid": "((\"fa2.py\" 815) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Admin can transfer anything.",
    "line_no": "(\"fa2.py\" 826)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 827)",
    "message": "transfer",
    "params": "((\"fa2.py\" 827) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 831) record (amount ((\"fa2.py\" 831) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 831) literal (intOrNat 0)))) ((\"fa2.py\" 834) record (amount ((\"fa2.py\" 834) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 834) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 839) record (amount ((\"fa2.py\" 839) literal (intOrNat 11))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 839) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Even Admin cannot transfer too much.",
    "line_no": "(\"fa2.py\" 843)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 844)",
    "message": "transfer",
    "params": "((\"fa2.py\" 844) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 848) record (amount ((\"fa2.py\" 848) literal (intOrNat 1000))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 848) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator",
    "valid": "((\"fa2.py\" 844) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Consumer Contract for Callback Calls.",
    "line_no": "(\"fa2.py\" 852)",
    "tag": "h3"
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 854) static_id 1) \nstorage ((\"fa2.py\" 689) record (last_sum ((\"fa2.py\" 689) literal (intOrNat 0))) (operator_support ((\"fa2.py\" 689) literal (bool True))))\nstorage_type (())\nentry_points ((receive_balances True None None None True None (\"fa2.py\" 698) (((\"fa2.py\" 699) set_type ((\"fa2.py\" 698) params) (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))) ((\"fa2.py\" 700) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 700) literal (intOrNat 0))) ((\"fa2.py\" 701) for_group \"resp\" ((\"fa2.py\" 698) params) (((\"fa2.py\" 702) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) add ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) attr ((\"fa2.py\" 701) iter \"resp\") \"balance\"))))))) (reinit True None None None False None (\"fa2.py\" 693) (((\"fa2.py\" 694) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 694) literal (intOrNat 0))))))\nflags ()\nprivates ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "((\"fa2.py\" 854) static_id 1)",
    "line_no": "(\"fa2.py\" 854)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Consumer virtual address: ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")",
    "line_no": "(\"fa2.py\" 855)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Balance-of.",
    "line_no": "(\"fa2.py\" 857)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 865)",
    "message": "balance_of",
    "params": "((\"fa2.py\" 859) record (callback ((\"fa2.py\" 860) open_variant ((\"fa2.py\" 860) contract \"receive_balances\" (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))) ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")) \"Some\" \"None\")) (requests ((\"fa2.py\" 859) list ((\"fa2.py\" 866) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 866) literal (intOrNat 0)))) ((\"fa2.py\" 867) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 867) literal (intOrNat 1)))) ((\"fa2.py\" 868) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 868) literal (intOrNat 2)))))))"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 870) eq ((\"fa2.py\" 870) attr ((\"fa2.py\" 854) contract_data ((\"fa2.py\" 854) static_id 1)) \"last_sum\") ((\"fa2.py\" 870) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 870)"
   },
   {
    "action": "html",
    "inner": "Operators",
    "line_no": "(\"fa2.py\" 871)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "This version was compiled with no operator support",
    "line_no": "(\"fa2.py\" 873)",
    "tag": "h3"
   },
   {
    "action": "html",
    "inner": "Calls should fail even for the administrator:",
    "line_no": "(\"fa2.py\" 874)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 875)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 875) list )",
    "sender": "seed:Administrator",
    "valid": "((\"fa2.py\" 875) literal (bool False))"
   }
  ],
  "kind": "test"
 },
 {
  "shortname": "FA2-no_toknat",
  "longname": "FA2-no_toknat",
  "scenario": [
   {
    "action": "html",
    "inner": "FA2 Contract Name: FA2-no_toknat",
    "line_no": "(\"fa2.py\" 713)",
    "tag": "h1"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 714)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Accounts",
    "line_no": "(\"fa2.py\" 720)",
    "tag": "h2"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 721) list ((\"fa2.py\" 716) account_of_seed \"Administrator\") ((\"fa2.py\" 717) account_of_seed \"Alice\") ((\"fa2.py\" 718) account_of_seed \"Robert\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 721)",
    "stripStrings": false
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 725) static_id 0) \nstorage ((\"fa2.py\" 370) record (administrator ((\"fa2.py\" 716) resolve ((\"fa2.py\" 716) attr ((\"fa2.py\" 716) account_of_seed \"Administrator\") \"address\"))) (all_tokens ((\"fa2.py\" 301) type_annotation ((\"fa2.py\" 301) set ) (set \"nat\"))) (ledger ((\"fa2.py\" 361) type_annotation ((\"fa2.py\" 361) big_map ) (bigmap (unknown 23) (record ((balance \"nat\")) None (\"fa2.py\" 221))))) (metadata ((\"fa2.py\" 723) big_map (((\"fa2.py\" 725) literal (string \"\")) ((\"fa2.py\" 723) literal (bytes \"0x68747470733a2f2f6578616d706c652e636f6d\"))))) (operators ((\"fa2.py\" 244) type_annotation ((\"fa2.py\" 244) big_map ) (bigmap (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)) \"unit\"))) (paused ((\"fa2.py\" 360) literal (bool False))) (token_metadata ((\"fa2.py\" 362) type_annotation ((\"fa2.py\" 362) big_map ) (bigmap \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) None (\"fa2.py\" 282))))) (total_supply ((\"fa2.py\" 371) type_annotation ((\"fa2.py\" 371) big_map ) (bigmap \"nat\" \"nat\"))))\nstorage_type (())\nentry_points ((balance_of True None None None True None (\"fa2.py\" 417) (((\"fa2.py\" 419) verify ((\"fa2.py\" 419) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 419) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 420) set_type ((\"fa2.py\" 417) params) (record ((callback (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))))) (requests (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263))))) (Some ((\"requests\") (\"callback\"))) (\"fa2.py\" 272))) ((\"fa2.py\" 439) define_local \"responses\" ((\"fa2.py\" 439) map_function ((\"fa2.py\" 439) attr ((\"fa2.py\" 417) params) \"requests\") ((\"fa2.py\" 439) lambda 0 None False None \"\" (((\"fa2.py\" 423) verify ((\"fa2.py\" 423) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 24)) \"token_id\")) ((\"fa2.py\" 423) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 424) if_block ((\"fa2.py\" 424) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 24)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 24)) \"token_id\") \"nat\"))) (((\"fa2.py\" 426) result ((\"fa2.py\" 427) record (balance ((\"fa2.py\" 425) attr ((\"fa2.py\" 425) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 24)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 24)) \"token_id\") \"nat\"))) \"balance\")) (request ((\"fa2.py\" 428) record (owner ((\"fa2.py\" 429) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 24)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 430) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 24)) \"token_id\") \"nat\")))))))) (else_block (((\"fa2.py\" 433) result ((\"fa2.py\" 434) record (balance ((\"fa2.py\" 434) literal (intOrNat 0))) (request ((\"fa2.py\" 435) record (owner ((\"fa2.py\" 436) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 24)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 437) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 24)) \"token_id\") \"nat\"))))))))))) True) ((\"fa2.py\" 441) set ((\"fa2.py\" 441) operations) ((\"fa2.py\" 441) cons ((\"fa2.py\" 441) transfer ((\"fa2.py\" 441) get_local \"responses\") ((\"fa2.py\" 441) literal (mutez 0)) ((\"fa2.py\" 440) type_annotation ((\"fa2.py\" 440) attr ((\"fa2.py\" 417) params) \"callback\") (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))))) ((\"fa2.py\" 441) operations))))) (mint True None None None True None (\"fa2.py\" 522) (((\"fa2.py\" 523) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 523) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 534) if_block ((\"fa2.py\" 534) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) (((\"fa2.py\" 535) set ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\"))))) (else_block (((\"fa2.py\" 537) set ((\"fa2.py\" 537) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\")))))) ((\"fa2.py\" 538) if_block ((\"fa2.py\" 538) not ((\"fa2.py\" 312) contains ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\"))) (((\"fa2.py\" 307) update_set ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") True) ((\"fa2.py\" 540) set ((\"fa2.py\" 540) get_item ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 540) record (token_id ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) (token_info ((\"fa2.py\" 542) attr ((\"fa2.py\" 522) params) \"metadata\")))))) ((\"fa2.py\" 545) set ((\"fa2.py\" 545) get_item ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 545) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\") ((\"fa2.py\" 545) get_item_default ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 545) literal (intOrNat 0))))))) (set_administrator True None None None True None (\"fa2.py\" 501) (((\"fa2.py\" 502) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 502) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 503) set ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\") ((\"fa2.py\" 501) params)))) (set_metadata True None None None True None (\"fa2.py\" 516) (((\"fa2.py\" 517) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 517) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 518) set ((\"fa2.py\" 518) get_item ((\"fa2.py\" 518) attr ((\"fa2.py\" 725) data) \"metadata\") ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"k\")) ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"v\")))) (set_pause True None None None True None (\"fa2.py\" 510) (((\"fa2.py\" 511) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 511) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 512) set ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\") ((\"fa2.py\" 510) params)))) (transfer True None None None True None (\"fa2.py\" 375) (((\"fa2.py\" 376) verify ((\"fa2.py\" 376) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 376) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 377) set_type ((\"fa2.py\" 375) params) (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169)))) ((\"fa2.py\" 378) for_group \"transfer\" ((\"fa2.py\" 375) params) (((\"fa2.py\" 380) for_group \"tx\" ((\"fa2.py\" 380) attr ((\"fa2.py\" 378) iter \"transfer\") \"txs\") (((\"fa2.py\" 395) verify ((\"fa2.py\" 389) or ((\"fa2.py\" 384) or ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 385) eq ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") ((\"\" -1) sender))) ((\"fa2.py\" 259) contains ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"\" -1) sender)) (owner ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\")) (token_id ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))) ((\"fa2.py\" 395) literal (string \"FA2_NOT_OPERATOR\"))) ((\"fa2.py\" 396) verify ((\"fa2.py\" 397) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\")) ((\"fa2.py\" 396) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 401) if_block ((\"fa2.py\" 401) gt ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\") ((\"fa2.py\" 401) literal (intOrNat 0))) (((\"fa2.py\" 403) verify ((\"fa2.py\" 404) ge ((\"fa2.py\" 404) attr ((\"fa2.py\" 404) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")) ((\"fa2.py\" 403) literal (string \"FA2_INSUFFICIENT_BALANCE\"))) ((\"fa2.py\" 407) set ((\"fa2.py\" 407) attr ((\"fa2.py\" 407) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 407) open_variant ((\"fa2.py\" 407) is_nat ((\"fa2.py\" 408) sub ((\"fa2.py\" 408) attr ((\"fa2.py\" 408) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))) \"Some\" \"None\")) ((\"fa2.py\" 409) if_block ((\"fa2.py\" 409) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) (((\"fa2.py\" 410) set ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 410) add ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))))) (else_block (((\"fa2.py\" 412) set ((\"fa2.py\" 412) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")))))))) (else_block ()))))))) (update_operators True None None None True None (\"fa2.py\" 457) (((\"fa2.py\" 458) set_type ((\"fa2.py\" 457) params) (list (variant ((add_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189))) (remove_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) None (\"fa2.py\" 459)))) ((\"fa2.py\" 465) for_group \"update\" ((\"fa2.py\" 457) params) (((\"fa2.py\" 466) match_cases ((\"fa2.py\" 465) iter \"update\") \"match_fa2_466\" (((\"fa2.py\" 467) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"add_operator\" \"add_operator\" (((\"fa2.py\" 468) verify ((\"fa2.py\" 469) or ((\"fa2.py\" 469) eq ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 468) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 255) set ((\"fa2.py\" 255) get_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 474) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"operator\")) (owner ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\")) (token_id ((\"fa2.py\" 475) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))) ((\"\" -1) literal (unit))))) ((\"fa2.py\" 476) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"remove_operator\" \"remove_operator\" (((\"fa2.py\" 477) verify ((\"fa2.py\" 478) or ((\"fa2.py\" 478) eq ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 477) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 257) del_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 483) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"operator\")) (owner ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\")) (token_id ((\"fa2.py\" 484) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))))))))))))\nflags ((initial-cast) (exceptions default-line))\nprivates ()\nviews ((offchain all_tokens False (\"fa2.py\" 586) True \"\\n            This view is specified (but optional) in the standard.\\n\\n            This contract is built with assume_consecutive_token_ids =\\n            False, so we convert the set of tokens from the storage to a list\\n            to fit the expected type of TZIP-16.\\n            \" (((\"fa2.py\" 590) result ((\"fa2.py\" 590) elements ((\"fa2.py\" 590) attr ((\"fa2.py\" 725) data) \"all_tokens\"))))) (offchain count_tokens False (\"fa2.py\" 574) True \"Get how many tokens are in this FA2 contract.\\n        \" (((\"fa2.py\" 577) result ((\"fa2.py\" 317) size ((\"fa2.py\" 577) attr ((\"fa2.py\" 725) data) \"all_tokens\"))))) (offchain does_token_exist True (\"fa2.py\" 580) True \"Ask whether a token ID is exists.\" (((\"fa2.py\" 582) set_type ((\"fa2.py\" 580) params) \"nat\") ((\"fa2.py\" 583) result ((\"fa2.py\" 583) contains ((\"fa2.py\" 583) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 580) params))))) (offchain get_balance True (\"fa2.py\" 444) True \"This is the `get_balance` view defined in TZIP-12.\" (((\"fa2.py\" 446) set_type ((\"fa2.py\" 444) params) (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 447))) ((\"fa2.py\" 452) verify ((\"fa2.py\" 452) contains ((\"fa2.py\" 452) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\")) ((\"fa2.py\" 452) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 453) result ((\"fa2.py\" 453) attr ((\"fa2.py\" 453) get_item ((\"fa2.py\" 453) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\") \"nat\"))) \"balance\")))) (offchain is_operator True (\"fa2.py\" 601) True \"\" (((\"fa2.py\" 602) set_type ((\"fa2.py\" 601) params) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 603))) ((\"fa2.py\" 607) result ((\"fa2.py\" 259) contains ((\"fa2.py\" 608) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 610) attr ((\"fa2.py\" 601) params) \"operator\")) (owner ((\"fa2.py\" 609) attr ((\"fa2.py\" 601) params) \"owner\")) (token_id ((\"fa2.py\" 611) attr ((\"fa2.py\" 601) params) \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))))) (offchain total_supply True (\"fa2.py\" 593) True \"\" (((\"fa2.py\" 595) result ((\"fa2.py\" 595) get_item ((\"fa2.py\" 595) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 593) params))))))\nentry_points_layout ()\ninitial_metadata ((metadata_base (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"version\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-no_toknat\")))) (elem ((\"fa2.py\" 674) literal (string \"description\")) (meta_expr ((\"fa2.py\" 674) literal (string \"This is a didactic reference implementation of FA2, a.k.a. TZIP-012, using SmartPy.\n\nThis particular contract uses the configuration named: FA2-no_toknat.\")))) (elem ((\"fa2.py\" 674) literal (string \"interfaces\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-012\"))) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-016\"))))) (elem ((\"fa2.py\" 674) literal (string \"authors\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"Seb Mondet <https://seb.mondet.org>\"))))) (elem ((\"fa2.py\" 674) literal (string \"homepage\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy\")))) (elem ((\"fa2.py\" 674) literal (string \"views\")) (meta_list (\"fa2.py\" 674) (meta_view \"get_balance\" (\"fa2.py\" 444)) (meta_view \"does_token_exist\" (\"fa2.py\" 580)) (meta_view \"count_tokens\" (\"fa2.py\" 574)) (meta_view \"all_tokens\" (\"fa2.py\" 586)) (meta_view \"is_operator\" (\"fa2.py\" 601)) (meta_view \"total_supply\" (\"fa2.py\" 593)))) (elem ((\"fa2.py\" 674) literal (string \"source\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"tools\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"SmartPy\"))))) (elem ((\"fa2.py\" 674) literal (string \"location\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy.git\")))))) (elem ((\"fa2.py\" 674) literal (string \"permissions\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"operator\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-or-operator-transfer\")))) (elem ((\"fa2.py\" 674) literal (string \"receiver\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))) (elem ((\"fa2.py\" 674) literal (string \"sender\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))))) (elem ((\"fa2.py\" 674) literal (string \"fa2-smartpy\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"configuration\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"add_mutez_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"allow_self_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"assume_consecutive_token_ids\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"force_layouts\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"lazy_entry_points\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"name\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-no_toknat\")))) (elem ((\"fa2.py\" 674) literal (string \"non_fungible\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"readable\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"single_asset\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"store_total_supply\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"support_operator\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"use_token_metadata_offchain_view\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))))))))))\nbalance ())",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 725)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Initial Minting",
    "line_no": "(\"fa2.py\" 729)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "The administrator mints 100 token-0's to Alice.",
    "line_no": "(\"fa2.py\" 730)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 735)",
    "message": "mint",
    "params": "((\"fa2.py\" 735) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 735) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 735) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 735) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 735) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 735) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 740)",
    "message": "mint",
    "params": "((\"fa2.py\" 740) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 740) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 740) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 740) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 740) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 740) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Transfers Alice -> Bob",
    "line_no": "(\"fa2.py\" 744)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 745)",
    "message": "transfer",
    "params": "((\"fa2.py\" 745) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 749) record (amount ((\"fa2.py\" 749) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 749) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 755) eq ((\"fa2.py\" 755) attr ((\"fa2.py\" 755) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 755) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 754)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 757) eq ((\"fa2.py\" 757) attr ((\"fa2.py\" 757) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 757) literal (intOrNat 10)))",
    "line_no": "(\"fa2.py\" 756)"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 758)",
    "message": "transfer",
    "params": "((\"fa2.py\" 758) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 762) record (amount ((\"fa2.py\" 762) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 762) literal (intOrNat 0)))) ((\"fa2.py\" 765) record (amount ((\"fa2.py\" 765) literal (intOrNat 11))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 765) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 771) eq ((\"fa2.py\" 771) attr ((\"fa2.py\" 771) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 771) literal (intOrNat 69)))",
    "line_no": "(\"fa2.py\" 770)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 774) eq ((\"fa2.py\" 774) attr ((\"fa2.py\" 774) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 774) literal (intOrNat 31)))",
    "line_no": "(\"fa2.py\" 773)"
   },
   {
    "action": "html",
    "inner": "More Token Types",
    "line_no": "(\"fa2.py\" 778)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 783)",
    "message": "mint",
    "params": "((\"fa2.py\" 783) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 783) literal (intOrNat 100))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 783) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 783) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x546865205365636f6e6420546f6b656e\"))) (((\"fa2.py\" 783) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b31\"))))) (token_id ((\"fa2.py\" 783) literal (intOrNat 1))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 791)",
    "message": "mint",
    "params": "((\"fa2.py\" 791) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 791) literal (intOrNat 200))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 791) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 791) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e204e756d626572205468726565\"))) (((\"fa2.py\" 791) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b32\"))))) (token_id ((\"fa2.py\" 791) literal (intOrNat 2))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Multi-token Transfer Bob -> Alice",
    "line_no": "(\"fa2.py\" 795)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 796)",
    "message": "transfer",
    "params": "((\"fa2.py\" 796) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 800) record (amount ((\"fa2.py\" 800) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 800) literal (intOrNat 0)))) ((\"fa2.py\" 803) record (amount ((\"fa2.py\" 803) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 803) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 809) record (amount ((\"fa2.py\" 809) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 809) literal (intOrNat 2))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Other Basic Permission Tests",
    "line_no": "(\"fa2.py\" 813)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "Bob cannot transfer Alice's tokens.",
    "line_no": "(\"fa2.py\" 814)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 815)",
    "message": "transfer",
    "params": "((\"fa2.py\" 815) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 819) record (amount ((\"fa2.py\" 819) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 819) literal (intOrNat 0)))) ((\"fa2.py\" 822) record (amount ((\"fa2.py\" 822) literal (intOrNat 1))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 822) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert",
    "valid": "((\"fa2.py\" 815) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Admin can transfer anything.",
    "line_no": "(\"fa2.py\" 826)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 827)",
    "message": "transfer",
    "params": "((\"fa2.py\" 827) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 831) record (amount ((\"fa2.py\" 831) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 831) literal (intOrNat 0)))) ((\"fa2.py\" 834) record (amount ((\"fa2.py\" 834) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 834) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 839) record (amount ((\"fa2.py\" 839) literal (intOrNat 11))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 839) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Even Admin cannot transfer too much.",
    "line_no": "(\"fa2.py\" 843)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 844)",
    "message": "transfer",
    "params": "((\"fa2.py\" 844) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 848) record (amount ((\"fa2.py\" 848) literal (intOrNat 1000))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 848) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator",
    "valid": "((\"fa2.py\" 844) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Consumer Contract for Callback Calls.",
    "line_no": "(\"fa2.py\" 852)",
    "tag": "h3"
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 854) static_id 1) \nstorage ((\"fa2.py\" 689) record (last_sum ((\"fa2.py\" 689) literal (intOrNat 0))) (operator_support ((\"fa2.py\" 689) literal (bool False))))\nstorage_type (())\nentry_points ((receive_balances True None None None True None (\"fa2.py\" 698) (((\"fa2.py\" 699) set_type ((\"fa2.py\" 698) params) (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))) ((\"fa2.py\" 700) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 700) literal (intOrNat 0))) ((\"fa2.py\" 701) for_group \"resp\" ((\"fa2.py\" 698) params) (((\"fa2.py\" 702) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) add ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) attr ((\"fa2.py\" 701) iter \"resp\") \"balance\"))))))) (reinit True None None None False None (\"fa2.py\" 693) (((\"fa2.py\" 694) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 694) literal (intOrNat 0))))))\nflags ()\nprivates ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "((\"fa2.py\" 854) static_id 1)",
    "line_no": "(\"fa2.py\" 854)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Consumer virtual address: ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")",
    "line_no": "(\"fa2.py\" 855)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Balance-of.",
    "line_no": "(\"fa2.py\" 857)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 865)",
    "message": "balance_of",
    "params": "((\"fa2.py\" 859) record (callback ((\"fa2.py\" 860) open_variant ((\"fa2.py\" 860) contract \"receive_balances\" (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))) ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")) \"Some\" \"None\")) (requests ((\"fa2.py\" 859) list ((\"fa2.py\" 866) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 866) literal (intOrNat 0)))) ((\"fa2.py\" 867) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 867) literal (intOrNat 1)))) ((\"fa2.py\" 868) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 868) literal (intOrNat 2)))))))"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 870) eq ((\"fa2.py\" 870) attr ((\"fa2.py\" 854) contract_data ((\"fa2.py\" 854) static_id 1)) \"last_sum\") ((\"fa2.py\" 870) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 870)"
   },
   {
    "action": "html",
    "inner": "Operators",
    "line_no": "(\"fa2.py\" 871)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "This version was compiled with operator support.",
    "line_no": "(\"fa2.py\" 877)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Calling 0 updates should work:",
    "line_no": "(\"fa2.py\" 878)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 879)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 879) list )"
   },
   {
    "action": "html",
    "inner": "Operator Accounts",
    "line_no": "(\"fa2.py\" 880)",
    "tag": "h3"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 884) list ((\"fa2.py\" 881) account_of_seed \"Operator0\") ((\"fa2.py\" 882) account_of_seed \"Operator1\") ((\"fa2.py\" 883) account_of_seed \"Operator2\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 884)",
    "stripStrings": false
   },
   {
    "action": "html",
    "inner": "Admin can change Alice's operator.",
    "line_no": "(\"fa2.py\" 885)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 886)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 886) list ((\"fa2.py\" 887) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 891) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 2)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Operator1 can now transfer Alice's tokens 0 and 2",
    "line_no": "(\"fa2.py\" 896)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 897)",
    "message": "transfer",
    "params": "((\"fa2.py\" 897) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 901) record (amount ((\"fa2.py\" 901) literal (intOrNat 2))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 901) literal (intOrNat 0)))) ((\"fa2.py\" 904) record (amount ((\"fa2.py\" 904) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 904) literal (intOrNat 2))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Bob's tokens",
    "line_no": "(\"fa2.py\" 908)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 909)",
    "message": "transfer",
    "params": "((\"fa2.py\" 909) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 913) record (amount ((\"fa2.py\" 913) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 913) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1",
    "valid": "((\"fa2.py\" 909) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Operator2 cannot transfer Alice's tokens",
    "line_no": "(\"fa2.py\" 917)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 918)",
    "message": "transfer",
    "params": "((\"fa2.py\" 918) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 922) record (amount ((\"fa2.py\" 922) literal (intOrNat 2))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 922) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator2",
    "valid": "((\"fa2.py\" 918) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can remove their operator",
    "line_no": "(\"fa2.py\" 926)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 927)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 927) list ((\"fa2.py\" 928) variant \"remove_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 932) variant \"remove_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Alice's tokens any more",
    "line_no": "(\"fa2.py\" 937)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 938)",
    "message": "transfer",
    "params": "((\"fa2.py\" 938) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 942) record (amount ((\"fa2.py\" 942) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 942) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1",
    "valid": "((\"fa2.py\" 938) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Bob can add Operator0.",
    "line_no": "(\"fa2.py\" 946)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 947)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 947) list ((\"fa2.py\" 948) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 952) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 1)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 can transfer Bob's tokens '0' and '1'",
    "line_no": "(\"fa2.py\" 957)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 958)",
    "message": "transfer",
    "params": "((\"fa2.py\" 958) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 962) record (amount ((\"fa2.py\" 962) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 962) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 967) record (amount ((\"fa2.py\" 967) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 967) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob cannot add Operator0 for Alice's tokens.",
    "line_no": "(\"fa2.py\" 971)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 972)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 972) list ((\"fa2.py\" 973) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert",
    "valid": "((\"fa2.py\" 972) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can also add Operator0 for their tokens 0.",
    "line_no": "(\"fa2.py\" 979)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 980)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 980) list ((\"fa2.py\" 981) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator0 can now transfer Bob's and Alice's 0-tokens.",
    "line_no": "(\"fa2.py\" 987)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 988)",
    "message": "transfer",
    "params": "((\"fa2.py\" 988) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 992) record (amount ((\"fa2.py\" 992) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 992) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 997) record (amount ((\"fa2.py\" 997) literal (intOrNat 1))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 997) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob adds Operator2 as second operator for 0-tokens.",
    "line_no": "(\"fa2.py\" 1001)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1002)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 1002) list ((\"fa2.py\" 1003) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 883) resolve ((\"fa2.py\" 883) attr ((\"fa2.py\" 883) account_of_seed \"Operator2\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 and Operator2 can transfer Bob's 0-tokens.",
    "line_no": "(\"fa2.py\" 1009)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1010)",
    "message": "transfer",
    "params": "((\"fa2.py\" 1010) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 1014) record (amount ((\"fa2.py\" 1014) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 1014) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1018)",
    "message": "transfer",
    "params": "((\"fa2.py\" 1018) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 1022) record (amount ((\"fa2.py\" 1022) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 1022) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator2"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 1026)",
    "tag": "p"
   }
  ],
  "kind": "test"
 },
 {
  "shortname": "FA2",
  "longname": "FA2",
  "scenario": [
   {
    "action": "html",
    "inner": "FA2 Contract Name: FA2",
    "line_no": "(\"fa2.py\" 713)",
    "tag": "h1"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 714)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Accounts",
    "line_no": "(\"fa2.py\" 720)",
    "tag": "h2"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 721) list ((\"fa2.py\" 716) account_of_seed \"Administrator\") ((\"fa2.py\" 717) account_of_seed \"Alice\") ((\"fa2.py\" 718) account_of_seed \"Robert\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 721)",
    "stripStrings": false
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 725) static_id 0) \nstorage ((\"fa2.py\" 370) record (administrator ((\"fa2.py\" 716) resolve ((\"fa2.py\" 716) attr ((\"fa2.py\" 716) account_of_seed \"Administrator\") \"address\"))) (all_tokens ((\"fa2.py\" 299) literal (nat 0))) (ledger ((\"fa2.py\" 361) type_annotation ((\"fa2.py\" 361) big_map ) (bigmap (unknown 26) (record ((balance \"nat\")) None (\"fa2.py\" 221))))) (metadata ((\"fa2.py\" 723) big_map (((\"fa2.py\" 725) literal (string \"\")) ((\"fa2.py\" 723) literal (bytes \"0x68747470733a2f2f6578616d706c652e636f6d\"))))) (operators ((\"fa2.py\" 244) type_annotation ((\"fa2.py\" 244) big_map ) (bigmap (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)) \"unit\"))) (paused ((\"fa2.py\" 360) literal (bool False))) (token_metadata ((\"fa2.py\" 362) type_annotation ((\"fa2.py\" 362) big_map ) (bigmap \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) None (\"fa2.py\" 282))))) (total_supply ((\"fa2.py\" 371) type_annotation ((\"fa2.py\" 371) big_map ) (bigmap \"nat\" \"nat\"))))\nstorage_type (())\nentry_points ((balance_of True None None None True None (\"fa2.py\" 417) (((\"fa2.py\" 419) verify ((\"fa2.py\" 419) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 419) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 420) set_type ((\"fa2.py\" 417) params) (record ((callback (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))))) (requests (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263))))) (Some ((\"requests\") (\"callback\"))) (\"fa2.py\" 272))) ((\"fa2.py\" 439) define_local \"responses\" ((\"fa2.py\" 439) map_function ((\"fa2.py\" 439) attr ((\"fa2.py\" 417) params) \"requests\") ((\"fa2.py\" 439) lambda 0 None False None \"\" (((\"fa2.py\" 423) verify ((\"fa2.py\" 423) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 27)) \"token_id\")) ((\"fa2.py\" 423) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 424) if_block ((\"fa2.py\" 424) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 27)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 27)) \"token_id\") \"nat\"))) (((\"fa2.py\" 426) result ((\"fa2.py\" 427) record (balance ((\"fa2.py\" 425) attr ((\"fa2.py\" 425) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 27)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 27)) \"token_id\") \"nat\"))) \"balance\")) (request ((\"fa2.py\" 428) record (owner ((\"fa2.py\" 429) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 27)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 430) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 27)) \"token_id\") \"nat\")))))))) (else_block (((\"fa2.py\" 433) result ((\"fa2.py\" 434) record (balance ((\"fa2.py\" 434) literal (intOrNat 0))) (request ((\"fa2.py\" 435) record (owner ((\"fa2.py\" 436) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 27)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 437) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 27)) \"token_id\") \"nat\"))))))))))) True) ((\"fa2.py\" 441) set ((\"fa2.py\" 441) operations) ((\"fa2.py\" 441) cons ((\"fa2.py\" 441) transfer ((\"fa2.py\" 441) get_local \"responses\") ((\"fa2.py\" 441) literal (mutez 0)) ((\"fa2.py\" 440) type_annotation ((\"fa2.py\" 440) attr ((\"fa2.py\" 417) params) \"callback\") (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))))) ((\"fa2.py\" 441) operations))))) (mint True None None None True None (\"fa2.py\" 522) (((\"fa2.py\" 523) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 523) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 534) if_block ((\"fa2.py\" 534) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) (((\"fa2.py\" 535) set ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\"))))) (else_block (((\"fa2.py\" 537) set ((\"fa2.py\" 537) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\")))))) ((\"fa2.py\" 538) if_block ((\"fa2.py\" 538) not ((\"fa2.py\" 310) lt ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\"))) (((\"fa2.py\" 304) verify ((\"fa2.py\" 304) eq ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 304) literal (string \"Token-IDs should be consecutive\"))) ((\"fa2.py\" 305) set ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 305) add ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 305) literal (intOrNat 1)))) ((\"fa2.py\" 540) set ((\"fa2.py\" 540) get_item ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 540) record (token_id ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) (token_info ((\"fa2.py\" 542) attr ((\"fa2.py\" 522) params) \"metadata\")))))) ((\"fa2.py\" 545) set ((\"fa2.py\" 545) get_item ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 545) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\") ((\"fa2.py\" 545) get_item_default ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 545) literal (intOrNat 0))))))) (set_administrator True None None None True None (\"fa2.py\" 501) (((\"fa2.py\" 502) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 502) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 503) set ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\") ((\"fa2.py\" 501) params)))) (set_metadata True None None None True None (\"fa2.py\" 516) (((\"fa2.py\" 517) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 517) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 518) set ((\"fa2.py\" 518) get_item ((\"fa2.py\" 518) attr ((\"fa2.py\" 725) data) \"metadata\") ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"k\")) ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"v\")))) (set_pause True None None None True None (\"fa2.py\" 510) (((\"fa2.py\" 511) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 511) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 512) set ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\") ((\"fa2.py\" 510) params)))) (transfer True None None None True None (\"fa2.py\" 375) (((\"fa2.py\" 376) verify ((\"fa2.py\" 376) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 376) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 377) set_type ((\"fa2.py\" 375) params) (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169)))) ((\"fa2.py\" 378) for_group \"transfer\" ((\"fa2.py\" 375) params) (((\"fa2.py\" 380) for_group \"tx\" ((\"fa2.py\" 380) attr ((\"fa2.py\" 378) iter \"transfer\") \"txs\") (((\"fa2.py\" 395) verify ((\"fa2.py\" 389) or ((\"fa2.py\" 384) or ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 385) eq ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") ((\"\" -1) sender))) ((\"fa2.py\" 259) contains ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"\" -1) sender)) (owner ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\")) (token_id ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))) ((\"fa2.py\" 395) literal (string \"FA2_NOT_OPERATOR\"))) ((\"fa2.py\" 396) verify ((\"fa2.py\" 397) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\")) ((\"fa2.py\" 396) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 401) if_block ((\"fa2.py\" 401) gt ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\") ((\"fa2.py\" 401) literal (intOrNat 0))) (((\"fa2.py\" 403) verify ((\"fa2.py\" 404) ge ((\"fa2.py\" 404) attr ((\"fa2.py\" 404) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")) ((\"fa2.py\" 403) literal (string \"FA2_INSUFFICIENT_BALANCE\"))) ((\"fa2.py\" 407) set ((\"fa2.py\" 407) attr ((\"fa2.py\" 407) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 407) open_variant ((\"fa2.py\" 407) is_nat ((\"fa2.py\" 408) sub ((\"fa2.py\" 408) attr ((\"fa2.py\" 408) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))) \"Some\" \"None\")) ((\"fa2.py\" 409) if_block ((\"fa2.py\" 409) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) (((\"fa2.py\" 410) set ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 410) add ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))))) (else_block (((\"fa2.py\" 412) set ((\"fa2.py\" 412) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")))))))) (else_block ()))))))) (update_operators True None None None True None (\"fa2.py\" 457) (((\"fa2.py\" 458) set_type ((\"fa2.py\" 457) params) (list (variant ((add_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189))) (remove_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) None (\"fa2.py\" 459)))) ((\"fa2.py\" 465) for_group \"update\" ((\"fa2.py\" 457) params) (((\"fa2.py\" 466) match_cases ((\"fa2.py\" 465) iter \"update\") \"match_fa2_466\" (((\"fa2.py\" 467) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"add_operator\" \"add_operator\" (((\"fa2.py\" 468) verify ((\"fa2.py\" 469) or ((\"fa2.py\" 469) eq ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 468) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 255) set ((\"fa2.py\" 255) get_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 474) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"operator\")) (owner ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\")) (token_id ((\"fa2.py\" 475) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))) ((\"\" -1) literal (unit))))) ((\"fa2.py\" 476) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"remove_operator\" \"remove_operator\" (((\"fa2.py\" 477) verify ((\"fa2.py\" 478) or ((\"fa2.py\" 478) eq ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 477) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 257) del_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 483) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"operator\")) (owner ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\")) (token_id ((\"fa2.py\" 484) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))))))))))))\nflags ((initial-cast) (exceptions default-line))\nprivates ()\nviews ((offchain all_tokens False (\"fa2.py\" 586) True \"\\n            This view is specified (but optional) in the standard.\\n\\n            This contract is built with assume_consecutive_token_ids =\\n            True, so we return a list constructed from the number of tokens.\\n            \" (((\"fa2.py\" 588) result ((\"fa2.py\" 588) range ((\"fa2.py\" 588) literal (intOrNat 0)) ((\"fa2.py\" 588) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 588) literal (intOrNat 1)))))) (offchain count_tokens False (\"fa2.py\" 574) True \"Get how many tokens are in this FA2 contract.\\n        \" (((\"fa2.py\" 577) result ((\"fa2.py\" 577) attr ((\"fa2.py\" 725) data) \"all_tokens\")))) (offchain does_token_exist True (\"fa2.py\" 580) True \"Ask whether a token ID is exists.\" (((\"fa2.py\" 582) set_type ((\"fa2.py\" 580) params) \"nat\") ((\"fa2.py\" 583) result ((\"fa2.py\" 583) contains ((\"fa2.py\" 583) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 580) params))))) (offchain get_balance True (\"fa2.py\" 444) True \"This is the `get_balance` view defined in TZIP-12.\" (((\"fa2.py\" 446) set_type ((\"fa2.py\" 444) params) (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 447))) ((\"fa2.py\" 452) verify ((\"fa2.py\" 452) contains ((\"fa2.py\" 452) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\")) ((\"fa2.py\" 452) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 453) result ((\"fa2.py\" 453) attr ((\"fa2.py\" 453) get_item ((\"fa2.py\" 453) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\") \"nat\"))) \"balance\")))) (offchain is_operator True (\"fa2.py\" 601) True \"\" (((\"fa2.py\" 602) set_type ((\"fa2.py\" 601) params) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 603))) ((\"fa2.py\" 607) result ((\"fa2.py\" 259) contains ((\"fa2.py\" 608) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 610) attr ((\"fa2.py\" 601) params) \"operator\")) (owner ((\"fa2.py\" 609) attr ((\"fa2.py\" 601) params) \"owner\")) (token_id ((\"fa2.py\" 611) attr ((\"fa2.py\" 601) params) \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))))) (offchain total_supply True (\"fa2.py\" 593) True \"\" (((\"fa2.py\" 595) result ((\"fa2.py\" 595) get_item ((\"fa2.py\" 595) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 593) params))))))\nentry_points_layout ()\ninitial_metadata ((metadata_base (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"version\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2\")))) (elem ((\"fa2.py\" 674) literal (string \"description\")) (meta_expr ((\"fa2.py\" 674) literal (string \"This is a didactic reference implementation of FA2, a.k.a. TZIP-012, using SmartPy.\n\nThis particular contract uses the configuration named: FA2.\")))) (elem ((\"fa2.py\" 674) literal (string \"interfaces\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-012\"))) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-016\"))))) (elem ((\"fa2.py\" 674) literal (string \"authors\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"Seb Mondet <https://seb.mondet.org>\"))))) (elem ((\"fa2.py\" 674) literal (string \"homepage\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy\")))) (elem ((\"fa2.py\" 674) literal (string \"views\")) (meta_list (\"fa2.py\" 674) (meta_view \"get_balance\" (\"fa2.py\" 444)) (meta_view \"does_token_exist\" (\"fa2.py\" 580)) (meta_view \"count_tokens\" (\"fa2.py\" 574)) (meta_view \"all_tokens\" (\"fa2.py\" 586)) (meta_view \"is_operator\" (\"fa2.py\" 601)) (meta_view \"total_supply\" (\"fa2.py\" 593)))) (elem ((\"fa2.py\" 674) literal (string \"source\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"tools\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"SmartPy\"))))) (elem ((\"fa2.py\" 674) literal (string \"location\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy.git\")))))) (elem ((\"fa2.py\" 674) literal (string \"permissions\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"operator\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-or-operator-transfer\")))) (elem ((\"fa2.py\" 674) literal (string \"receiver\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))) (elem ((\"fa2.py\" 674) literal (string \"sender\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))))) (elem ((\"fa2.py\" 674) literal (string \"fa2-smartpy\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"configuration\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"add_mutez_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"allow_self_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"assume_consecutive_token_ids\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"force_layouts\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"lazy_entry_points\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"name\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2\")))) (elem ((\"fa2.py\" 674) literal (string \"non_fungible\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"readable\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"single_asset\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"store_total_supply\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"support_operator\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"use_token_metadata_offchain_view\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))))))))))\nbalance ())",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 725)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Initial Minting",
    "line_no": "(\"fa2.py\" 729)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "The administrator mints 100 token-0's to Alice.",
    "line_no": "(\"fa2.py\" 730)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 735)",
    "message": "mint",
    "params": "((\"fa2.py\" 735) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 735) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 735) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 735) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 735) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 735) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 740)",
    "message": "mint",
    "params": "((\"fa2.py\" 740) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 740) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 740) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 740) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 740) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 740) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Transfers Alice -> Bob",
    "line_no": "(\"fa2.py\" 744)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 745)",
    "message": "transfer",
    "params": "((\"fa2.py\" 745) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 749) record (amount ((\"fa2.py\" 749) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 749) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 755) eq ((\"fa2.py\" 755) attr ((\"fa2.py\" 755) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 755) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 754)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 757) eq ((\"fa2.py\" 757) attr ((\"fa2.py\" 757) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 757) literal (intOrNat 10)))",
    "line_no": "(\"fa2.py\" 756)"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 758)",
    "message": "transfer",
    "params": "((\"fa2.py\" 758) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 762) record (amount ((\"fa2.py\" 762) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 762) literal (intOrNat 0)))) ((\"fa2.py\" 765) record (amount ((\"fa2.py\" 765) literal (intOrNat 11))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 765) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 771) eq ((\"fa2.py\" 771) attr ((\"fa2.py\" 771) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 771) literal (intOrNat 69)))",
    "line_no": "(\"fa2.py\" 770)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 774) eq ((\"fa2.py\" 774) attr ((\"fa2.py\" 774) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 774) literal (intOrNat 31)))",
    "line_no": "(\"fa2.py\" 773)"
   },
   {
    "action": "html",
    "inner": "More Token Types",
    "line_no": "(\"fa2.py\" 778)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 783)",
    "message": "mint",
    "params": "((\"fa2.py\" 783) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 783) literal (intOrNat 100))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 783) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 783) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x546865205365636f6e6420546f6b656e\"))) (((\"fa2.py\" 783) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b31\"))))) (token_id ((\"fa2.py\" 783) literal (intOrNat 1))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 791)",
    "message": "mint",
    "params": "((\"fa2.py\" 791) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 791) literal (intOrNat 200))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 791) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 791) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e204e756d626572205468726565\"))) (((\"fa2.py\" 791) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b32\"))))) (token_id ((\"fa2.py\" 791) literal (intOrNat 2))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Multi-token Transfer Bob -> Alice",
    "line_no": "(\"fa2.py\" 795)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 796)",
    "message": "transfer",
    "params": "((\"fa2.py\" 796) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 800) record (amount ((\"fa2.py\" 800) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 800) literal (intOrNat 0)))) ((\"fa2.py\" 803) record (amount ((\"fa2.py\" 803) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 803) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 809) record (amount ((\"fa2.py\" 809) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 809) literal (intOrNat 2))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Other Basic Permission Tests",
    "line_no": "(\"fa2.py\" 813)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "Bob cannot transfer Alice's tokens.",
    "line_no": "(\"fa2.py\" 814)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 815)",
    "message": "transfer",
    "params": "((\"fa2.py\" 815) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 819) record (amount ((\"fa2.py\" 819) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 819) literal (intOrNat 0)))) ((\"fa2.py\" 822) record (amount ((\"fa2.py\" 822) literal (intOrNat 1))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 822) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert",
    "valid": "((\"fa2.py\" 815) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Admin can transfer anything.",
    "line_no": "(\"fa2.py\" 826)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 827)",
    "message": "transfer",
    "params": "((\"fa2.py\" 827) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 831) record (amount ((\"fa2.py\" 831) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 831) literal (intOrNat 0)))) ((\"fa2.py\" 834) record (amount ((\"fa2.py\" 834) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 834) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 839) record (amount ((\"fa2.py\" 839) literal (intOrNat 11))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 839) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Even Admin cannot transfer too much.",
    "line_no": "(\"fa2.py\" 843)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 844)",
    "message": "transfer",
    "params": "((\"fa2.py\" 844) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 848) record (amount ((\"fa2.py\" 848) literal (intOrNat 1000))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 848) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator",
    "valid": "((\"fa2.py\" 844) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Consumer Contract for Callback Calls.",
    "line_no": "(\"fa2.py\" 852)",
    "tag": "h3"
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 854) static_id 1) \nstorage ((\"fa2.py\" 689) record (last_sum ((\"fa2.py\" 689) literal (intOrNat 0))) (operator_support ((\"fa2.py\" 689) literal (bool False))))\nstorage_type (())\nentry_points ((receive_balances True None None None True None (\"fa2.py\" 698) (((\"fa2.py\" 699) set_type ((\"fa2.py\" 698) params) (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))) ((\"fa2.py\" 700) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 700) literal (intOrNat 0))) ((\"fa2.py\" 701) for_group \"resp\" ((\"fa2.py\" 698) params) (((\"fa2.py\" 702) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) add ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) attr ((\"fa2.py\" 701) iter \"resp\") \"balance\"))))))) (reinit True None None None False None (\"fa2.py\" 693) (((\"fa2.py\" 694) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 694) literal (intOrNat 0))))))\nflags ()\nprivates ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "((\"fa2.py\" 854) static_id 1)",
    "line_no": "(\"fa2.py\" 854)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Consumer virtual address: ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")",
    "line_no": "(\"fa2.py\" 855)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Balance-of.",
    "line_no": "(\"fa2.py\" 857)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 865)",
    "message": "balance_of",
    "params": "((\"fa2.py\" 859) record (callback ((\"fa2.py\" 860) open_variant ((\"fa2.py\" 860) contract \"receive_balances\" (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))) ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")) \"Some\" \"None\")) (requests ((\"fa2.py\" 859) list ((\"fa2.py\" 866) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 866) literal (intOrNat 0)))) ((\"fa2.py\" 867) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 867) literal (intOrNat 1)))) ((\"fa2.py\" 868) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 868) literal (intOrNat 2)))))))"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 870) eq ((\"fa2.py\" 870) attr ((\"fa2.py\" 854) contract_data ((\"fa2.py\" 854) static_id 1)) \"last_sum\") ((\"fa2.py\" 870) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 870)"
   },
   {
    "action": "html",
    "inner": "Operators",
    "line_no": "(\"fa2.py\" 871)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "This version was compiled with operator support.",
    "line_no": "(\"fa2.py\" 877)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Calling 0 updates should work:",
    "line_no": "(\"fa2.py\" 878)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 879)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 879) list )"
   },
   {
    "action": "html",
    "inner": "Operator Accounts",
    "line_no": "(\"fa2.py\" 880)",
    "tag": "h3"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 884) list ((\"fa2.py\" 881) account_of_seed \"Operator0\") ((\"fa2.py\" 882) account_of_seed \"Operator1\") ((\"fa2.py\" 883) account_of_seed \"Operator2\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 884)",
    "stripStrings": false
   },
   {
    "action": "html",
    "inner": "Admin can change Alice's operator.",
    "line_no": "(\"fa2.py\" 885)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 886)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 886) list ((\"fa2.py\" 887) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 891) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 2)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Operator1 can now transfer Alice's tokens 0 and 2",
    "line_no": "(\"fa2.py\" 896)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 897)",
    "message": "transfer",
    "params": "((\"fa2.py\" 897) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 901) record (amount ((\"fa2.py\" 901) literal (intOrNat 2))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 901) literal (intOrNat 0)))) ((\"fa2.py\" 904) record (amount ((\"fa2.py\" 904) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 904) literal (intOrNat 2))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Bob's tokens",
    "line_no": "(\"fa2.py\" 908)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 909)",
    "message": "transfer",
    "params": "((\"fa2.py\" 909) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 913) record (amount ((\"fa2.py\" 913) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 913) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1",
    "valid": "((\"fa2.py\" 909) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Operator2 cannot transfer Alice's tokens",
    "line_no": "(\"fa2.py\" 917)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 918)",
    "message": "transfer",
    "params": "((\"fa2.py\" 918) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 922) record (amount ((\"fa2.py\" 922) literal (intOrNat 2))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 922) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator2",
    "valid": "((\"fa2.py\" 918) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can remove their operator",
    "line_no": "(\"fa2.py\" 926)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 927)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 927) list ((\"fa2.py\" 928) variant \"remove_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 932) variant \"remove_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Alice's tokens any more",
    "line_no": "(\"fa2.py\" 937)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 938)",
    "message": "transfer",
    "params": "((\"fa2.py\" 938) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 942) record (amount ((\"fa2.py\" 942) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 942) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1",
    "valid": "((\"fa2.py\" 938) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Bob can add Operator0.",
    "line_no": "(\"fa2.py\" 946)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 947)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 947) list ((\"fa2.py\" 948) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 952) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 1)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 can transfer Bob's tokens '0' and '1'",
    "line_no": "(\"fa2.py\" 957)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 958)",
    "message": "transfer",
    "params": "((\"fa2.py\" 958) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 962) record (amount ((\"fa2.py\" 962) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 962) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 967) record (amount ((\"fa2.py\" 967) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 967) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob cannot add Operator0 for Alice's tokens.",
    "line_no": "(\"fa2.py\" 971)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 972)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 972) list ((\"fa2.py\" 973) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert",
    "valid": "((\"fa2.py\" 972) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can also add Operator0 for their tokens 0.",
    "line_no": "(\"fa2.py\" 979)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 980)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 980) list ((\"fa2.py\" 981) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator0 can now transfer Bob's and Alice's 0-tokens.",
    "line_no": "(\"fa2.py\" 987)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 988)",
    "message": "transfer",
    "params": "((\"fa2.py\" 988) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 992) record (amount ((\"fa2.py\" 992) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 992) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 997) record (amount ((\"fa2.py\" 997) literal (intOrNat 1))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 997) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob adds Operator2 as second operator for 0-tokens.",
    "line_no": "(\"fa2.py\" 1001)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1002)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 1002) list ((\"fa2.py\" 1003) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 883) resolve ((\"fa2.py\" 883) attr ((\"fa2.py\" 883) account_of_seed \"Operator2\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 and Operator2 can transfer Bob's 0-tokens.",
    "line_no": "(\"fa2.py\" 1009)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1010)",
    "message": "transfer",
    "params": "((\"fa2.py\" 1010) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 1014) record (amount ((\"fa2.py\" 1014) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 1014) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1018)",
    "message": "transfer",
    "params": "((\"fa2.py\" 1018) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 1022) record (amount ((\"fa2.py\" 1022) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 1022) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator2"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 1026)",
    "tag": "p"
   }
  ],
  "kind": "test"
 },
 {
  "shortname": "FA2-mutez",
  "longname": "FA2-mutez",
  "scenario": [
   {
    "action": "html",
    "inner": "FA2 Contract Name: FA2-mutez",
    "line_no": "(\"fa2.py\" 713)",
    "tag": "h1"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 714)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Accounts",
    "line_no": "(\"fa2.py\" 720)",
    "tag": "h2"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 721) list ((\"fa2.py\" 716) account_of_seed \"Administrator\") ((\"fa2.py\" 717) account_of_seed \"Alice\") ((\"fa2.py\" 718) account_of_seed \"Robert\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 721)",
    "stripStrings": false
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 725) static_id 0) \nstorage ((\"fa2.py\" 370) record (administrator ((\"fa2.py\" 716) resolve ((\"fa2.py\" 716) attr ((\"fa2.py\" 716) account_of_seed \"Administrator\") \"address\"))) (all_tokens ((\"fa2.py\" 299) literal (nat 0))) (ledger ((\"fa2.py\" 361) type_annotation ((\"fa2.py\" 361) big_map ) (bigmap (unknown 29) (record ((balance \"nat\")) None (\"fa2.py\" 221))))) (metadata ((\"fa2.py\" 723) big_map (((\"fa2.py\" 725) literal (string \"\")) ((\"fa2.py\" 723) literal (bytes \"0x68747470733a2f2f6578616d706c652e636f6d\"))))) (operators ((\"fa2.py\" 244) type_annotation ((\"fa2.py\" 244) big_map ) (bigmap (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)) \"unit\"))) (paused ((\"fa2.py\" 360) literal (bool False))) (token_metadata ((\"fa2.py\" 362) type_annotation ((\"fa2.py\" 362) big_map ) (bigmap \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) None (\"fa2.py\" 282))))) (total_supply ((\"fa2.py\" 371) type_annotation ((\"fa2.py\" 371) big_map ) (bigmap \"nat\" \"nat\"))))\nstorage_type (())\nentry_points ((balance_of True None None None True None (\"fa2.py\" 417) (((\"fa2.py\" 419) verify ((\"fa2.py\" 419) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 419) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 420) set_type ((\"fa2.py\" 417) params) (record ((callback (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))))) (requests (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263))))) (Some ((\"requests\") (\"callback\"))) (\"fa2.py\" 272))) ((\"fa2.py\" 439) define_local \"responses\" ((\"fa2.py\" 439) map_function ((\"fa2.py\" 439) attr ((\"fa2.py\" 417) params) \"requests\") ((\"fa2.py\" 439) lambda 0 None False None \"\" (((\"fa2.py\" 423) verify ((\"fa2.py\" 423) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 30)) \"token_id\")) ((\"fa2.py\" 423) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 424) if_block ((\"fa2.py\" 424) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 30)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 30)) \"token_id\") \"nat\"))) (((\"fa2.py\" 426) result ((\"fa2.py\" 427) record (balance ((\"fa2.py\" 425) attr ((\"fa2.py\" 425) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 30)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 30)) \"token_id\") \"nat\"))) \"balance\")) (request ((\"fa2.py\" 428) record (owner ((\"fa2.py\" 429) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 30)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 430) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 30)) \"token_id\") \"nat\")))))))) (else_block (((\"fa2.py\" 433) result ((\"fa2.py\" 434) record (balance ((\"fa2.py\" 434) literal (intOrNat 0))) (request ((\"fa2.py\" 435) record (owner ((\"fa2.py\" 436) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 30)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 437) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 30)) \"token_id\") \"nat\"))))))))))) True) ((\"fa2.py\" 441) set ((\"fa2.py\" 441) operations) ((\"fa2.py\" 441) cons ((\"fa2.py\" 441) transfer ((\"fa2.py\" 441) get_local \"responses\") ((\"fa2.py\" 441) literal (mutez 0)) ((\"fa2.py\" 440) type_annotation ((\"fa2.py\" 440) attr ((\"fa2.py\" 417) params) \"callback\") (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))))) ((\"fa2.py\" 441) operations))))) (mint True None None None True None (\"fa2.py\" 522) (((\"fa2.py\" 523) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 523) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 534) if_block ((\"fa2.py\" 534) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) (((\"fa2.py\" 535) set ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\"))))) (else_block (((\"fa2.py\" 537) set ((\"fa2.py\" 537) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\")))))) ((\"fa2.py\" 538) if_block ((\"fa2.py\" 538) not ((\"fa2.py\" 310) lt ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\"))) (((\"fa2.py\" 304) verify ((\"fa2.py\" 304) eq ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 304) literal (string \"Token-IDs should be consecutive\"))) ((\"fa2.py\" 305) set ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 305) add ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 305) literal (intOrNat 1)))) ((\"fa2.py\" 540) set ((\"fa2.py\" 540) get_item ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 540) record (token_id ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) (token_info ((\"fa2.py\" 542) attr ((\"fa2.py\" 522) params) \"metadata\")))))) ((\"fa2.py\" 545) set ((\"fa2.py\" 545) get_item ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 545) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\") ((\"fa2.py\" 545) get_item_default ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 545) literal (intOrNat 0))))))) (mutez_transfer True None None None True None (\"fa2.py\" 355) (((\"fa2.py\" 325) verify ((\"fa2.py\" 325) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 326) set_type ((\"fa2.py\" 326) attr ((\"fa2.py\" 355) params) \"destination\") \"address\") ((\"fa2.py\" 327) set_type ((\"fa2.py\" 327) attr ((\"fa2.py\" 355) params) \"amount\") \"mutez\") ((\"fa2.py\" 328) set ((\"fa2.py\" 328) operations) ((\"fa2.py\" 328) cons ((\"fa2.py\" 328) transfer ((\"\" -1) literal (unit)) ((\"fa2.py\" 327) attr ((\"fa2.py\" 355) params) \"amount\") ((\"fa2.py\" 328) open_variant ((\"fa2.py\" 328) contract \"\" \"unit\" ((\"fa2.py\" 326) attr ((\"fa2.py\" 355) params) \"destination\")) \"Some\" \"None\")) ((\"fa2.py\" 328) operations))))) (set_administrator True None None None True None (\"fa2.py\" 501) (((\"fa2.py\" 502) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 502) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 503) set ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\") ((\"fa2.py\" 501) params)))) (set_metadata True None None None True None (\"fa2.py\" 516) (((\"fa2.py\" 517) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 517) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 518) set ((\"fa2.py\" 518) get_item ((\"fa2.py\" 518) attr ((\"fa2.py\" 725) data) \"metadata\") ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"k\")) ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"v\")))) (set_pause True None None None True None (\"fa2.py\" 510) (((\"fa2.py\" 511) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 511) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 512) set ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\") ((\"fa2.py\" 510) params)))) (transfer True None None None True None (\"fa2.py\" 375) (((\"fa2.py\" 376) verify ((\"fa2.py\" 376) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 376) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 377) set_type ((\"fa2.py\" 375) params) (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169)))) ((\"fa2.py\" 378) for_group \"transfer\" ((\"fa2.py\" 375) params) (((\"fa2.py\" 380) for_group \"tx\" ((\"fa2.py\" 380) attr ((\"fa2.py\" 378) iter \"transfer\") \"txs\") (((\"fa2.py\" 395) verify ((\"fa2.py\" 389) or ((\"fa2.py\" 384) or ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 385) eq ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") ((\"\" -1) sender))) ((\"fa2.py\" 259) contains ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"\" -1) sender)) (owner ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\")) (token_id ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))) ((\"fa2.py\" 395) literal (string \"FA2_NOT_OPERATOR\"))) ((\"fa2.py\" 396) verify ((\"fa2.py\" 397) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\")) ((\"fa2.py\" 396) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 401) if_block ((\"fa2.py\" 401) gt ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\") ((\"fa2.py\" 401) literal (intOrNat 0))) (((\"fa2.py\" 403) verify ((\"fa2.py\" 404) ge ((\"fa2.py\" 404) attr ((\"fa2.py\" 404) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")) ((\"fa2.py\" 403) literal (string \"FA2_INSUFFICIENT_BALANCE\"))) ((\"fa2.py\" 407) set ((\"fa2.py\" 407) attr ((\"fa2.py\" 407) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 407) open_variant ((\"fa2.py\" 407) is_nat ((\"fa2.py\" 408) sub ((\"fa2.py\" 408) attr ((\"fa2.py\" 408) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))) \"Some\" \"None\")) ((\"fa2.py\" 409) if_block ((\"fa2.py\" 409) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) (((\"fa2.py\" 410) set ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 410) add ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))))) (else_block (((\"fa2.py\" 412) set ((\"fa2.py\" 412) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")))))))) (else_block ()))))))) (update_operators True None None None True None (\"fa2.py\" 457) (((\"fa2.py\" 458) set_type ((\"fa2.py\" 457) params) (list (variant ((add_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189))) (remove_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) None (\"fa2.py\" 459)))) ((\"fa2.py\" 465) for_group \"update\" ((\"fa2.py\" 457) params) (((\"fa2.py\" 466) match_cases ((\"fa2.py\" 465) iter \"update\") \"match_fa2_466\" (((\"fa2.py\" 467) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"add_operator\" \"add_operator\" (((\"fa2.py\" 468) verify ((\"fa2.py\" 469) or ((\"fa2.py\" 469) eq ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 468) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 255) set ((\"fa2.py\" 255) get_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 474) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"operator\")) (owner ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\")) (token_id ((\"fa2.py\" 475) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))) ((\"\" -1) literal (unit))))) ((\"fa2.py\" 476) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"remove_operator\" \"remove_operator\" (((\"fa2.py\" 477) verify ((\"fa2.py\" 478) or ((\"fa2.py\" 478) eq ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 477) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 257) del_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 483) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"operator\")) (owner ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\")) (token_id ((\"fa2.py\" 484) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))))))))))))\nflags ((initial-cast) (exceptions default-line))\nprivates ()\nviews ((offchain all_tokens False (\"fa2.py\" 586) True \"\\n            This view is specified (but optional) in the standard.\\n\\n            This contract is built with assume_consecutive_token_ids =\\n            True, so we return a list constructed from the number of tokens.\\n            \" (((\"fa2.py\" 588) result ((\"fa2.py\" 588) range ((\"fa2.py\" 588) literal (intOrNat 0)) ((\"fa2.py\" 588) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 588) literal (intOrNat 1)))))) (offchain count_tokens False (\"fa2.py\" 574) True \"Get how many tokens are in this FA2 contract.\\n        \" (((\"fa2.py\" 577) result ((\"fa2.py\" 577) attr ((\"fa2.py\" 725) data) \"all_tokens\")))) (offchain does_token_exist True (\"fa2.py\" 580) True \"Ask whether a token ID is exists.\" (((\"fa2.py\" 582) set_type ((\"fa2.py\" 580) params) \"nat\") ((\"fa2.py\" 583) result ((\"fa2.py\" 583) contains ((\"fa2.py\" 583) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 580) params))))) (offchain get_balance True (\"fa2.py\" 444) True \"This is the `get_balance` view defined in TZIP-12.\" (((\"fa2.py\" 446) set_type ((\"fa2.py\" 444) params) (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 447))) ((\"fa2.py\" 452) verify ((\"fa2.py\" 452) contains ((\"fa2.py\" 452) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\")) ((\"fa2.py\" 452) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 453) result ((\"fa2.py\" 453) attr ((\"fa2.py\" 453) get_item ((\"fa2.py\" 453) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\") \"nat\"))) \"balance\")))) (offchain is_operator True (\"fa2.py\" 601) True \"\" (((\"fa2.py\" 602) set_type ((\"fa2.py\" 601) params) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 603))) ((\"fa2.py\" 607) result ((\"fa2.py\" 259) contains ((\"fa2.py\" 608) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 610) attr ((\"fa2.py\" 601) params) \"operator\")) (owner ((\"fa2.py\" 609) attr ((\"fa2.py\" 601) params) \"owner\")) (token_id ((\"fa2.py\" 611) attr ((\"fa2.py\" 601) params) \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))))) (offchain total_supply True (\"fa2.py\" 593) True \"\" (((\"fa2.py\" 595) result ((\"fa2.py\" 595) get_item ((\"fa2.py\" 595) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 593) params))))))\nentry_points_layout ()\ninitial_metadata ((metadata_base (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"version\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-mutez\")))) (elem ((\"fa2.py\" 674) literal (string \"description\")) (meta_expr ((\"fa2.py\" 674) literal (string \"This is a didactic reference implementation of FA2, a.k.a. TZIP-012, using SmartPy.\n\nThis particular contract uses the configuration named: FA2-mutez.\")))) (elem ((\"fa2.py\" 674) literal (string \"interfaces\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-012\"))) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-016\"))))) (elem ((\"fa2.py\" 674) literal (string \"authors\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"Seb Mondet <https://seb.mondet.org>\"))))) (elem ((\"fa2.py\" 674) literal (string \"homepage\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy\")))) (elem ((\"fa2.py\" 674) literal (string \"views\")) (meta_list (\"fa2.py\" 674) (meta_view \"get_balance\" (\"fa2.py\" 444)) (meta_view \"does_token_exist\" (\"fa2.py\" 580)) (meta_view \"count_tokens\" (\"fa2.py\" 574)) (meta_view \"all_tokens\" (\"fa2.py\" 586)) (meta_view \"is_operator\" (\"fa2.py\" 601)) (meta_view \"total_supply\" (\"fa2.py\" 593)))) (elem ((\"fa2.py\" 674) literal (string \"source\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"tools\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"SmartPy\"))))) (elem ((\"fa2.py\" 674) literal (string \"location\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy.git\")))))) (elem ((\"fa2.py\" 674) literal (string \"permissions\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"operator\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-or-operator-transfer\")))) (elem ((\"fa2.py\" 674) literal (string \"receiver\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))) (elem ((\"fa2.py\" 674) literal (string \"sender\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))))) (elem ((\"fa2.py\" 674) literal (string \"fa2-smartpy\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"configuration\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"add_mutez_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"allow_self_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"assume_consecutive_token_ids\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"force_layouts\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"lazy_entry_points\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"name\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-mutez\")))) (elem ((\"fa2.py\" 674) literal (string \"non_fungible\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"readable\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"single_asset\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"store_total_supply\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"support_operator\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"use_token_metadata_offchain_view\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))))))))))\nbalance ())",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 725)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Initial Minting",
    "line_no": "(\"fa2.py\" 729)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "The administrator mints 100 token-0's to Alice.",
    "line_no": "(\"fa2.py\" 730)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 735)",
    "message": "mint",
    "params": "((\"fa2.py\" 735) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 735) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 735) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 735) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 735) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 735) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 740)",
    "message": "mint",
    "params": "((\"fa2.py\" 740) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 740) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 740) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 740) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 740) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 740) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Transfers Alice -> Bob",
    "line_no": "(\"fa2.py\" 744)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 745)",
    "message": "transfer",
    "params": "((\"fa2.py\" 745) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 749) record (amount ((\"fa2.py\" 749) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 749) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 755) eq ((\"fa2.py\" 755) attr ((\"fa2.py\" 755) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 755) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 754)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 757) eq ((\"fa2.py\" 757) attr ((\"fa2.py\" 757) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 757) literal (intOrNat 10)))",
    "line_no": "(\"fa2.py\" 756)"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 758)",
    "message": "transfer",
    "params": "((\"fa2.py\" 758) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 762) record (amount ((\"fa2.py\" 762) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 762) literal (intOrNat 0)))) ((\"fa2.py\" 765) record (amount ((\"fa2.py\" 765) literal (intOrNat 11))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 765) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 771) eq ((\"fa2.py\" 771) attr ((\"fa2.py\" 771) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 771) literal (intOrNat 69)))",
    "line_no": "(\"fa2.py\" 770)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 774) eq ((\"fa2.py\" 774) attr ((\"fa2.py\" 774) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 774) literal (intOrNat 31)))",
    "line_no": "(\"fa2.py\" 773)"
   },
   {
    "action": "html",
    "inner": "More Token Types",
    "line_no": "(\"fa2.py\" 778)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 783)",
    "message": "mint",
    "params": "((\"fa2.py\" 783) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 783) literal (intOrNat 100))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 783) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 783) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x546865205365636f6e6420546f6b656e\"))) (((\"fa2.py\" 783) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b31\"))))) (token_id ((\"fa2.py\" 783) literal (intOrNat 1))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 791)",
    "message": "mint",
    "params": "((\"fa2.py\" 791) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 791) literal (intOrNat 200))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 791) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 791) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e204e756d626572205468726565\"))) (((\"fa2.py\" 791) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b32\"))))) (token_id ((\"fa2.py\" 791) literal (intOrNat 2))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Multi-token Transfer Bob -> Alice",
    "line_no": "(\"fa2.py\" 795)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 796)",
    "message": "transfer",
    "params": "((\"fa2.py\" 796) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 800) record (amount ((\"fa2.py\" 800) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 800) literal (intOrNat 0)))) ((\"fa2.py\" 803) record (amount ((\"fa2.py\" 803) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 803) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 809) record (amount ((\"fa2.py\" 809) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 809) literal (intOrNat 2))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Other Basic Permission Tests",
    "line_no": "(\"fa2.py\" 813)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "Bob cannot transfer Alice's tokens.",
    "line_no": "(\"fa2.py\" 814)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 815)",
    "message": "transfer",
    "params": "((\"fa2.py\" 815) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 819) record (amount ((\"fa2.py\" 819) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 819) literal (intOrNat 0)))) ((\"fa2.py\" 822) record (amount ((\"fa2.py\" 822) literal (intOrNat 1))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 822) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert",
    "valid": "((\"fa2.py\" 815) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Admin can transfer anything.",
    "line_no": "(\"fa2.py\" 826)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 827)",
    "message": "transfer",
    "params": "((\"fa2.py\" 827) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 831) record (amount ((\"fa2.py\" 831) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 831) literal (intOrNat 0)))) ((\"fa2.py\" 834) record (amount ((\"fa2.py\" 834) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 834) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 839) record (amount ((\"fa2.py\" 839) literal (intOrNat 11))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 839) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Even Admin cannot transfer too much.",
    "line_no": "(\"fa2.py\" 843)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 844)",
    "message": "transfer",
    "params": "((\"fa2.py\" 844) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 848) record (amount ((\"fa2.py\" 848) literal (intOrNat 1000))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 848) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator",
    "valid": "((\"fa2.py\" 844) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Consumer Contract for Callback Calls.",
    "line_no": "(\"fa2.py\" 852)",
    "tag": "h3"
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 854) static_id 1) \nstorage ((\"fa2.py\" 689) record (last_sum ((\"fa2.py\" 689) literal (intOrNat 0))) (operator_support ((\"fa2.py\" 689) literal (bool False))))\nstorage_type (())\nentry_points ((receive_balances True None None None True None (\"fa2.py\" 698) (((\"fa2.py\" 699) set_type ((\"fa2.py\" 698) params) (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))) ((\"fa2.py\" 700) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 700) literal (intOrNat 0))) ((\"fa2.py\" 701) for_group \"resp\" ((\"fa2.py\" 698) params) (((\"fa2.py\" 702) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) add ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) attr ((\"fa2.py\" 701) iter \"resp\") \"balance\"))))))) (reinit True None None None False None (\"fa2.py\" 693) (((\"fa2.py\" 694) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 694) literal (intOrNat 0))))))\nflags ()\nprivates ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "((\"fa2.py\" 854) static_id 1)",
    "line_no": "(\"fa2.py\" 854)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Consumer virtual address: ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")",
    "line_no": "(\"fa2.py\" 855)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Balance-of.",
    "line_no": "(\"fa2.py\" 857)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 865)",
    "message": "balance_of",
    "params": "((\"fa2.py\" 859) record (callback ((\"fa2.py\" 860) open_variant ((\"fa2.py\" 860) contract \"receive_balances\" (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))) ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")) \"Some\" \"None\")) (requests ((\"fa2.py\" 859) list ((\"fa2.py\" 866) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 866) literal (intOrNat 0)))) ((\"fa2.py\" 867) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 867) literal (intOrNat 1)))) ((\"fa2.py\" 868) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 868) literal (intOrNat 2)))))))"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 870) eq ((\"fa2.py\" 870) attr ((\"fa2.py\" 854) contract_data ((\"fa2.py\" 854) static_id 1)) \"last_sum\") ((\"fa2.py\" 870) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 870)"
   },
   {
    "action": "html",
    "inner": "Operators",
    "line_no": "(\"fa2.py\" 871)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "This version was compiled with operator support.",
    "line_no": "(\"fa2.py\" 877)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Calling 0 updates should work:",
    "line_no": "(\"fa2.py\" 878)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 879)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 879) list )"
   },
   {
    "action": "html",
    "inner": "Operator Accounts",
    "line_no": "(\"fa2.py\" 880)",
    "tag": "h3"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 884) list ((\"fa2.py\" 881) account_of_seed \"Operator0\") ((\"fa2.py\" 882) account_of_seed \"Operator1\") ((\"fa2.py\" 883) account_of_seed \"Operator2\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 884)",
    "stripStrings": false
   },
   {
    "action": "html",
    "inner": "Admin can change Alice's operator.",
    "line_no": "(\"fa2.py\" 885)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 886)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 886) list ((\"fa2.py\" 887) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 891) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 2)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Operator1 can now transfer Alice's tokens 0 and 2",
    "line_no": "(\"fa2.py\" 896)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 897)",
    "message": "transfer",
    "params": "((\"fa2.py\" 897) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 901) record (amount ((\"fa2.py\" 901) literal (intOrNat 2))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 901) literal (intOrNat 0)))) ((\"fa2.py\" 904) record (amount ((\"fa2.py\" 904) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 904) literal (intOrNat 2))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Bob's tokens",
    "line_no": "(\"fa2.py\" 908)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 909)",
    "message": "transfer",
    "params": "((\"fa2.py\" 909) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 913) record (amount ((\"fa2.py\" 913) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 913) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1",
    "valid": "((\"fa2.py\" 909) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Operator2 cannot transfer Alice's tokens",
    "line_no": "(\"fa2.py\" 917)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 918)",
    "message": "transfer",
    "params": "((\"fa2.py\" 918) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 922) record (amount ((\"fa2.py\" 922) literal (intOrNat 2))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 922) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator2",
    "valid": "((\"fa2.py\" 918) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can remove their operator",
    "line_no": "(\"fa2.py\" 926)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 927)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 927) list ((\"fa2.py\" 928) variant \"remove_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 932) variant \"remove_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Alice's tokens any more",
    "line_no": "(\"fa2.py\" 937)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 938)",
    "message": "transfer",
    "params": "((\"fa2.py\" 938) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 942) record (amount ((\"fa2.py\" 942) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 942) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1",
    "valid": "((\"fa2.py\" 938) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Bob can add Operator0.",
    "line_no": "(\"fa2.py\" 946)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 947)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 947) list ((\"fa2.py\" 948) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 952) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 1)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 can transfer Bob's tokens '0' and '1'",
    "line_no": "(\"fa2.py\" 957)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 958)",
    "message": "transfer",
    "params": "((\"fa2.py\" 958) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 962) record (amount ((\"fa2.py\" 962) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 962) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 967) record (amount ((\"fa2.py\" 967) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 967) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob cannot add Operator0 for Alice's tokens.",
    "line_no": "(\"fa2.py\" 971)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 972)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 972) list ((\"fa2.py\" 973) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert",
    "valid": "((\"fa2.py\" 972) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can also add Operator0 for their tokens 0.",
    "line_no": "(\"fa2.py\" 979)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 980)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 980) list ((\"fa2.py\" 981) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator0 can now transfer Bob's and Alice's 0-tokens.",
    "line_no": "(\"fa2.py\" 987)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 988)",
    "message": "transfer",
    "params": "((\"fa2.py\" 988) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 992) record (amount ((\"fa2.py\" 992) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 992) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 997) record (amount ((\"fa2.py\" 997) literal (intOrNat 1))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 997) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob adds Operator2 as second operator for 0-tokens.",
    "line_no": "(\"fa2.py\" 1001)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1002)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 1002) list ((\"fa2.py\" 1003) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 883) resolve ((\"fa2.py\" 883) attr ((\"fa2.py\" 883) account_of_seed \"Operator2\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 and Operator2 can transfer Bob's 0-tokens.",
    "line_no": "(\"fa2.py\" 1009)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1010)",
    "message": "transfer",
    "params": "((\"fa2.py\" 1010) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 1014) record (amount ((\"fa2.py\" 1014) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 1014) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1018)",
    "message": "transfer",
    "params": "((\"fa2.py\" 1018) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 1022) record (amount ((\"fa2.py\" 1022) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 1022) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator2"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 1026)",
    "tag": "p"
   }
  ],
  "kind": "test"
 },
 {
  "shortname": "FA2-lep",
  "longname": "FA2-lep",
  "scenario": [
   {
    "action": "html",
    "inner": "FA2 Contract Name: FA2-lep",
    "line_no": "(\"fa2.py\" 713)",
    "tag": "h1"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 714)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Accounts",
    "line_no": "(\"fa2.py\" 720)",
    "tag": "h2"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 721) list ((\"fa2.py\" 716) account_of_seed \"Administrator\") ((\"fa2.py\" 717) account_of_seed \"Alice\") ((\"fa2.py\" 718) account_of_seed \"Robert\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 721)",
    "stripStrings": false
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 725) static_id 0) \nstorage ((\"fa2.py\" 370) record (administrator ((\"fa2.py\" 716) resolve ((\"fa2.py\" 716) attr ((\"fa2.py\" 716) account_of_seed \"Administrator\") \"address\"))) (all_tokens ((\"fa2.py\" 299) literal (nat 0))) (ledger ((\"fa2.py\" 361) type_annotation ((\"fa2.py\" 361) big_map ) (bigmap (unknown 32) (record ((balance \"nat\")) None (\"fa2.py\" 221))))) (metadata ((\"fa2.py\" 723) big_map (((\"fa2.py\" 725) literal (string \"\")) ((\"fa2.py\" 723) literal (bytes \"0x68747470733a2f2f6578616d706c652e636f6d\"))))) (operators ((\"fa2.py\" 244) type_annotation ((\"fa2.py\" 244) big_map ) (bigmap (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)) \"unit\"))) (paused ((\"fa2.py\" 360) literal (bool False))) (token_metadata ((\"fa2.py\" 362) type_annotation ((\"fa2.py\" 362) big_map ) (bigmap \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) None (\"fa2.py\" 282))))) (total_supply ((\"fa2.py\" 371) type_annotation ((\"fa2.py\" 371) big_map ) (bigmap \"nat\" \"nat\"))))\nstorage_type (())\nentry_points ((balance_of True None None None True None (\"fa2.py\" 417) (((\"fa2.py\" 419) verify ((\"fa2.py\" 419) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 419) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 420) set_type ((\"fa2.py\" 417) params) (record ((callback (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))))) (requests (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263))))) (Some ((\"requests\") (\"callback\"))) (\"fa2.py\" 272))) ((\"fa2.py\" 439) define_local \"responses\" ((\"fa2.py\" 439) map_function ((\"fa2.py\" 439) attr ((\"fa2.py\" 417) params) \"requests\") ((\"fa2.py\" 439) lambda 0 None False None \"\" (((\"fa2.py\" 423) verify ((\"fa2.py\" 423) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 33)) \"token_id\")) ((\"fa2.py\" 423) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 424) if_block ((\"fa2.py\" 424) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 33)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 33)) \"token_id\") \"nat\"))) (((\"fa2.py\" 426) result ((\"fa2.py\" 427) record (balance ((\"fa2.py\" 425) attr ((\"fa2.py\" 425) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 33)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 33)) \"token_id\") \"nat\"))) \"balance\")) (request ((\"fa2.py\" 428) record (owner ((\"fa2.py\" 429) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 33)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 430) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 33)) \"token_id\") \"nat\")))))))) (else_block (((\"fa2.py\" 433) result ((\"fa2.py\" 434) record (balance ((\"fa2.py\" 434) literal (intOrNat 0))) (request ((\"fa2.py\" 435) record (owner ((\"fa2.py\" 436) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 33)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 437) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 33)) \"token_id\") \"nat\"))))))))))) True) ((\"fa2.py\" 441) set ((\"fa2.py\" 441) operations) ((\"fa2.py\" 441) cons ((\"fa2.py\" 441) transfer ((\"fa2.py\" 441) get_local \"responses\") ((\"fa2.py\" 441) literal (mutez 0)) ((\"fa2.py\" 440) type_annotation ((\"fa2.py\" 440) attr ((\"fa2.py\" 417) params) \"callback\") (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))))) ((\"fa2.py\" 441) operations))))) (mint True None None None True None (\"fa2.py\" 522) (((\"fa2.py\" 523) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 523) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 534) if_block ((\"fa2.py\" 534) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) (((\"fa2.py\" 535) set ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\"))))) (else_block (((\"fa2.py\" 537) set ((\"fa2.py\" 537) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\")))))) ((\"fa2.py\" 538) if_block ((\"fa2.py\" 538) not ((\"fa2.py\" 310) lt ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\"))) (((\"fa2.py\" 304) verify ((\"fa2.py\" 304) eq ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 304) literal (string \"Token-IDs should be consecutive\"))) ((\"fa2.py\" 305) set ((\"fa2.py\" 538) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 305) add ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 305) literal (intOrNat 1)))) ((\"fa2.py\" 540) set ((\"fa2.py\" 540) get_item ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 540) record (token_id ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) (token_info ((\"fa2.py\" 542) attr ((\"fa2.py\" 522) params) \"metadata\")))))) ((\"fa2.py\" 545) set ((\"fa2.py\" 545) get_item ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 545) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\") ((\"fa2.py\" 545) get_item_default ((\"fa2.py\" 545) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 545) literal (intOrNat 0))))))) (set_administrator True None None None True None (\"fa2.py\" 501) (((\"fa2.py\" 502) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 502) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 503) set ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\") ((\"fa2.py\" 501) params)))) (set_metadata True None None None True None (\"fa2.py\" 516) (((\"fa2.py\" 517) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 517) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 518) set ((\"fa2.py\" 518) get_item ((\"fa2.py\" 518) attr ((\"fa2.py\" 725) data) \"metadata\") ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"k\")) ((\"fa2.py\" 725) attr ((\"fa2.py\" 516) params) \"v\")))) (set_pause True None None None True None (\"fa2.py\" 510) (((\"fa2.py\" 511) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 511) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 512) set ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\") ((\"fa2.py\" 510) params)))) (transfer True None None None True None (\"fa2.py\" 375) (((\"fa2.py\" 376) verify ((\"fa2.py\" 376) not ((\"fa2.py\" 507) attr ((\"fa2.py\" 725) data) \"paused\")) ((\"fa2.py\" 376) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 377) set_type ((\"fa2.py\" 375) params) (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169)))) ((\"fa2.py\" 378) for_group \"transfer\" ((\"fa2.py\" 375) params) (((\"fa2.py\" 380) for_group \"tx\" ((\"fa2.py\" 380) attr ((\"fa2.py\" 378) iter \"transfer\") \"txs\") (((\"fa2.py\" 395) verify ((\"fa2.py\" 389) or ((\"fa2.py\" 384) or ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\")) ((\"fa2.py\" 385) eq ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") ((\"\" -1) sender))) ((\"fa2.py\" 259) contains ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"\" -1) sender)) (owner ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\")) (token_id ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))) ((\"fa2.py\" 395) literal (string \"FA2_NOT_OPERATOR\"))) ((\"fa2.py\" 396) verify ((\"fa2.py\" 397) contains ((\"fa2.py\" 423) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\")) ((\"fa2.py\" 396) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 401) if_block ((\"fa2.py\" 401) gt ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\") ((\"fa2.py\" 401) literal (intOrNat 0))) (((\"fa2.py\" 403) verify ((\"fa2.py\" 404) ge ((\"fa2.py\" 404) attr ((\"fa2.py\" 404) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")) ((\"fa2.py\" 403) literal (string \"FA2_INSUFFICIENT_BALANCE\"))) ((\"fa2.py\" 407) set ((\"fa2.py\" 407) attr ((\"fa2.py\" 407) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 407) open_variant ((\"fa2.py\" 407) is_nat ((\"fa2.py\" 408) sub ((\"fa2.py\" 408) attr ((\"fa2.py\" 408) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))) \"Some\" \"None\")) ((\"fa2.py\" 409) if_block ((\"fa2.py\" 409) contains ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) (((\"fa2.py\" 410) set ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 410) add ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))))) (else_block (((\"fa2.py\" 412) set ((\"fa2.py\" 412) get_item ((\"fa2.py\" 424) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")))))))) (else_block ()))))))) (update_operators True None None None True None (\"fa2.py\" 457) (((\"fa2.py\" 458) set_type ((\"fa2.py\" 457) params) (list (variant ((add_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189))) (remove_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) None (\"fa2.py\" 459)))) ((\"fa2.py\" 465) for_group \"update\" ((\"fa2.py\" 457) params) (((\"fa2.py\" 466) match_cases ((\"fa2.py\" 465) iter \"update\") \"match_fa2_466\" (((\"fa2.py\" 467) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"add_operator\" \"add_operator\" (((\"fa2.py\" 468) verify ((\"fa2.py\" 469) or ((\"fa2.py\" 469) eq ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 468) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 255) set ((\"fa2.py\" 255) get_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 474) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"operator\")) (owner ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\")) (token_id ((\"fa2.py\" 475) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))) ((\"\" -1) literal (unit))))) ((\"fa2.py\" 476) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"remove_operator\" \"remove_operator\" (((\"fa2.py\" 477) verify ((\"fa2.py\" 478) or ((\"fa2.py\" 478) eq ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"fa2.py\" 725) data) \"administrator\"))) ((\"fa2.py\" 477) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 257) del_item ((\"fa2.py\" 389) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 483) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"operator\")) (owner ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\")) (token_id ((\"fa2.py\" 484) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))))))))))))\nflags ((lazy-entry-points) (initial-cast) (exceptions default-line))\nprivates ()\nviews ((offchain all_tokens False (\"fa2.py\" 586) True \"\\n            This view is specified (but optional) in the standard.\\n\\n            This contract is built with assume_consecutive_token_ids =\\n            True, so we return a list constructed from the number of tokens.\\n            \" (((\"fa2.py\" 588) result ((\"fa2.py\" 588) range ((\"fa2.py\" 588) literal (intOrNat 0)) ((\"fa2.py\" 588) attr ((\"fa2.py\" 725) data) \"all_tokens\") ((\"fa2.py\" 588) literal (intOrNat 1)))))) (offchain count_tokens False (\"fa2.py\" 574) True \"Get how many tokens are in this FA2 contract.\\n        \" (((\"fa2.py\" 577) result ((\"fa2.py\" 577) attr ((\"fa2.py\" 725) data) \"all_tokens\")))) (offchain does_token_exist True (\"fa2.py\" 580) True \"Ask whether a token ID is exists.\" (((\"fa2.py\" 582) set_type ((\"fa2.py\" 580) params) \"nat\") ((\"fa2.py\" 583) result ((\"fa2.py\" 583) contains ((\"fa2.py\" 583) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 580) params))))) (offchain get_balance True (\"fa2.py\" 444) True \"This is the `get_balance` view defined in TZIP-12.\" (((\"fa2.py\" 446) set_type ((\"fa2.py\" 444) params) (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 447))) ((\"fa2.py\" 452) verify ((\"fa2.py\" 452) contains ((\"fa2.py\" 452) attr ((\"fa2.py\" 725) data) \"token_metadata\") ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\")) ((\"fa2.py\" 452) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 453) result ((\"fa2.py\" 453) attr ((\"fa2.py\" 453) get_item ((\"fa2.py\" 453) attr ((\"fa2.py\" 725) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\") \"nat\"))) \"balance\")))) (offchain is_operator True (\"fa2.py\" 601) True \"\" (((\"fa2.py\" 602) set_type ((\"fa2.py\" 601) params) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 603))) ((\"fa2.py\" 607) result ((\"fa2.py\" 259) contains ((\"fa2.py\" 608) attr ((\"fa2.py\" 725) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 610) attr ((\"fa2.py\" 601) params) \"operator\")) (owner ((\"fa2.py\" 609) attr ((\"fa2.py\" 601) params) \"owner\")) (token_id ((\"fa2.py\" 611) attr ((\"fa2.py\" 601) params) \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))))) (offchain total_supply True (\"fa2.py\" 593) True \"\" (((\"fa2.py\" 595) result ((\"fa2.py\" 595) get_item ((\"fa2.py\" 595) attr ((\"fa2.py\" 725) data) \"total_supply\") ((\"fa2.py\" 593) params))))))\nentry_points_layout ()\ninitial_metadata ((metadata_base (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"version\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-lep\")))) (elem ((\"fa2.py\" 674) literal (string \"description\")) (meta_expr ((\"fa2.py\" 674) literal (string \"This is a didactic reference implementation of FA2, a.k.a. TZIP-012, using SmartPy.\n\nThis particular contract uses the configuration named: FA2-lep.\")))) (elem ((\"fa2.py\" 674) literal (string \"interfaces\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-012\"))) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-016\"))))) (elem ((\"fa2.py\" 674) literal (string \"authors\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"Seb Mondet <https://seb.mondet.org>\"))))) (elem ((\"fa2.py\" 674) literal (string \"homepage\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy\")))) (elem ((\"fa2.py\" 674) literal (string \"views\")) (meta_list (\"fa2.py\" 674) (meta_view \"get_balance\" (\"fa2.py\" 444)) (meta_view \"does_token_exist\" (\"fa2.py\" 580)) (meta_view \"count_tokens\" (\"fa2.py\" 574)) (meta_view \"all_tokens\" (\"fa2.py\" 586)) (meta_view \"is_operator\" (\"fa2.py\" 601)) (meta_view \"total_supply\" (\"fa2.py\" 593)))) (elem ((\"fa2.py\" 674) literal (string \"source\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"tools\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"SmartPy\"))))) (elem ((\"fa2.py\" 674) literal (string \"location\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy.git\")))))) (elem ((\"fa2.py\" 674) literal (string \"permissions\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"operator\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-or-operator-transfer\")))) (elem ((\"fa2.py\" 674) literal (string \"receiver\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))) (elem ((\"fa2.py\" 674) literal (string \"sender\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))))) (elem ((\"fa2.py\" 674) literal (string \"fa2-smartpy\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"configuration\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"add_mutez_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"allow_self_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"assume_consecutive_token_ids\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"force_layouts\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"lazy_entry_points\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"name\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-lep\")))) (elem ((\"fa2.py\" 674) literal (string \"non_fungible\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"readable\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"single_asset\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"store_total_supply\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"support_operator\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"use_token_metadata_offchain_view\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))))))))))\nbalance ())",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 725)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Initial Minting",
    "line_no": "(\"fa2.py\" 729)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "The administrator mints 100 token-0's to Alice.",
    "line_no": "(\"fa2.py\" 730)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 735)",
    "message": "mint",
    "params": "((\"fa2.py\" 735) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 735) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 735) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 735) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 735) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 735) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 740)",
    "message": "mint",
    "params": "((\"fa2.py\" 740) record (address ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (amount ((\"fa2.py\" 740) literal (intOrNat 50))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 740) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x32\"))) (((\"fa2.py\" 740) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e205a65726f\"))) (((\"fa2.py\" 740) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b30\"))))) (token_id ((\"fa2.py\" 740) literal (intOrNat 0))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Transfers Alice -> Bob",
    "line_no": "(\"fa2.py\" 744)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 745)",
    "message": "transfer",
    "params": "((\"fa2.py\" 745) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 749) record (amount ((\"fa2.py\" 749) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 749) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 755) eq ((\"fa2.py\" 755) attr ((\"fa2.py\" 755) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 755) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 754)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 757) eq ((\"fa2.py\" 757) attr ((\"fa2.py\" 757) get_item ((\"fa2.py\" 755) attr ((\"fa2.py\" 745) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 757) literal (intOrNat 10)))",
    "line_no": "(\"fa2.py\" 756)"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 758)",
    "message": "transfer",
    "params": "((\"fa2.py\" 758) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 762) record (amount ((\"fa2.py\" 762) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 762) literal (intOrNat 0)))) ((\"fa2.py\" 765) record (amount ((\"fa2.py\" 765) literal (intOrNat 11))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 765) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Alice"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 771) eq ((\"fa2.py\" 771) attr ((\"fa2.py\" 771) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 771) literal (intOrNat 69)))",
    "line_no": "(\"fa2.py\" 770)"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 774) eq ((\"fa2.py\" 774) attr ((\"fa2.py\" 774) get_item ((\"fa2.py\" 771) attr ((\"fa2.py\" 758) contract_data ((\"fa2.py\" 725) static_id 0)) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\")) \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 206) literal (intOrNat 0)) \"nat\"))) \"balance\") ((\"fa2.py\" 774) literal (intOrNat 31)))",
    "line_no": "(\"fa2.py\" 773)"
   },
   {
    "action": "html",
    "inner": "More Token Types",
    "line_no": "(\"fa2.py\" 778)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 783)",
    "message": "mint",
    "params": "((\"fa2.py\" 783) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 783) literal (intOrNat 100))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 783) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 783) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x546865205365636f6e6420546f6b656e\"))) (((\"fa2.py\" 783) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b31\"))))) (token_id ((\"fa2.py\" 783) literal (intOrNat 1))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 791)",
    "message": "mint",
    "params": "((\"fa2.py\" 791) record (address ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (amount ((\"fa2.py\" 791) literal (intOrNat 200))) (metadata ((\"fa2.py\" 563) map (((\"fa2.py\" 791) literal (string \"decimals\")) ((\"fa2.py\" 565) literal (bytes \"0x30\"))) (((\"fa2.py\" 791) literal (string \"name\")) ((\"fa2.py\" 566) literal (bytes \"0x54686520546f6b656e204e756d626572205468726565\"))) (((\"fa2.py\" 791) literal (string \"symbol\")) ((\"fa2.py\" 567) literal (bytes \"0x544b32\"))))) (token_id ((\"fa2.py\" 791) literal (intOrNat 2))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Multi-token Transfer Bob -> Alice",
    "line_no": "(\"fa2.py\" 795)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 796)",
    "message": "transfer",
    "params": "((\"fa2.py\" 796) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 800) record (amount ((\"fa2.py\" 800) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 800) literal (intOrNat 0)))) ((\"fa2.py\" 803) record (amount ((\"fa2.py\" 803) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 803) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 809) record (amount ((\"fa2.py\" 809) literal (intOrNat 10))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 809) literal (intOrNat 2))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Other Basic Permission Tests",
    "line_no": "(\"fa2.py\" 813)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "Bob cannot transfer Alice's tokens.",
    "line_no": "(\"fa2.py\" 814)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 815)",
    "message": "transfer",
    "params": "((\"fa2.py\" 815) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 819) record (amount ((\"fa2.py\" 819) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 819) literal (intOrNat 0)))) ((\"fa2.py\" 822) record (amount ((\"fa2.py\" 822) literal (intOrNat 1))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 822) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Robert",
    "valid": "((\"fa2.py\" 815) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Admin can transfer anything.",
    "line_no": "(\"fa2.py\" 826)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 827)",
    "message": "transfer",
    "params": "((\"fa2.py\" 827) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 831) record (amount ((\"fa2.py\" 831) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 831) literal (intOrNat 0)))) ((\"fa2.py\" 834) record (amount ((\"fa2.py\" 834) literal (intOrNat 10))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 834) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 839) record (amount ((\"fa2.py\" 839) literal (intOrNat 11))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 839) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Even Admin cannot transfer too much.",
    "line_no": "(\"fa2.py\" 843)",
    "tag": "h3"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 844)",
    "message": "transfer",
    "params": "((\"fa2.py\" 844) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 848) record (amount ((\"fa2.py\" 848) literal (intOrNat 1000))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 848) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Administrator",
    "valid": "((\"fa2.py\" 844) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Consumer Contract for Callback Calls.",
    "line_no": "(\"fa2.py\" 852)",
    "tag": "h3"
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"fa2.py\" 854) static_id 1) \nstorage ((\"fa2.py\" 689) record (last_sum ((\"fa2.py\" 689) literal (intOrNat 0))) (operator_support ((\"fa2.py\" 689) literal (bool False))))\nstorage_type (())\nentry_points ((receive_balances True None None None True None (\"fa2.py\" 698) (((\"fa2.py\" 699) set_type ((\"fa2.py\" 698) params) (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))) ((\"fa2.py\" 700) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 700) literal (intOrNat 0))) ((\"fa2.py\" 701) for_group \"resp\" ((\"fa2.py\" 698) params) (((\"fa2.py\" 702) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) add ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 702) attr ((\"fa2.py\" 701) iter \"resp\") \"balance\"))))))) (reinit True None None None False None (\"fa2.py\" 693) (((\"fa2.py\" 694) set ((\"fa2.py\" 700) attr ((\"fa2.py\" 854) data) \"last_sum\") ((\"fa2.py\" 694) literal (intOrNat 0))))))\nflags ()\nprivates ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "((\"fa2.py\" 854) static_id 1)",
    "line_no": "(\"fa2.py\" 854)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Consumer virtual address: ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")",
    "line_no": "(\"fa2.py\" 855)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Balance-of.",
    "line_no": "(\"fa2.py\" 857)",
    "tag": "h2"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 865)",
    "message": "balance_of",
    "params": "((\"fa2.py\" 859) record (callback ((\"fa2.py\" 860) open_variant ((\"fa2.py\" 860) contract \"receive_balances\" (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))) ((\"fa2.py\" 854) contract_address ((\"fa2.py\" 854) static_id 1) \"\")) \"Some\" \"None\")) (requests ((\"fa2.py\" 859) list ((\"fa2.py\" 866) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 866) literal (intOrNat 0)))) ((\"fa2.py\" 867) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 867) literal (intOrNat 1)))) ((\"fa2.py\" 868) record (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 868) literal (intOrNat 2)))))))"
   },
   {
    "action": "verify",
    "condition": "((\"fa2.py\" 870) eq ((\"fa2.py\" 870) attr ((\"fa2.py\" 854) contract_data ((\"fa2.py\" 854) static_id 1)) \"last_sum\") ((\"fa2.py\" 870) literal (intOrNat 90)))",
    "line_no": "(\"fa2.py\" 870)"
   },
   {
    "action": "html",
    "inner": "Operators",
    "line_no": "(\"fa2.py\" 871)",
    "tag": "h2"
   },
   {
    "action": "html",
    "inner": "This version was compiled with operator support.",
    "line_no": "(\"fa2.py\" 877)",
    "tag": "p"
   },
   {
    "action": "html",
    "inner": "Calling 0 updates should work:",
    "line_no": "(\"fa2.py\" 878)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 879)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 879) list )"
   },
   {
    "action": "html",
    "inner": "Operator Accounts",
    "line_no": "(\"fa2.py\" 880)",
    "tag": "h3"
   },
   {
    "action": "show",
    "compile": false,
    "expression": "((\"fa2.py\" 884) list ((\"fa2.py\" 881) account_of_seed \"Operator0\") ((\"fa2.py\" 882) account_of_seed \"Operator1\") ((\"fa2.py\" 883) account_of_seed \"Operator2\"))",
    "html": true,
    "line_no": "(\"fa2.py\" 884)",
    "stripStrings": false
   },
   {
    "action": "html",
    "inner": "Admin can change Alice's operator.",
    "line_no": "(\"fa2.py\" 885)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 886)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 886) list ((\"fa2.py\" 887) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 891) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 2)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Administrator"
   },
   {
    "action": "html",
    "inner": "Operator1 can now transfer Alice's tokens 0 and 2",
    "line_no": "(\"fa2.py\" 896)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 897)",
    "message": "transfer",
    "params": "((\"fa2.py\" 897) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 901) record (amount ((\"fa2.py\" 901) literal (intOrNat 2))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 901) literal (intOrNat 0)))) ((\"fa2.py\" 904) record (amount ((\"fa2.py\" 904) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 904) literal (intOrNat 2))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Bob's tokens",
    "line_no": "(\"fa2.py\" 908)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 909)",
    "message": "transfer",
    "params": "((\"fa2.py\" 909) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 913) record (amount ((\"fa2.py\" 913) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 913) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1",
    "valid": "((\"fa2.py\" 909) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Operator2 cannot transfer Alice's tokens",
    "line_no": "(\"fa2.py\" 917)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 918)",
    "message": "transfer",
    "params": "((\"fa2.py\" 918) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 922) record (amount ((\"fa2.py\" 922) literal (intOrNat 2))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 922) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator2",
    "valid": "((\"fa2.py\" 918) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can remove their operator",
    "line_no": "(\"fa2.py\" 926)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 927)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 927) list ((\"fa2.py\" 928) variant \"remove_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 932) variant \"remove_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator1 cannot transfer Alice's tokens any more",
    "line_no": "(\"fa2.py\" 937)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 938)",
    "message": "transfer",
    "params": "((\"fa2.py\" 938) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 942) record (amount ((\"fa2.py\" 942) literal (intOrNat 2))) (to_ ((\"fa2.py\" 882) resolve ((\"fa2.py\" 882) attr ((\"fa2.py\" 882) account_of_seed \"Operator1\") \"address\"))) (token_id ((\"fa2.py\" 942) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator1",
    "valid": "((\"fa2.py\" 938) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Bob can add Operator0.",
    "line_no": "(\"fa2.py\" 946)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 947)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 947) list ((\"fa2.py\" 948) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) ((\"fa2.py\" 952) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 1)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 can transfer Bob's tokens '0' and '1'",
    "line_no": "(\"fa2.py\" 957)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 958)",
    "message": "transfer",
    "params": "((\"fa2.py\" 958) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 962) record (amount ((\"fa2.py\" 962) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 962) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 967) record (amount ((\"fa2.py\" 967) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 967) literal (intOrNat 1))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob cannot add Operator0 for Alice's tokens.",
    "line_no": "(\"fa2.py\" 971)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 972)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 972) list ((\"fa2.py\" 973) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert",
    "valid": "((\"fa2.py\" 972) literal (bool False))"
   },
   {
    "action": "html",
    "inner": "Alice can also add Operator0 for their tokens 0.",
    "line_no": "(\"fa2.py\" 979)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 980)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 980) list ((\"fa2.py\" 981) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 881) resolve ((\"fa2.py\" 881) attr ((\"fa2.py\" 881) account_of_seed \"Operator0\") \"address\"))) (owner ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Alice"
   },
   {
    "action": "html",
    "inner": "Operator0 can now transfer Bob's and Alice's 0-tokens.",
    "line_no": "(\"fa2.py\" 987)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 988)",
    "message": "transfer",
    "params": "((\"fa2.py\" 988) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 992) record (amount ((\"fa2.py\" 992) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 992) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))) ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 997) record (amount ((\"fa2.py\" 997) literal (intOrNat 1))) (to_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 997) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "html",
    "inner": "Bob adds Operator2 as second operator for 0-tokens.",
    "line_no": "(\"fa2.py\" 1001)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1002)",
    "message": "update_operators",
    "params": "((\"fa2.py\" 1002) list ((\"fa2.py\" 1003) variant \"add_operator\" ((\"fa2.py\" 195) type_annotation ((\"fa2.py\" 192) record (operator ((\"fa2.py\" 883) resolve ((\"fa2.py\" 883) attr ((\"fa2.py\" 883) account_of_seed \"Operator2\") \"address\"))) (owner ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (token_id ((\"fa2.py\" 192) literal (intOrNat 0)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))))",
    "sender": "seed:Robert"
   },
   {
    "action": "html",
    "inner": "Operator0 and Operator2 can transfer Bob's 0-tokens.",
    "line_no": "(\"fa2.py\" 1009)",
    "tag": "p"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1010)",
    "message": "transfer",
    "params": "((\"fa2.py\" 1010) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 1014) record (amount ((\"fa2.py\" 1014) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 1014) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator0"
   },
   {
    "action": "message",
    "id": "((\"fa2.py\" 725) static_id 0)",
    "line_no": "(\"fa2.py\" 1018)",
    "message": "transfer",
    "params": "((\"fa2.py\" 1018) list ((\"fa2.py\" 177) type_annotation ((\"fa2.py\" 176) record (from_ ((\"fa2.py\" 718) resolve ((\"fa2.py\" 718) attr ((\"fa2.py\" 718) account_of_seed \"Robert\") \"address\"))) (txs ((\"fa2.py\" 176) list ((\"fa2.py\" 1022) record (amount ((\"fa2.py\" 1022) literal (intOrNat 1))) (to_ ((\"fa2.py\" 717) resolve ((\"fa2.py\" 717) attr ((\"fa2.py\" 717) account_of_seed \"Alice\") \"address\"))) (token_id ((\"fa2.py\" 1022) literal (intOrNat 0))))))) (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169))))",
    "sender": "seed:Operator2"
   },
   {
    "action": "html",
    "inner": "[[TABLEOFCONTENTS]]",
    "line_no": "(\"fa2.py\" 1026)",
    "tag": "p"
   }
  ],
  "kind": "test"
 },
 {
  "shortname": "FA2_comp",
  "longname": "FA2_comp",
  "scenario": [
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id ((\"\" -1) static_id 0) \nstorage ((\"fa2.py\" 360) record (administrator ((\"fa2.py\" 1089) literal (address \"tz1M9CMEtsXm3QxA7FmMU2Qh7xzsuGXVbcDr\"))) (all_tokens ((\"fa2.py\" 299) literal (nat 0))) (ledger ((\"fa2.py\" 361) type_annotation ((\"fa2.py\" 361) big_map ) (bigmap (unknown 1) (record ((balance \"nat\")) None (\"fa2.py\" 221))))) (metadata ((\"fa2.py\" 1088) big_map (((\"\" -1) literal (string \"\")) ((\"fa2.py\" 1088) literal (bytes \"0x68747470733a2f2f6578616d706c652e636f6d\"))))) (operators ((\"fa2.py\" 244) type_annotation ((\"fa2.py\" 244) big_map ) (bigmap (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)) \"unit\"))) (paused ((\"fa2.py\" 360) literal (bool False))) (token_metadata ((\"fa2.py\" 362) type_annotation ((\"fa2.py\" 362) big_map ) (bigmap \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) None (\"fa2.py\" 282))))))\nstorage_type (())\nentry_points ((balance_of True None None None True None (\"fa2.py\" 417) (((\"fa2.py\" 419) verify ((\"fa2.py\" 419) not ((\"fa2.py\" 507) attr ((\"\" -1) data) \"paused\")) ((\"fa2.py\" 419) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 420) set_type ((\"fa2.py\" 417) params) (record ((callback (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268))))) (requests (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263))))) (Some ((\"requests\") (\"callback\"))) (\"fa2.py\" 272))) ((\"fa2.py\" 439) define_local \"responses\" ((\"fa2.py\" 439) map_function ((\"fa2.py\" 439) attr ((\"fa2.py\" 417) params) \"requests\") ((\"fa2.py\" 439) lambda 0 None False None \"\" (((\"fa2.py\" 423) verify ((\"fa2.py\" 423) contains ((\"fa2.py\" 423) attr ((\"\" -1) data) \"token_metadata\") ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 35)) \"token_id\")) ((\"fa2.py\" 423) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 424) if_block ((\"fa2.py\" 424) contains ((\"fa2.py\" 424) attr ((\"\" -1) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 35)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 35)) \"token_id\") \"nat\"))) (((\"fa2.py\" 426) result ((\"fa2.py\" 427) record (balance ((\"fa2.py\" 425) attr ((\"fa2.py\" 425) get_item ((\"fa2.py\" 424) attr ((\"\" -1) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 35)) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 35)) \"token_id\") \"nat\"))) \"balance\")) (request ((\"fa2.py\" 428) record (owner ((\"fa2.py\" 429) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 35)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 430) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 35)) \"token_id\") \"nat\")))))))) (else_block (((\"fa2.py\" 433) result ((\"fa2.py\" 434) record (balance ((\"fa2.py\" 434) literal (intOrNat 0))) (request ((\"fa2.py\" 435) record (owner ((\"fa2.py\" 436) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 35)) \"owner\") \"address\")) (token_id ((\"fa2.py\" 437) type_annotation ((\"fa2.py\" 422) attr ((\"fa2.py\" 439) lambda_params 0 \"\" (unknown 35)) \"token_id\") \"nat\"))))))))))) True) ((\"fa2.py\" 441) set ((\"fa2.py\" 441) operations) ((\"fa2.py\" 441) cons ((\"fa2.py\" 441) transfer ((\"fa2.py\" 441) get_local \"responses\") ((\"fa2.py\" 441) literal (mutez 0)) ((\"fa2.py\" 440) type_annotation ((\"fa2.py\" 440) attr ((\"fa2.py\" 417) params) \"callback\") (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 263)))) (Some ((\"request\") (\"balance\"))) (\"fa2.py\" 268)))))) ((\"fa2.py\" 441) operations))))) (mint True None None None True None (\"fa2.py\" 522) (((\"fa2.py\" 523) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"\" -1) data) \"administrator\")) ((\"fa2.py\" 523) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 534) if_block ((\"fa2.py\" 534) contains ((\"fa2.py\" 424) attr ((\"\" -1) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) (((\"fa2.py\" 535) set ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"\" -1) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) add ((\"fa2.py\" 535) attr ((\"fa2.py\" 535) get_item ((\"fa2.py\" 424) attr ((\"\" -1) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\"))))) (else_block (((\"fa2.py\" 537) set ((\"fa2.py\" 537) get_item ((\"fa2.py\" 424) attr ((\"\" -1) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"address\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 535) attr ((\"fa2.py\" 522) params) \"amount\")))))) ((\"fa2.py\" 538) if_block ((\"fa2.py\" 538) not ((\"fa2.py\" 310) lt ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 538) attr ((\"\" -1) data) \"all_tokens\"))) (((\"fa2.py\" 304) verify ((\"fa2.py\" 304) eq ((\"fa2.py\" 538) attr ((\"\" -1) data) \"all_tokens\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 304) literal (string \"Token-IDs should be consecutive\"))) ((\"fa2.py\" 305) set ((\"fa2.py\" 538) attr ((\"\" -1) data) \"all_tokens\") ((\"fa2.py\" 305) add ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\") ((\"fa2.py\" 305) literal (intOrNat 1)))) ((\"fa2.py\" 540) set ((\"fa2.py\" 540) get_item ((\"fa2.py\" 423) attr ((\"\" -1) data) \"token_metadata\") ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) ((\"fa2.py\" 540) record (token_id ((\"fa2.py\" 533) attr ((\"fa2.py\" 522) params) \"token_id\")) (token_info ((\"fa2.py\" 542) attr ((\"fa2.py\" 522) params) \"metadata\")))))))) (set_administrator True None None None True None (\"fa2.py\" 501) (((\"fa2.py\" 502) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"\" -1) data) \"administrator\")) ((\"fa2.py\" 502) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 503) set ((\"fa2.py\" 498) attr ((\"\" -1) data) \"administrator\") ((\"fa2.py\" 501) params)))) (set_metadata True None None None True None (\"fa2.py\" 516) (((\"fa2.py\" 517) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"\" -1) data) \"administrator\")) ((\"fa2.py\" 517) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 518) set ((\"fa2.py\" 518) get_item ((\"fa2.py\" 518) attr ((\"\" -1) data) \"metadata\") ((\"\" -1) attr ((\"fa2.py\" 516) params) \"k\")) ((\"\" -1) attr ((\"fa2.py\" 516) params) \"v\")))) (set_pause True None None None True None (\"fa2.py\" 510) (((\"fa2.py\" 511) verify ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"\" -1) data) \"administrator\")) ((\"fa2.py\" 511) literal (string \"FA2_NOT_ADMIN\"))) ((\"fa2.py\" 512) set ((\"fa2.py\" 507) attr ((\"\" -1) data) \"paused\") ((\"fa2.py\" 510) params)))) (transfer True None None None True None (\"fa2.py\" 375) (((\"fa2.py\" 376) verify ((\"fa2.py\" 376) not ((\"fa2.py\" 507) attr ((\"\" -1) data) \"paused\")) ((\"fa2.py\" 376) literal (string \"FA2_PAUSED\"))) ((\"fa2.py\" 377) set_type ((\"fa2.py\" 375) params) (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"fa2.py\" 166))))) (Some ((\"from_\") (\"txs\"))) (\"fa2.py\" 169)))) ((\"fa2.py\" 378) for_group \"transfer\" ((\"fa2.py\" 375) params) (((\"fa2.py\" 380) for_group \"tx\" ((\"fa2.py\" 380) attr ((\"fa2.py\" 378) iter \"transfer\") \"txs\") (((\"fa2.py\" 395) verify ((\"fa2.py\" 389) or ((\"fa2.py\" 384) or ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"\" -1) data) \"administrator\")) ((\"fa2.py\" 385) eq ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") ((\"\" -1) sender))) ((\"fa2.py\" 259) contains ((\"fa2.py\" 389) attr ((\"\" -1) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"\" -1) sender)) (owner ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\")) (token_id ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))) ((\"fa2.py\" 395) literal (string \"FA2_NOT_OPERATOR\"))) ((\"fa2.py\" 396) verify ((\"fa2.py\" 397) contains ((\"fa2.py\" 423) attr ((\"\" -1) data) \"token_metadata\") ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\")) ((\"fa2.py\" 396) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 401) if_block ((\"fa2.py\" 401) gt ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\") ((\"fa2.py\" 401) literal (intOrNat 0))) (((\"fa2.py\" 403) verify ((\"fa2.py\" 404) ge ((\"fa2.py\" 404) attr ((\"fa2.py\" 404) get_item ((\"fa2.py\" 424) attr ((\"\" -1) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")) ((\"fa2.py\" 403) literal (string \"FA2_INSUFFICIENT_BALANCE\"))) ((\"fa2.py\" 407) set ((\"fa2.py\" 407) attr ((\"fa2.py\" 407) get_item ((\"fa2.py\" 424) attr ((\"\" -1) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 407) open_variant ((\"fa2.py\" 407) is_nat ((\"fa2.py\" 408) sub ((\"fa2.py\" 408) attr ((\"fa2.py\" 408) get_item ((\"fa2.py\" 424) attr ((\"\" -1) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 379) attr ((\"fa2.py\" 378) iter \"transfer\") \"from_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))) \"Some\" \"None\")) ((\"fa2.py\" 409) if_block ((\"fa2.py\" 409) contains ((\"fa2.py\" 424) attr ((\"\" -1) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) (((\"fa2.py\" 410) set ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"\" -1) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 410) add ((\"fa2.py\" 410) attr ((\"fa2.py\" 410) get_item ((\"fa2.py\" 424) attr ((\"\" -1) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) \"balance\") ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\"))))) (else_block (((\"fa2.py\" 412) set ((\"fa2.py\" 412) get_item ((\"fa2.py\" 424) attr ((\"\" -1) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 406) attr ((\"fa2.py\" 380) iter \"tx\") \"to_\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 392) attr ((\"fa2.py\" 380) iter \"tx\") \"token_id\") \"nat\"))) ((\"fa2.py\" 223) record (balance ((\"fa2.py\" 401) attr ((\"fa2.py\" 380) iter \"tx\") \"amount\")))))))) (else_block ()))))))) (update_operators True None None None True None (\"fa2.py\" 457) (((\"fa2.py\" 458) set_type ((\"fa2.py\" 457) params) (list (variant ((add_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189))) (remove_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 189)))) None (\"fa2.py\" 459)))) ((\"fa2.py\" 465) for_group \"update\" ((\"fa2.py\" 457) params) (((\"fa2.py\" 466) match_cases ((\"fa2.py\" 465) iter \"update\") \"match_fa2_466\" (((\"fa2.py\" 467) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"add_operator\" \"add_operator\" (((\"fa2.py\" 468) verify ((\"fa2.py\" 469) or ((\"fa2.py\" 469) eq ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"\" -1) data) \"administrator\"))) ((\"fa2.py\" 468) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 255) set ((\"fa2.py\" 255) get_item ((\"fa2.py\" 389) attr ((\"\" -1) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 474) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"operator\")) (owner ((\"fa2.py\" 469) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"owner\")) (token_id ((\"fa2.py\" 475) attr ((\"fa2.py\" 467) variant_arg \"add_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))) ((\"\" -1) literal (unit))))) ((\"fa2.py\" 476) match ((\"fa2.py\" 466) cases_arg \"match_fa2_466\") \"remove_operator\" \"remove_operator\" (((\"fa2.py\" 477) verify ((\"fa2.py\" 478) or ((\"fa2.py\" 478) eq ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\") ((\"\" -1) sender)) ((\"fa2.py\" 498) eq ((\"\" -1) sender) ((\"fa2.py\" 498) attr ((\"\" -1) data) \"administrator\"))) ((\"fa2.py\" 477) literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\"))) ((\"fa2.py\" 257) del_item ((\"fa2.py\" 389) attr ((\"\" -1) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 483) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"operator\")) (owner ((\"fa2.py\" 478) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"owner\")) (token_id ((\"fa2.py\" 484) attr ((\"fa2.py\" 476) variant_arg \"remove_operator\") \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234)))))))))))))\nflags ((initial-cast) (exceptions default-line))\nprivates ()\nviews ((offchain all_tokens False (\"fa2.py\" 586) True \"\\n            This view is specified (but optional) in the standard.\\n\\n            This contract is built with assume_consecutive_token_ids =\\n            True, so we return a list constructed from the number of tokens.\\n            \" (((\"fa2.py\" 588) result ((\"fa2.py\" 588) range ((\"fa2.py\" 588) literal (intOrNat 0)) ((\"fa2.py\" 588) attr ((\"\" -1) data) \"all_tokens\") ((\"fa2.py\" 588) literal (intOrNat 1)))))) (offchain count_tokens False (\"fa2.py\" 574) True \"Get how many tokens are in this FA2 contract.\\n        \" (((\"fa2.py\" 577) result ((\"fa2.py\" 577) attr ((\"\" -1) data) \"all_tokens\")))) (offchain does_token_exist True (\"fa2.py\" 580) True \"Ask whether a token ID is exists.\" (((\"fa2.py\" 582) set_type ((\"fa2.py\" 580) params) \"nat\") ((\"fa2.py\" 583) result ((\"fa2.py\" 583) contains ((\"fa2.py\" 583) attr ((\"\" -1) data) \"token_metadata\") ((\"fa2.py\" 580) params))))) (offchain get_balance True (\"fa2.py\" 444) True \"This is the `get_balance` view defined in TZIP-12.\" (((\"fa2.py\" 446) set_type ((\"fa2.py\" 444) params) (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"fa2.py\" 447))) ((\"fa2.py\" 452) verify ((\"fa2.py\" 452) contains ((\"fa2.py\" 452) attr ((\"\" -1) data) \"token_metadata\") ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\")) ((\"fa2.py\" 452) literal (string \"FA2_TOKEN_UNDEFINED\"))) ((\"fa2.py\" 453) result ((\"fa2.py\" 453) attr ((\"fa2.py\" 453) get_item ((\"fa2.py\" 453) attr ((\"\" -1) data) \"ledger\") ((\"fa2.py\" 210) tuple ((\"fa2.py\" 205) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"owner\") \"address\") ((\"fa2.py\" 206) type_annotation ((\"fa2.py\" 451) attr ((\"fa2.py\" 444) params) \"token_id\") \"nat\"))) \"balance\")))) (offchain is_operator True (\"fa2.py\" 601) True \"\" (((\"fa2.py\" 602) set_type ((\"fa2.py\" 601) params) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 603))) ((\"fa2.py\" 607) result ((\"fa2.py\" 259) contains ((\"fa2.py\" 608) attr ((\"\" -1) data) \"operators\") ((\"fa2.py\" 249) type_annotation ((\"fa2.py\" 246) record (operator ((\"fa2.py\" 610) attr ((\"fa2.py\" 601) params) \"operator\")) (owner ((\"fa2.py\" 609) attr ((\"fa2.py\" 601) params) \"owner\")) (token_id ((\"fa2.py\" 611) attr ((\"fa2.py\" 601) params) \"token_id\"))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"fa2.py\" 234))))))) (offchain token_metadata True (\"fa2.py\" 559) True \"Get Token Metadata\" (((\"fa2.py\" 556) set_type ((\"fa2.py\" 559) params) \"nat\") ((\"fa2.py\" 557) result ((\"fa2.py\" 557) get_item ((\"fa2.py\" 557) attr ((\"\" -1) data) \"token_metadata\") ((\"fa2.py\" 559) params))))) (offchain total_supply True (\"fa2.py\" 593) True \"\" (((\"fa2.py\" 597) set_type ((\"fa2.py\" 593) params) \"nat\") ((\"fa2.py\" 598) result ((\"fa2.py\" 598) literal (string \"total-supply not supported\"))))))\nentry_points_layout ()\ninitial_metadata ((metadata_base (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"version\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-no_totsup\")))) (elem ((\"fa2.py\" 674) literal (string \"description\")) (meta_expr ((\"fa2.py\" 674) literal (string \"This is a didactic reference implementation of FA2, a.k.a. TZIP-012, using SmartPy.\n\nThis particular contract uses the configuration named: FA2-no_totsup.\")))) (elem ((\"fa2.py\" 674) literal (string \"interfaces\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-012\"))) (meta_expr ((\"fa2.py\" 674) literal (string \"TZIP-016\"))))) (elem ((\"fa2.py\" 674) literal (string \"authors\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"Seb Mondet <https://seb.mondet.org>\"))))) (elem ((\"fa2.py\" 674) literal (string \"homepage\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy\")))) (elem ((\"fa2.py\" 674) literal (string \"views\")) (meta_list (\"fa2.py\" 674) (meta_view \"get_balance\" (\"fa2.py\" 444)) (meta_view \"does_token_exist\" (\"fa2.py\" 580)) (meta_view \"count_tokens\" (\"fa2.py\" 574)) (meta_view \"all_tokens\" (\"fa2.py\" 586)) (meta_view \"is_operator\" (\"fa2.py\" 601)) (meta_view \"token_metadata\" (\"fa2.py\" 559)))) (elem ((\"fa2.py\" 674) literal (string \"source\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"tools\")) (meta_list (\"fa2.py\" 674) (meta_expr ((\"fa2.py\" 674) literal (string \"SmartPy\"))))) (elem ((\"fa2.py\" 674) literal (string \"location\")) (meta_expr ((\"fa2.py\" 674) literal (string \"https://gitlab.com/smondet/fa2-smartpy.git\")))))) (elem ((\"fa2.py\" 674) literal (string \"permissions\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"operator\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-or-operator-transfer\")))) (elem ((\"fa2.py\" 674) literal (string \"receiver\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))) (elem ((\"fa2.py\" 674) literal (string \"sender\")) (meta_expr ((\"fa2.py\" 674) literal (string \"owner-no-hook\")))))) (elem ((\"fa2.py\" 674) literal (string \"fa2-smartpy\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"configuration\")) (meta_map (\"fa2.py\" 674) (elem ((\"fa2.py\" 674) literal (string \"add_mutez_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"allow_self_transfer\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"assume_consecutive_token_ids\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"force_layouts\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"lazy_entry_points\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"name\")) (meta_expr ((\"fa2.py\" 674) literal (string \"FA2-no_totsup\")))) (elem ((\"fa2.py\" 674) literal (string \"non_fungible\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"readable\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"single_asset\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"store_total_supply\")) (meta_expr ((\"fa2.py\" 674) literal (bool False)))) (elem ((\"fa2.py\" 674) literal (string \"support_operator\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))) (elem ((\"fa2.py\" 674) literal (string \"use_token_metadata_offchain_view\")) (meta_expr ((\"fa2.py\" 674) literal (bool True)))))))))))\nbalance ())",
    "id": "((\"\" -1) static_id 0)",
    "line_no": "(\"\" -1)",
    "show": true
   }
  ],
  "kind": "compilation"
 }
]